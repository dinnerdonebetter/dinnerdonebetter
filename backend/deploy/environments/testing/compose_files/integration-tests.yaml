---
services:
  redis:
    logging:
      driver: none
    hostname: worker_queue
    image: redis:7-bullseye
    container_name: redis
    ports:
      - '6379:6379'
    command: ["redis-server", "--cluster-enabled yes"]
  postgres:
    logging:
      driver: none
    container_name: postgres
    hostname: pgdatabase
    image: postgres:17
    environment:
      POSTGRES_DB: 'dinner-done-better'
      POSTGRES_PASSWORD: 'hunter2'
      POSTGRES_USER: 'dbuser'
    ports:
      - '5432:5432'
  api_server:
    hostname: api_server
    container_name: integration_tests_server
    depends_on:
      - postgres
      - redis
    links:
      - postgres
      - redis
    environment:
      USE_NOOP_LOGGER: 'nope'
      CONFIGURATION_FILEPATH: '/etc/routingcfg'
    ports:
      - '8000:8000'
    build:
      context: '../../../'
      dockerfile: 'environments/testing/dockerfiles/integration-server.Dockerfile'
    volumes:
      - source: '../config_files/integration-tests-routingcfg.json'
        target: '/etc/routingcfg'
        type: 'bind'
  # coordination_server:
  #     hostname: coordination_server
  #     container_name: coordination_server
  #     ports:
  #         - '9999:9999'
  #     build:
  #         context: '../../../'
  #         dockerfile: 'environments/testing/dockerfiles/test-coordinator-server.Dockerfile'
  tests:
    environment:
      TARGET_ADDRESS: 'http://api_server:8000'
      TARGET_DATABASE: 'postgres://dbuser:hunter2@pgdatabase:5432/dinner-done-better?sslmode=disable'
    depends_on:
      - postgres
      - redis
      # - coordination_server
    links:
      - postgres
      - api_server
      # - coordination_server
    build:
      context: '../../../'
      dockerfile: 'environments/testing/dockerfiles/integration-tests.Dockerfile'
    container_name: 'integration_tests'
