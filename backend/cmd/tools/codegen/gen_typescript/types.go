package main

import (
	"regexp"
)

var (
	generatedDisclaimer = "// Code generated by gen_typescript. DO NOT EDIT.\n\n"

	// Times I've tried to optimize this regex before realizing it already accounts for
	// every edge case and there is no value (in either performance or readability terms)
	// in making it smaller: 1.
	numberMatcherRegex = regexp.MustCompile(`((u)?int(8|16|32|64)?|float(32|64))`)
)

func isCustomType(x string) bool {
	switch x {
	case "int",
		"int8",
		"int16",
		"int32",
		"int64",
		"uint",
		"uint8",
		"uint16",
		"uint32",
		"uint64",
		"uintptr",
		"float32",
		"float64",
		boolType,
		mapStringToBoolType,
		timeType,
		stringType:
		return false
	default:
		return true
	}
}
