// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.25.0
// source: maintenance.sql

package generated

import (
	"context"
)

const deleteExpiredOAuth2ClientTokens = `-- name: DeleteExpiredOAuth2ClientTokens :execrows
DELETE FROM oauth2_client_tokens WHERE code_expires_at < (NOW() - interval '1 day') AND access_expires_at < (NOW() - interval '1 day') AND refresh_expires_at < (NOW() - interval '1 day')
`

func (q *Queries) DeleteExpiredOAuth2ClientTokens(ctx context.Context, db DBTX) (int64, error) {
	result, err := db.ExecContext(ctx, deleteExpiredOAuth2ClientTokens)
	if err != nil {
		return 0, err
	}
	return result.RowsAffected()
}

const destroyAllData = `-- name: DestroyAllData :exec
TRUNCATE audit_log_entries, household_instrument_ownerships, household_invitations, household_user_memberships, households, meal_components, meal_plan_events, meal_plan_grocery_list_items, meal_plan_option_votes, meal_plan_options, meal_plan_tasks, meal_plans, meals, oauth2_client_tokens, oauth2_clients, password_reset_tokens, recipe_media, recipe_prep_task_steps, recipe_prep_tasks, recipe_ratings, recipe_step_completion_condition_ingredients, recipe_step_completion_conditions, recipe_step_ingredients, recipe_step_instruments, recipe_step_products, recipe_step_vessels, recipe_steps, recipes, service_setting_configurations, service_settings, user_ingredient_preferences, user_notifications, users, valid_ingredient_group_members, valid_ingredient_groups, valid_ingredient_measurement_units, valid_ingredient_preparations, valid_ingredient_state_ingredients, valid_ingredient_states, valid_ingredients, valid_instruments, valid_measurement_unit_conversions, valid_measurement_units, valid_preparation_instruments, valid_preparation_vessels, valid_preparations, valid_vessels, webhook_trigger_events, webhooks CASCADE
`

func (q *Queries) DestroyAllData(ctx context.Context, db DBTX) error {
	_, err := db.ExecContext(ctx, destroyAllData)
	return err
}
