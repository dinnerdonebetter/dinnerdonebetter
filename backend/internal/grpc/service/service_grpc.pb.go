// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.5.1
// - protoc             v5.29.3
// source: service.proto

package service

import (
	context "context"

	messages "github.com/dinnerdonebetter/backend/internal/grpc/messages"

	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.64.0 or later.
const _ = grpc.SupportPackageIsVersion9

const (
	DinnerDoneBetter_Ping_FullMethodName                                                = "/eating.DinnerDoneBetter/Ping"
	DinnerDoneBetter_ExchangeToken_FullMethodName                                       = "/eating.DinnerDoneBetter/ExchangeToken"
	DinnerDoneBetter_AcceptHouseholdInvitation_FullMethodName                           = "/eating.DinnerDoneBetter/AcceptHouseholdInvitation"
	DinnerDoneBetter_AdminLoginForToken_FullMethodName                                  = "/eating.DinnerDoneBetter/AdminLoginForToken"
	DinnerDoneBetter_AdminUpdateUserStatus_FullMethodName                               = "/eating.DinnerDoneBetter/AdminUpdateUserStatus"
	DinnerDoneBetter_AggregateUserDataReport_FullMethodName                             = "/eating.DinnerDoneBetter/AggregateUserDataReport"
	DinnerDoneBetter_ArchiveHousehold_FullMethodName                                    = "/eating.DinnerDoneBetter/ArchiveHousehold"
	DinnerDoneBetter_ArchiveOAuth2Client_FullMethodName                                 = "/eating.DinnerDoneBetter/ArchiveOAuth2Client"
	DinnerDoneBetter_ArchiveServiceSetting_FullMethodName                               = "/eating.DinnerDoneBetter/ArchiveServiceSetting"
	DinnerDoneBetter_ArchiveServiceSettingConfiguration_FullMethodName                  = "/eating.DinnerDoneBetter/ArchiveServiceSettingConfiguration"
	DinnerDoneBetter_ArchiveUser_FullMethodName                                         = "/eating.DinnerDoneBetter/ArchiveUser"
	DinnerDoneBetter_ArchiveUserMembership_FullMethodName                               = "/eating.DinnerDoneBetter/ArchiveUserMembership"
	DinnerDoneBetter_ArchiveWebhook_FullMethodName                                      = "/eating.DinnerDoneBetter/ArchiveWebhook"
	DinnerDoneBetter_ArchiveWebhookTriggerEvent_FullMethodName                          = "/eating.DinnerDoneBetter/ArchiveWebhookTriggerEvent"
	DinnerDoneBetter_CancelHouseholdInvitation_FullMethodName                           = "/eating.DinnerDoneBetter/CancelHouseholdInvitation"
	DinnerDoneBetter_CheckPermissions_FullMethodName                                    = "/eating.DinnerDoneBetter/CheckPermissions"
	DinnerDoneBetter_CreateHousehold_FullMethodName                                     = "/eating.DinnerDoneBetter/CreateHousehold"
	DinnerDoneBetter_CreateHouseholdInvitation_FullMethodName                           = "/eating.DinnerDoneBetter/CreateHouseholdInvitation"
	DinnerDoneBetter_CreateOAuth2Client_FullMethodName                                  = "/eating.DinnerDoneBetter/CreateOAuth2Client"
	DinnerDoneBetter_CreateServiceSetting_FullMethodName                                = "/eating.DinnerDoneBetter/CreateServiceSetting"
	DinnerDoneBetter_CreateServiceSettingConfiguration_FullMethodName                   = "/eating.DinnerDoneBetter/CreateServiceSettingConfiguration"
	DinnerDoneBetter_CreateUser_FullMethodName                                          = "/eating.DinnerDoneBetter/CreateUser"
	DinnerDoneBetter_CreateUserNotification_FullMethodName                              = "/eating.DinnerDoneBetter/CreateUserNotification"
	DinnerDoneBetter_CreateWebhook_FullMethodName                                       = "/eating.DinnerDoneBetter/CreateWebhook"
	DinnerDoneBetter_CreateWebhookTriggerEvent_FullMethodName                           = "/eating.DinnerDoneBetter/CreateWebhookTriggerEvent"
	DinnerDoneBetter_DestroyAllUserData_FullMethodName                                  = "/eating.DinnerDoneBetter/DestroyAllUserData"
	DinnerDoneBetter_FetchUserDataReport_FullMethodName                                 = "/eating.DinnerDoneBetter/FetchUserDataReport"
	DinnerDoneBetter_GetActiveHousehold_FullMethodName                                  = "/eating.DinnerDoneBetter/GetActiveHousehold"
	DinnerDoneBetter_GetAuditLogEntriesForHousehold_FullMethodName                      = "/eating.DinnerDoneBetter/GetAuditLogEntriesForHousehold"
	DinnerDoneBetter_GetAuditLogEntriesForUser_FullMethodName                           = "/eating.DinnerDoneBetter/GetAuditLogEntriesForUser"
	DinnerDoneBetter_GetAuditLogEntryByID_FullMethodName                                = "/eating.DinnerDoneBetter/GetAuditLogEntryByID"
	DinnerDoneBetter_GetAuthStatus_FullMethodName                                       = "/eating.DinnerDoneBetter/GetAuthStatus"
	DinnerDoneBetter_GetHousehold_FullMethodName                                        = "/eating.DinnerDoneBetter/GetHousehold"
	DinnerDoneBetter_GetHouseholdInvitation_FullMethodName                              = "/eating.DinnerDoneBetter/GetHouseholdInvitation"
	DinnerDoneBetter_GetHouseholdInvitationByID_FullMethodName                          = "/eating.DinnerDoneBetter/GetHouseholdInvitationByID"
	DinnerDoneBetter_GetHouseholds_FullMethodName                                       = "/eating.DinnerDoneBetter/GetHouseholds"
	DinnerDoneBetter_GetOAuth2Client_FullMethodName                                     = "/eating.DinnerDoneBetter/GetOAuth2Client"
	DinnerDoneBetter_GetOAuth2Clients_FullMethodName                                    = "/eating.DinnerDoneBetter/GetOAuth2Clients"
	DinnerDoneBetter_GetReceivedHouseholdInvitations_FullMethodName                     = "/eating.DinnerDoneBetter/GetReceivedHouseholdInvitations"
	DinnerDoneBetter_GetSelf_FullMethodName                                             = "/eating.DinnerDoneBetter/GetSelf"
	DinnerDoneBetter_GetSentHouseholdInvitations_FullMethodName                         = "/eating.DinnerDoneBetter/GetSentHouseholdInvitations"
	DinnerDoneBetter_GetServiceSetting_FullMethodName                                   = "/eating.DinnerDoneBetter/GetServiceSetting"
	DinnerDoneBetter_GetServiceSettingConfigurationByName_FullMethodName                = "/eating.DinnerDoneBetter/GetServiceSettingConfigurationByName"
	DinnerDoneBetter_GetServiceSettingConfigurationsForHousehold_FullMethodName         = "/eating.DinnerDoneBetter/GetServiceSettingConfigurationsForHousehold"
	DinnerDoneBetter_GetServiceSettingConfigurationsForUser_FullMethodName              = "/eating.DinnerDoneBetter/GetServiceSettingConfigurationsForUser"
	DinnerDoneBetter_GetServiceSettings_FullMethodName                                  = "/eating.DinnerDoneBetter/GetServiceSettings"
	DinnerDoneBetter_GetUser_FullMethodName                                             = "/eating.DinnerDoneBetter/GetUser"
	DinnerDoneBetter_GetUserNotification_FullMethodName                                 = "/eating.DinnerDoneBetter/GetUserNotification"
	DinnerDoneBetter_GetUserNotifications_FullMethodName                                = "/eating.DinnerDoneBetter/GetUserNotifications"
	DinnerDoneBetter_GetUsers_FullMethodName                                            = "/eating.DinnerDoneBetter/GetUsers"
	DinnerDoneBetter_GetWebhook_FullMethodName                                          = "/eating.DinnerDoneBetter/GetWebhook"
	DinnerDoneBetter_GetWebhooks_FullMethodName                                         = "/eating.DinnerDoneBetter/GetWebhooks"
	DinnerDoneBetter_LoginForToken_FullMethodName                                       = "/eating.DinnerDoneBetter/LoginForToken"
	DinnerDoneBetter_PublishArbitraryQueueMessage_FullMethodName                        = "/eating.DinnerDoneBetter/PublishArbitraryQueueMessage"
	DinnerDoneBetter_RedeemPasswordResetToken_FullMethodName                            = "/eating.DinnerDoneBetter/RedeemPasswordResetToken"
	DinnerDoneBetter_RefreshTOTPSecret_FullMethodName                                   = "/eating.DinnerDoneBetter/RefreshTOTPSecret"
	DinnerDoneBetter_RejectHouseholdInvitation_FullMethodName                           = "/eating.DinnerDoneBetter/RejectHouseholdInvitation"
	DinnerDoneBetter_RequestEmailVerificationEmail_FullMethodName                       = "/eating.DinnerDoneBetter/RequestEmailVerificationEmail"
	DinnerDoneBetter_RequestPasswordResetToken_FullMethodName                           = "/eating.DinnerDoneBetter/RequestPasswordResetToken"
	DinnerDoneBetter_RequestUsernameReminder_FullMethodName                             = "/eating.DinnerDoneBetter/RequestUsernameReminder"
	DinnerDoneBetter_SearchForServiceSettings_FullMethodName                            = "/eating.DinnerDoneBetter/SearchForServiceSettings"
	DinnerDoneBetter_SearchForUsers_FullMethodName                                      = "/eating.DinnerDoneBetter/SearchForUsers"
	DinnerDoneBetter_SetDefaultHousehold_FullMethodName                                 = "/eating.DinnerDoneBetter/SetDefaultHousehold"
	DinnerDoneBetter_TransferHouseholdOwnership_FullMethodName                          = "/eating.DinnerDoneBetter/TransferHouseholdOwnership"
	DinnerDoneBetter_UpdateHousehold_FullMethodName                                     = "/eating.DinnerDoneBetter/UpdateHousehold"
	DinnerDoneBetter_UpdateHouseholdMemberPermissions_FullMethodName                    = "/eating.DinnerDoneBetter/UpdateHouseholdMemberPermissions"
	DinnerDoneBetter_UpdatePassword_FullMethodName                                      = "/eating.DinnerDoneBetter/UpdatePassword"
	DinnerDoneBetter_UpdateServiceSettingConfiguration_FullMethodName                   = "/eating.DinnerDoneBetter/UpdateServiceSettingConfiguration"
	DinnerDoneBetter_UpdateUserDetails_FullMethodName                                   = "/eating.DinnerDoneBetter/UpdateUserDetails"
	DinnerDoneBetter_UpdateUserEmailAddress_FullMethodName                              = "/eating.DinnerDoneBetter/UpdateUserEmailAddress"
	DinnerDoneBetter_UpdateUserNotification_FullMethodName                              = "/eating.DinnerDoneBetter/UpdateUserNotification"
	DinnerDoneBetter_UpdateUserUsername_FullMethodName                                  = "/eating.DinnerDoneBetter/UpdateUserUsername"
	DinnerDoneBetter_UploadUserAvatar_FullMethodName                                    = "/eating.DinnerDoneBetter/UploadUserAvatar"
	DinnerDoneBetter_VerifyEmailAddress_FullMethodName                                  = "/eating.DinnerDoneBetter/VerifyEmailAddress"
	DinnerDoneBetter_VerifyTOTPSecret_FullMethodName                                    = "/eating.DinnerDoneBetter/VerifyTOTPSecret"
	DinnerDoneBetter_ArchiveMeal_FullMethodName                                         = "/eating.DinnerDoneBetter/ArchiveMeal"
	DinnerDoneBetter_ArchiveMealPlan_FullMethodName                                     = "/eating.DinnerDoneBetter/ArchiveMealPlan"
	DinnerDoneBetter_ArchiveMealPlanEvent_FullMethodName                                = "/eating.DinnerDoneBetter/ArchiveMealPlanEvent"
	DinnerDoneBetter_ArchiveMealPlanGroceryListItem_FullMethodName                      = "/eating.DinnerDoneBetter/ArchiveMealPlanGroceryListItem"
	DinnerDoneBetter_ArchiveMealPlanOption_FullMethodName                               = "/eating.DinnerDoneBetter/ArchiveMealPlanOption"
	DinnerDoneBetter_ArchiveMealPlanOptionVote_FullMethodName                           = "/eating.DinnerDoneBetter/ArchiveMealPlanOptionVote"
	DinnerDoneBetter_ArchiveRecipe_FullMethodName                                       = "/eating.DinnerDoneBetter/ArchiveRecipe"
	DinnerDoneBetter_ArchiveRecipePrepTask_FullMethodName                               = "/eating.DinnerDoneBetter/ArchiveRecipePrepTask"
	DinnerDoneBetter_ArchiveRecipeRating_FullMethodName                                 = "/eating.DinnerDoneBetter/ArchiveRecipeRating"
	DinnerDoneBetter_ArchiveRecipeStep_FullMethodName                                   = "/eating.DinnerDoneBetter/ArchiveRecipeStep"
	DinnerDoneBetter_ArchiveRecipeStepCompletionCondition_FullMethodName                = "/eating.DinnerDoneBetter/ArchiveRecipeStepCompletionCondition"
	DinnerDoneBetter_ArchiveRecipeStepIngredient_FullMethodName                         = "/eating.DinnerDoneBetter/ArchiveRecipeStepIngredient"
	DinnerDoneBetter_ArchiveRecipeStepInstrument_FullMethodName                         = "/eating.DinnerDoneBetter/ArchiveRecipeStepInstrument"
	DinnerDoneBetter_ArchiveRecipeStepProduct_FullMethodName                            = "/eating.DinnerDoneBetter/ArchiveRecipeStepProduct"
	DinnerDoneBetter_ArchiveRecipeStepVessel_FullMethodName                             = "/eating.DinnerDoneBetter/ArchiveRecipeStepVessel"
	DinnerDoneBetter_ArchiveValidIngredient_FullMethodName                              = "/eating.DinnerDoneBetter/ArchiveValidIngredient"
	DinnerDoneBetter_ArchiveValidIngredientGroup_FullMethodName                         = "/eating.DinnerDoneBetter/ArchiveValidIngredientGroup"
	DinnerDoneBetter_ArchiveValidIngredientMeasurementUnit_FullMethodName               = "/eating.DinnerDoneBetter/ArchiveValidIngredientMeasurementUnit"
	DinnerDoneBetter_ArchiveValidIngredientPreparation_FullMethodName                   = "/eating.DinnerDoneBetter/ArchiveValidIngredientPreparation"
	DinnerDoneBetter_ArchiveValidIngredientState_FullMethodName                         = "/eating.DinnerDoneBetter/ArchiveValidIngredientState"
	DinnerDoneBetter_ArchiveValidIngredientStateIngredient_FullMethodName               = "/eating.DinnerDoneBetter/ArchiveValidIngredientStateIngredient"
	DinnerDoneBetter_ArchiveValidInstrument_FullMethodName                              = "/eating.DinnerDoneBetter/ArchiveValidInstrument"
	DinnerDoneBetter_ArchiveValidMeasurementUnit_FullMethodName                         = "/eating.DinnerDoneBetter/ArchiveValidMeasurementUnit"
	DinnerDoneBetter_ArchiveValidMeasurementUnitConversion_FullMethodName               = "/eating.DinnerDoneBetter/ArchiveValidMeasurementUnitConversion"
	DinnerDoneBetter_ArchiveValidPreparation_FullMethodName                             = "/eating.DinnerDoneBetter/ArchiveValidPreparation"
	DinnerDoneBetter_ArchiveValidPreparationInstrument_FullMethodName                   = "/eating.DinnerDoneBetter/ArchiveValidPreparationInstrument"
	DinnerDoneBetter_ArchiveValidPreparationVessel_FullMethodName                       = "/eating.DinnerDoneBetter/ArchiveValidPreparationVessel"
	DinnerDoneBetter_ArchiveValidVessel_FullMethodName                                  = "/eating.DinnerDoneBetter/ArchiveValidVessel"
	DinnerDoneBetter_CloneRecipe_FullMethodName                                         = "/eating.DinnerDoneBetter/CloneRecipe"
	DinnerDoneBetter_CreateMeal_FullMethodName                                          = "/eating.DinnerDoneBetter/CreateMeal"
	DinnerDoneBetter_CreateMealPlan_FullMethodName                                      = "/eating.DinnerDoneBetter/CreateMealPlan"
	DinnerDoneBetter_CreateMealPlanEvent_FullMethodName                                 = "/eating.DinnerDoneBetter/CreateMealPlanEvent"
	DinnerDoneBetter_CreateMealPlanGroceryListItem_FullMethodName                       = "/eating.DinnerDoneBetter/CreateMealPlanGroceryListItem"
	DinnerDoneBetter_CreateMealPlanOption_FullMethodName                                = "/eating.DinnerDoneBetter/CreateMealPlanOption"
	DinnerDoneBetter_CreateMealPlanOptionVote_FullMethodName                            = "/eating.DinnerDoneBetter/CreateMealPlanOptionVote"
	DinnerDoneBetter_CreateMealPlanTask_FullMethodName                                  = "/eating.DinnerDoneBetter/CreateMealPlanTask"
	DinnerDoneBetter_CreateRecipe_FullMethodName                                        = "/eating.DinnerDoneBetter/CreateRecipe"
	DinnerDoneBetter_CreateRecipePrepTask_FullMethodName                                = "/eating.DinnerDoneBetter/CreateRecipePrepTask"
	DinnerDoneBetter_CreateRecipeRating_FullMethodName                                  = "/eating.DinnerDoneBetter/CreateRecipeRating"
	DinnerDoneBetter_CreateRecipeStep_FullMethodName                                    = "/eating.DinnerDoneBetter/CreateRecipeStep"
	DinnerDoneBetter_CreateRecipeStepCompletionCondition_FullMethodName                 = "/eating.DinnerDoneBetter/CreateRecipeStepCompletionCondition"
	DinnerDoneBetter_CreateRecipeStepIngredient_FullMethodName                          = "/eating.DinnerDoneBetter/CreateRecipeStepIngredient"
	DinnerDoneBetter_CreateRecipeStepInstrument_FullMethodName                          = "/eating.DinnerDoneBetter/CreateRecipeStepInstrument"
	DinnerDoneBetter_CreateRecipeStepProduct_FullMethodName                             = "/eating.DinnerDoneBetter/CreateRecipeStepProduct"
	DinnerDoneBetter_CreateRecipeStepVessel_FullMethodName                              = "/eating.DinnerDoneBetter/CreateRecipeStepVessel"
	DinnerDoneBetter_CreateValidIngredient_FullMethodName                               = "/eating.DinnerDoneBetter/CreateValidIngredient"
	DinnerDoneBetter_CreateValidIngredientGroup_FullMethodName                          = "/eating.DinnerDoneBetter/CreateValidIngredientGroup"
	DinnerDoneBetter_CreateValidIngredientMeasurementUnit_FullMethodName                = "/eating.DinnerDoneBetter/CreateValidIngredientMeasurementUnit"
	DinnerDoneBetter_CreateValidIngredientPreparation_FullMethodName                    = "/eating.DinnerDoneBetter/CreateValidIngredientPreparation"
	DinnerDoneBetter_CreateValidIngredientState_FullMethodName                          = "/eating.DinnerDoneBetter/CreateValidIngredientState"
	DinnerDoneBetter_CreateValidIngredientStateIngredient_FullMethodName                = "/eating.DinnerDoneBetter/CreateValidIngredientStateIngredient"
	DinnerDoneBetter_CreateValidInstrument_FullMethodName                               = "/eating.DinnerDoneBetter/CreateValidInstrument"
	DinnerDoneBetter_CreateValidMeasurementUnit_FullMethodName                          = "/eating.DinnerDoneBetter/CreateValidMeasurementUnit"
	DinnerDoneBetter_CreateValidMeasurementUnitConversion_FullMethodName                = "/eating.DinnerDoneBetter/CreateValidMeasurementUnitConversion"
	DinnerDoneBetter_CreateValidPreparation_FullMethodName                              = "/eating.DinnerDoneBetter/CreateValidPreparation"
	DinnerDoneBetter_CreateValidPreparationInstrument_FullMethodName                    = "/eating.DinnerDoneBetter/CreateValidPreparationInstrument"
	DinnerDoneBetter_CreateValidPreparationVessel_FullMethodName                        = "/eating.DinnerDoneBetter/CreateValidPreparationVessel"
	DinnerDoneBetter_CreateValidVessel_FullMethodName                                   = "/eating.DinnerDoneBetter/CreateValidVessel"
	DinnerDoneBetter_FinalizeMealPlan_FullMethodName                                    = "/eating.DinnerDoneBetter/FinalizeMealPlan"
	DinnerDoneBetter_GetMeal_FullMethodName                                             = "/eating.DinnerDoneBetter/GetMeal"
	DinnerDoneBetter_GetMealPlan_FullMethodName                                         = "/eating.DinnerDoneBetter/GetMealPlan"
	DinnerDoneBetter_GetMealPlanEvent_FullMethodName                                    = "/eating.DinnerDoneBetter/GetMealPlanEvent"
	DinnerDoneBetter_GetMealPlanEvents_FullMethodName                                   = "/eating.DinnerDoneBetter/GetMealPlanEvents"
	DinnerDoneBetter_GetMealPlanGroceryListItem_FullMethodName                          = "/eating.DinnerDoneBetter/GetMealPlanGroceryListItem"
	DinnerDoneBetter_GetMealPlanGroceryListItemsForMealPlan_FullMethodName              = "/eating.DinnerDoneBetter/GetMealPlanGroceryListItemsForMealPlan"
	DinnerDoneBetter_GetMealPlanOption_FullMethodName                                   = "/eating.DinnerDoneBetter/GetMealPlanOption"
	DinnerDoneBetter_GetMealPlanOptionVote_FullMethodName                               = "/eating.DinnerDoneBetter/GetMealPlanOptionVote"
	DinnerDoneBetter_GetMealPlanOptionVotes_FullMethodName                              = "/eating.DinnerDoneBetter/GetMealPlanOptionVotes"
	DinnerDoneBetter_GetMealPlanOptions_FullMethodName                                  = "/eating.DinnerDoneBetter/GetMealPlanOptions"
	DinnerDoneBetter_GetMealPlanTask_FullMethodName                                     = "/eating.DinnerDoneBetter/GetMealPlanTask"
	DinnerDoneBetter_GetMealPlanTasks_FullMethodName                                    = "/eating.DinnerDoneBetter/GetMealPlanTasks"
	DinnerDoneBetter_GetMealPlansForHousehold_FullMethodName                            = "/eating.DinnerDoneBetter/GetMealPlansForHousehold"
	DinnerDoneBetter_GetMeals_FullMethodName                                            = "/eating.DinnerDoneBetter/GetMeals"
	DinnerDoneBetter_GetMermaidDiagramForRecipe_FullMethodName                          = "/eating.DinnerDoneBetter/GetMermaidDiagramForRecipe"
	DinnerDoneBetter_GetRandomValidIngredient_FullMethodName                            = "/eating.DinnerDoneBetter/GetRandomValidIngredient"
	DinnerDoneBetter_GetRandomValidInstrument_FullMethodName                            = "/eating.DinnerDoneBetter/GetRandomValidInstrument"
	DinnerDoneBetter_GetRandomValidPreparation_FullMethodName                           = "/eating.DinnerDoneBetter/GetRandomValidPreparation"
	DinnerDoneBetter_GetRandomValidVessel_FullMethodName                                = "/eating.DinnerDoneBetter/GetRandomValidVessel"
	DinnerDoneBetter_GetRecipe_FullMethodName                                           = "/eating.DinnerDoneBetter/GetRecipe"
	DinnerDoneBetter_GetRecipeMealPlanTasks_FullMethodName                              = "/eating.DinnerDoneBetter/GetRecipeMealPlanTasks"
	DinnerDoneBetter_GetRecipePrepTask_FullMethodName                                   = "/eating.DinnerDoneBetter/GetRecipePrepTask"
	DinnerDoneBetter_GetRecipePrepTasks_FullMethodName                                  = "/eating.DinnerDoneBetter/GetRecipePrepTasks"
	DinnerDoneBetter_GetRecipeRating_FullMethodName                                     = "/eating.DinnerDoneBetter/GetRecipeRating"
	DinnerDoneBetter_GetRecipeRatingsForRecipe_FullMethodName                           = "/eating.DinnerDoneBetter/GetRecipeRatingsForRecipe"
	DinnerDoneBetter_GetRecipeStep_FullMethodName                                       = "/eating.DinnerDoneBetter/GetRecipeStep"
	DinnerDoneBetter_GetRecipeStepCompletionCondition_FullMethodName                    = "/eating.DinnerDoneBetter/GetRecipeStepCompletionCondition"
	DinnerDoneBetter_GetRecipeStepCompletionConditions_FullMethodName                   = "/eating.DinnerDoneBetter/GetRecipeStepCompletionConditions"
	DinnerDoneBetter_GetRecipeStepIngredient_FullMethodName                             = "/eating.DinnerDoneBetter/GetRecipeStepIngredient"
	DinnerDoneBetter_GetRecipeStepIngredients_FullMethodName                            = "/eating.DinnerDoneBetter/GetRecipeStepIngredients"
	DinnerDoneBetter_GetRecipeStepInstrument_FullMethodName                             = "/eating.DinnerDoneBetter/GetRecipeStepInstrument"
	DinnerDoneBetter_GetRecipeStepInstruments_FullMethodName                            = "/eating.DinnerDoneBetter/GetRecipeStepInstruments"
	DinnerDoneBetter_GetRecipeStepProduct_FullMethodName                                = "/eating.DinnerDoneBetter/GetRecipeStepProduct"
	DinnerDoneBetter_GetRecipeStepProducts_FullMethodName                               = "/eating.DinnerDoneBetter/GetRecipeStepProducts"
	DinnerDoneBetter_GetRecipeStepVessel_FullMethodName                                 = "/eating.DinnerDoneBetter/GetRecipeStepVessel"
	DinnerDoneBetter_GetRecipeStepVessels_FullMethodName                                = "/eating.DinnerDoneBetter/GetRecipeStepVessels"
	DinnerDoneBetter_GetRecipeSteps_FullMethodName                                      = "/eating.DinnerDoneBetter/GetRecipeSteps"
	DinnerDoneBetter_GetRecipes_FullMethodName                                          = "/eating.DinnerDoneBetter/GetRecipes"
	DinnerDoneBetter_GetValidIngredient_FullMethodName                                  = "/eating.DinnerDoneBetter/GetValidIngredient"
	DinnerDoneBetter_GetValidIngredientGroup_FullMethodName                             = "/eating.DinnerDoneBetter/GetValidIngredientGroup"
	DinnerDoneBetter_GetValidIngredientGroups_FullMethodName                            = "/eating.DinnerDoneBetter/GetValidIngredientGroups"
	DinnerDoneBetter_GetValidIngredientMeasurementUnit_FullMethodName                   = "/eating.DinnerDoneBetter/GetValidIngredientMeasurementUnit"
	DinnerDoneBetter_GetValidIngredientMeasurementUnits_FullMethodName                  = "/eating.DinnerDoneBetter/GetValidIngredientMeasurementUnits"
	DinnerDoneBetter_GetValidIngredientMeasurementUnitsByIngredient_FullMethodName      = "/eating.DinnerDoneBetter/GetValidIngredientMeasurementUnitsByIngredient"
	DinnerDoneBetter_GetValidIngredientMeasurementUnitsByMeasurementUnit_FullMethodName = "/eating.DinnerDoneBetter/GetValidIngredientMeasurementUnitsByMeasurementUnit"
	DinnerDoneBetter_GetValidIngredientPreparation_FullMethodName                       = "/eating.DinnerDoneBetter/GetValidIngredientPreparation"
	DinnerDoneBetter_GetValidIngredientPreparations_FullMethodName                      = "/eating.DinnerDoneBetter/GetValidIngredientPreparations"
	DinnerDoneBetter_GetValidIngredientPreparationsByIngredient_FullMethodName          = "/eating.DinnerDoneBetter/GetValidIngredientPreparationsByIngredient"
	DinnerDoneBetter_GetValidIngredientPreparationsByPreparation_FullMethodName         = "/eating.DinnerDoneBetter/GetValidIngredientPreparationsByPreparation"
	DinnerDoneBetter_GetValidIngredientState_FullMethodName                             = "/eating.DinnerDoneBetter/GetValidIngredientState"
	DinnerDoneBetter_GetValidIngredientStateIngredient_FullMethodName                   = "/eating.DinnerDoneBetter/GetValidIngredientStateIngredient"
	DinnerDoneBetter_GetValidIngredientStateIngredients_FullMethodName                  = "/eating.DinnerDoneBetter/GetValidIngredientStateIngredients"
	DinnerDoneBetter_GetValidIngredientStateIngredientsByIngredient_FullMethodName      = "/eating.DinnerDoneBetter/GetValidIngredientStateIngredientsByIngredient"
	DinnerDoneBetter_GetValidIngredientStateIngredientsByIngredientState_FullMethodName = "/eating.DinnerDoneBetter/GetValidIngredientStateIngredientsByIngredientState"
	DinnerDoneBetter_GetValidIngredientStates_FullMethodName                            = "/eating.DinnerDoneBetter/GetValidIngredientStates"
	DinnerDoneBetter_GetValidIngredients_FullMethodName                                 = "/eating.DinnerDoneBetter/GetValidIngredients"
	DinnerDoneBetter_GetValidInstrument_FullMethodName                                  = "/eating.DinnerDoneBetter/GetValidInstrument"
	DinnerDoneBetter_GetValidInstruments_FullMethodName                                 = "/eating.DinnerDoneBetter/GetValidInstruments"
	DinnerDoneBetter_GetValidMeasurementUnit_FullMethodName                             = "/eating.DinnerDoneBetter/GetValidMeasurementUnit"
	DinnerDoneBetter_GetValidMeasurementUnitConversion_FullMethodName                   = "/eating.DinnerDoneBetter/GetValidMeasurementUnitConversion"
	DinnerDoneBetter_GetValidMeasurementUnitConversionsFromUnit_FullMethodName          = "/eating.DinnerDoneBetter/GetValidMeasurementUnitConversionsFromUnit"
	DinnerDoneBetter_GetValidMeasurementUnitConversionsToUnit_FullMethodName            = "/eating.DinnerDoneBetter/GetValidMeasurementUnitConversionsToUnit"
	DinnerDoneBetter_GetValidMeasurementUnits_FullMethodName                            = "/eating.DinnerDoneBetter/GetValidMeasurementUnits"
	DinnerDoneBetter_GetValidPreparation_FullMethodName                                 = "/eating.DinnerDoneBetter/GetValidPreparation"
	DinnerDoneBetter_GetValidPreparationInstrument_FullMethodName                       = "/eating.DinnerDoneBetter/GetValidPreparationInstrument"
	DinnerDoneBetter_GetValidPreparationInstruments_FullMethodName                      = "/eating.DinnerDoneBetter/GetValidPreparationInstruments"
	DinnerDoneBetter_GetValidPreparationInstrumentsByInstrument_FullMethodName          = "/eating.DinnerDoneBetter/GetValidPreparationInstrumentsByInstrument"
	DinnerDoneBetter_GetValidPreparationInstrumentsByPreparation_FullMethodName         = "/eating.DinnerDoneBetter/GetValidPreparationInstrumentsByPreparation"
	DinnerDoneBetter_GetValidPreparationVessel_FullMethodName                           = "/eating.DinnerDoneBetter/GetValidPreparationVessel"
	DinnerDoneBetter_GetValidPreparationVessels_FullMethodName                          = "/eating.DinnerDoneBetter/GetValidPreparationVessels"
	DinnerDoneBetter_GetValidPreparationVesselsByPreparation_FullMethodName             = "/eating.DinnerDoneBetter/GetValidPreparationVesselsByPreparation"
	DinnerDoneBetter_GetValidPreparationVesselsByVessel_FullMethodName                  = "/eating.DinnerDoneBetter/GetValidPreparationVesselsByVessel"
	DinnerDoneBetter_GetValidPreparations_FullMethodName                                = "/eating.DinnerDoneBetter/GetValidPreparations"
	DinnerDoneBetter_GetValidVessel_FullMethodName                                      = "/eating.DinnerDoneBetter/GetValidVessel"
	DinnerDoneBetter_GetValidVessels_FullMethodName                                     = "/eating.DinnerDoneBetter/GetValidVessels"
	DinnerDoneBetter_RunFinalizeMealPlanWorker_FullMethodName                           = "/eating.DinnerDoneBetter/RunFinalizeMealPlanWorker"
	DinnerDoneBetter_RunMealPlanGroceryListInitializerWorker_FullMethodName             = "/eating.DinnerDoneBetter/RunMealPlanGroceryListInitializerWorker"
	DinnerDoneBetter_RunMealPlanTaskCreatorWorker_FullMethodName                        = "/eating.DinnerDoneBetter/RunMealPlanTaskCreatorWorker"
	DinnerDoneBetter_SearchForMeals_FullMethodName                                      = "/eating.DinnerDoneBetter/SearchForMeals"
	DinnerDoneBetter_SearchForRecipes_FullMethodName                                    = "/eating.DinnerDoneBetter/SearchForRecipes"
	DinnerDoneBetter_SearchForValidIngredientGroups_FullMethodName                      = "/eating.DinnerDoneBetter/SearchForValidIngredientGroups"
	DinnerDoneBetter_SearchForValidIngredientStates_FullMethodName                      = "/eating.DinnerDoneBetter/SearchForValidIngredientStates"
	DinnerDoneBetter_SearchForValidIngredients_FullMethodName                           = "/eating.DinnerDoneBetter/SearchForValidIngredients"
	DinnerDoneBetter_SearchForValidInstruments_FullMethodName                           = "/eating.DinnerDoneBetter/SearchForValidInstruments"
	DinnerDoneBetter_SearchForValidMeasurementUnits_FullMethodName                      = "/eating.DinnerDoneBetter/SearchForValidMeasurementUnits"
	DinnerDoneBetter_SearchForValidPreparations_FullMethodName                          = "/eating.DinnerDoneBetter/SearchForValidPreparations"
	DinnerDoneBetter_SearchForValidVessels_FullMethodName                               = "/eating.DinnerDoneBetter/SearchForValidVessels"
	DinnerDoneBetter_SearchValidIngredientsByPreparation_FullMethodName                 = "/eating.DinnerDoneBetter/SearchValidIngredientsByPreparation"
	DinnerDoneBetter_SearchValidMeasurementUnitsByIngredient_FullMethodName             = "/eating.DinnerDoneBetter/SearchValidMeasurementUnitsByIngredient"
	DinnerDoneBetter_UpdateMealPlan_FullMethodName                                      = "/eating.DinnerDoneBetter/UpdateMealPlan"
	DinnerDoneBetter_UpdateMealPlanEvent_FullMethodName                                 = "/eating.DinnerDoneBetter/UpdateMealPlanEvent"
	DinnerDoneBetter_UpdateMealPlanGroceryListItem_FullMethodName                       = "/eating.DinnerDoneBetter/UpdateMealPlanGroceryListItem"
	DinnerDoneBetter_UpdateMealPlanOption_FullMethodName                                = "/eating.DinnerDoneBetter/UpdateMealPlanOption"
	DinnerDoneBetter_UpdateMealPlanOptionVote_FullMethodName                            = "/eating.DinnerDoneBetter/UpdateMealPlanOptionVote"
	DinnerDoneBetter_UpdateMealPlanTaskStatus_FullMethodName                            = "/eating.DinnerDoneBetter/UpdateMealPlanTaskStatus"
	DinnerDoneBetter_UpdateRecipe_FullMethodName                                        = "/eating.DinnerDoneBetter/UpdateRecipe"
	DinnerDoneBetter_UpdateRecipePrepTask_FullMethodName                                = "/eating.DinnerDoneBetter/UpdateRecipePrepTask"
	DinnerDoneBetter_UpdateRecipeRating_FullMethodName                                  = "/eating.DinnerDoneBetter/UpdateRecipeRating"
	DinnerDoneBetter_UpdateRecipeStep_FullMethodName                                    = "/eating.DinnerDoneBetter/UpdateRecipeStep"
	DinnerDoneBetter_UpdateRecipeStepCompletionCondition_FullMethodName                 = "/eating.DinnerDoneBetter/UpdateRecipeStepCompletionCondition"
	DinnerDoneBetter_UpdateRecipeStepIngredient_FullMethodName                          = "/eating.DinnerDoneBetter/UpdateRecipeStepIngredient"
	DinnerDoneBetter_UpdateRecipeStepInstrument_FullMethodName                          = "/eating.DinnerDoneBetter/UpdateRecipeStepInstrument"
	DinnerDoneBetter_UpdateRecipeStepProduct_FullMethodName                             = "/eating.DinnerDoneBetter/UpdateRecipeStepProduct"
	DinnerDoneBetter_UpdateRecipeStepVessel_FullMethodName                              = "/eating.DinnerDoneBetter/UpdateRecipeStepVessel"
	DinnerDoneBetter_UpdateValidIngredient_FullMethodName                               = "/eating.DinnerDoneBetter/UpdateValidIngredient"
	DinnerDoneBetter_UpdateValidIngredientGroup_FullMethodName                          = "/eating.DinnerDoneBetter/UpdateValidIngredientGroup"
	DinnerDoneBetter_UpdateValidIngredientMeasurementUnit_FullMethodName                = "/eating.DinnerDoneBetter/UpdateValidIngredientMeasurementUnit"
	DinnerDoneBetter_UpdateValidIngredientPreparation_FullMethodName                    = "/eating.DinnerDoneBetter/UpdateValidIngredientPreparation"
	DinnerDoneBetter_UpdateValidIngredientState_FullMethodName                          = "/eating.DinnerDoneBetter/UpdateValidIngredientState"
	DinnerDoneBetter_UpdateValidIngredientStateIngredient_FullMethodName                = "/eating.DinnerDoneBetter/UpdateValidIngredientStateIngredient"
	DinnerDoneBetter_UpdateValidInstrument_FullMethodName                               = "/eating.DinnerDoneBetter/UpdateValidInstrument"
	DinnerDoneBetter_UpdateValidMeasurementUnit_FullMethodName                          = "/eating.DinnerDoneBetter/UpdateValidMeasurementUnit"
	DinnerDoneBetter_UpdateValidMeasurementUnitConversion_FullMethodName                = "/eating.DinnerDoneBetter/UpdateValidMeasurementUnitConversion"
	DinnerDoneBetter_UpdateValidPreparation_FullMethodName                              = "/eating.DinnerDoneBetter/UpdateValidPreparation"
	DinnerDoneBetter_UpdateValidPreparationInstrument_FullMethodName                    = "/eating.DinnerDoneBetter/UpdateValidPreparationInstrument"
	DinnerDoneBetter_UpdateValidPreparationVessel_FullMethodName                        = "/eating.DinnerDoneBetter/UpdateValidPreparationVessel"
	DinnerDoneBetter_UpdateValidVessel_FullMethodName                                   = "/eating.DinnerDoneBetter/UpdateValidVessel"
	DinnerDoneBetter_ArchiveHouseholdInstrumentOwnership_FullMethodName                 = "/eating.DinnerDoneBetter/ArchiveHouseholdInstrumentOwnership"
	DinnerDoneBetter_ArchiveUserIngredientPreference_FullMethodName                     = "/eating.DinnerDoneBetter/ArchiveUserIngredientPreference"
	DinnerDoneBetter_CreateHouseholdInstrumentOwnership_FullMethodName                  = "/eating.DinnerDoneBetter/CreateHouseholdInstrumentOwnership"
	DinnerDoneBetter_CreateUserIngredientPreference_FullMethodName                      = "/eating.DinnerDoneBetter/CreateUserIngredientPreference"
	DinnerDoneBetter_GetHouseholdInstrumentOwnership_FullMethodName                     = "/eating.DinnerDoneBetter/GetHouseholdInstrumentOwnership"
	DinnerDoneBetter_GetHouseholdInstrumentOwnerships_FullMethodName                    = "/eating.DinnerDoneBetter/GetHouseholdInstrumentOwnerships"
	DinnerDoneBetter_GetUserIngredientPreferences_FullMethodName                        = "/eating.DinnerDoneBetter/GetUserIngredientPreferences"
	DinnerDoneBetter_UpdateHouseholdInstrumentOwnership_FullMethodName                  = "/eating.DinnerDoneBetter/UpdateHouseholdInstrumentOwnership"
	DinnerDoneBetter_UpdateUserIngredientPreference_FullMethodName                      = "/eating.DinnerDoneBetter/UpdateUserIngredientPreference"
)

// DinnerDoneBetterClient is the client API for DinnerDoneBetter service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type DinnerDoneBetterClient interface {
	Ping(ctx context.Context, in *messages.PingRequest, opts ...grpc.CallOption) (*messages.PingResponse, error)
	ExchangeToken(ctx context.Context, in *messages.ExchangeTokenRequest, opts ...grpc.CallOption) (*messages.ExchangeTokenResponse, error)
	AcceptHouseholdInvitation(ctx context.Context, in *messages.AcceptHouseholdInvitationRequest, opts ...grpc.CallOption) (*messages.AcceptHouseholdInvitationResponse, error)
	AdminLoginForToken(ctx context.Context, in *messages.AdminLoginForTokenRequest, opts ...grpc.CallOption) (*messages.AdminLoginForTokenResponse, error)
	AdminUpdateUserStatus(ctx context.Context, in *messages.AdminUpdateUserStatusRequest, opts ...grpc.CallOption) (*messages.AdminUpdateUserStatusResponse, error)
	AggregateUserDataReport(ctx context.Context, in *messages.AggregateUserDataReportRequest, opts ...grpc.CallOption) (*messages.AggregateUserDataReportResponse, error)
	ArchiveHousehold(ctx context.Context, in *messages.ArchiveHouseholdRequest, opts ...grpc.CallOption) (*messages.ArchiveHouseholdResponse, error)
	ArchiveOAuth2Client(ctx context.Context, in *messages.ArchiveOAuth2ClientRequest, opts ...grpc.CallOption) (*messages.ArchiveOAuth2ClientResponse, error)
	ArchiveServiceSetting(ctx context.Context, in *messages.ArchiveServiceSettingRequest, opts ...grpc.CallOption) (*messages.ArchiveServiceSettingResponse, error)
	ArchiveServiceSettingConfiguration(ctx context.Context, in *messages.ArchiveServiceSettingConfigurationRequest, opts ...grpc.CallOption) (*messages.ArchiveServiceSettingConfigurationResponse, error)
	ArchiveUser(ctx context.Context, in *messages.ArchiveUserRequest, opts ...grpc.CallOption) (*messages.ArchiveUserResponse, error)
	ArchiveUserMembership(ctx context.Context, in *messages.ArchiveUserMembershipRequest, opts ...grpc.CallOption) (*messages.ArchiveUserMembershipResponse, error)
	ArchiveWebhook(ctx context.Context, in *messages.ArchiveWebhookRequest, opts ...grpc.CallOption) (*messages.ArchiveWebhookResponse, error)
	ArchiveWebhookTriggerEvent(ctx context.Context, in *messages.ArchiveWebhookTriggerEventRequest, opts ...grpc.CallOption) (*messages.ArchiveWebhookTriggerEventResponse, error)
	CancelHouseholdInvitation(ctx context.Context, in *messages.CancelHouseholdInvitationRequest, opts ...grpc.CallOption) (*messages.CancelHouseholdInvitationResponse, error)
	CheckPermissions(ctx context.Context, in *messages.CheckPermissionsRequest, opts ...grpc.CallOption) (*messages.CheckPermissionsResponse, error)
	CreateHousehold(ctx context.Context, in *messages.CreateHouseholdRequest, opts ...grpc.CallOption) (*messages.CreateHouseholdResponse, error)
	CreateHouseholdInvitation(ctx context.Context, in *messages.CreateHouseholdInvitationRequest, opts ...grpc.CallOption) (*messages.CreateHouseholdInvitationResponse, error)
	CreateOAuth2Client(ctx context.Context, in *messages.CreateOAuth2ClientRequest, opts ...grpc.CallOption) (*messages.CreateOAuth2ClientResponse, error)
	CreateServiceSetting(ctx context.Context, in *messages.CreateServiceSettingRequest, opts ...grpc.CallOption) (*messages.CreateServiceSettingResponse, error)
	CreateServiceSettingConfiguration(ctx context.Context, in *messages.CreateServiceSettingConfigurationRequest, opts ...grpc.CallOption) (*messages.CreateServiceSettingConfigurationResponse, error)
	CreateUser(ctx context.Context, in *messages.CreateUserRequest, opts ...grpc.CallOption) (*messages.CreateUserResponse, error)
	CreateUserNotification(ctx context.Context, in *messages.CreateUserNotificationRequest, opts ...grpc.CallOption) (*messages.CreateUserNotificationResponse, error)
	CreateWebhook(ctx context.Context, in *messages.CreateWebhookRequest, opts ...grpc.CallOption) (*messages.CreateWebhookResponse, error)
	CreateWebhookTriggerEvent(ctx context.Context, in *messages.CreateWebhookTriggerEventRequest, opts ...grpc.CallOption) (*messages.CreateWebhookTriggerEventResponse, error)
	DestroyAllUserData(ctx context.Context, in *messages.DestroyAllUserDataRequest, opts ...grpc.CallOption) (*messages.DestroyAllUserDataResponse, error)
	FetchUserDataReport(ctx context.Context, in *messages.FetchUserDataReportRequest, opts ...grpc.CallOption) (*messages.FetchUserDataReportResponse, error)
	GetActiveHousehold(ctx context.Context, in *messages.GetActiveHouseholdRequest, opts ...grpc.CallOption) (*messages.GetActiveHouseholdResponse, error)
	GetAuditLogEntriesForHousehold(ctx context.Context, in *messages.GetAuditLogEntriesForHouseholdRequest, opts ...grpc.CallOption) (*messages.GetAuditLogEntriesForHouseholdResponse, error)
	GetAuditLogEntriesForUser(ctx context.Context, in *messages.GetAuditLogEntriesForUserRequest, opts ...grpc.CallOption) (*messages.GetAuditLogEntriesForUserResponse, error)
	GetAuditLogEntryByID(ctx context.Context, in *messages.GetAuditLogEntryByIDRequest, opts ...grpc.CallOption) (*messages.GetAuditLogEntryByIDResponse, error)
	GetAuthStatus(ctx context.Context, in *messages.GetAuthStatusRequest, opts ...grpc.CallOption) (*messages.GetAuthStatusResponse, error)
	GetHousehold(ctx context.Context, in *messages.GetHouseholdRequest, opts ...grpc.CallOption) (*messages.GetHouseholdResponse, error)
	GetHouseholdInvitation(ctx context.Context, in *messages.GetHouseholdInvitationRequest, opts ...grpc.CallOption) (*messages.GetHouseholdInvitationResponse, error)
	GetHouseholdInvitationByID(ctx context.Context, in *messages.GetHouseholdInvitationByIDRequest, opts ...grpc.CallOption) (*messages.GetHouseholdInvitationByIDResponse, error)
	GetHouseholds(ctx context.Context, in *messages.GetHouseholdsRequest, opts ...grpc.CallOption) (*messages.GetHouseholdsResponse, error)
	GetOAuth2Client(ctx context.Context, in *messages.GetOAuth2ClientRequest, opts ...grpc.CallOption) (*messages.GetOAuth2ClientResponse, error)
	GetOAuth2Clients(ctx context.Context, in *messages.GetOAuth2ClientsRequest, opts ...grpc.CallOption) (*messages.GetOAuth2ClientsResponse, error)
	GetReceivedHouseholdInvitations(ctx context.Context, in *messages.GetReceivedHouseholdInvitationsRequest, opts ...grpc.CallOption) (*messages.GetReceivedHouseholdInvitationsResponse, error)
	GetSelf(ctx context.Context, in *messages.GetSelfRequest, opts ...grpc.CallOption) (*messages.GetSelfResponse, error)
	GetSentHouseholdInvitations(ctx context.Context, in *messages.GetSentHouseholdInvitationsRequest, opts ...grpc.CallOption) (*messages.GetSentHouseholdInvitationsResponse, error)
	GetServiceSetting(ctx context.Context, in *messages.GetServiceSettingRequest, opts ...grpc.CallOption) (*messages.GetServiceSettingResponse, error)
	GetServiceSettingConfigurationByName(ctx context.Context, in *messages.GetServiceSettingConfigurationByNameRequest, opts ...grpc.CallOption) (*messages.GetServiceSettingConfigurationByNameResponse, error)
	GetServiceSettingConfigurationsForHousehold(ctx context.Context, in *messages.GetServiceSettingConfigurationsForHouseholdRequest, opts ...grpc.CallOption) (*messages.GetServiceSettingConfigurationsForHouseholdResponse, error)
	GetServiceSettingConfigurationsForUser(ctx context.Context, in *messages.GetServiceSettingConfigurationsForUserRequest, opts ...grpc.CallOption) (*messages.GetServiceSettingConfigurationsForUserResponse, error)
	GetServiceSettings(ctx context.Context, in *messages.GetServiceSettingsRequest, opts ...grpc.CallOption) (*messages.GetServiceSettingsResponse, error)
	GetUser(ctx context.Context, in *messages.GetUserRequest, opts ...grpc.CallOption) (*messages.GetUserResponse, error)
	GetUserNotification(ctx context.Context, in *messages.GetUserNotificationRequest, opts ...grpc.CallOption) (*messages.GetUserNotificationResponse, error)
	GetUserNotifications(ctx context.Context, in *messages.GetUserNotificationsRequest, opts ...grpc.CallOption) (*messages.GetUserNotificationsResponse, error)
	GetUsers(ctx context.Context, in *messages.GetUsersRequest, opts ...grpc.CallOption) (*messages.GetUsersResponse, error)
	GetWebhook(ctx context.Context, in *messages.GetWebhookRequest, opts ...grpc.CallOption) (*messages.GetWebhookResponse, error)
	GetWebhooks(ctx context.Context, in *messages.GetWebhooksRequest, opts ...grpc.CallOption) (*messages.GetWebhooksResponse, error)
	LoginForToken(ctx context.Context, in *messages.LoginForTokenRequest, opts ...grpc.CallOption) (*messages.LoginForTokenResponse, error)
	PublishArbitraryQueueMessage(ctx context.Context, in *messages.PublishArbitraryQueueMessageRequest, opts ...grpc.CallOption) (*messages.PublishArbitraryQueueMessageResponse, error)
	RedeemPasswordResetToken(ctx context.Context, in *messages.RedeemPasswordResetTokenRequest, opts ...grpc.CallOption) (*messages.RedeemPasswordResetTokenResponse, error)
	RefreshTOTPSecret(ctx context.Context, in *messages.RefreshTOTPSecretRequest, opts ...grpc.CallOption) (*messages.RefreshTOTPSecretResponse, error)
	RejectHouseholdInvitation(ctx context.Context, in *messages.RejectHouseholdInvitationRequest, opts ...grpc.CallOption) (*messages.RejectHouseholdInvitationResponse, error)
	RequestEmailVerificationEmail(ctx context.Context, in *messages.RequestEmailVerificationEmailRequest, opts ...grpc.CallOption) (*messages.RequestEmailVerificationEmailResponse, error)
	RequestPasswordResetToken(ctx context.Context, in *messages.RequestPasswordResetTokenRequest, opts ...grpc.CallOption) (*messages.RequestPasswordResetTokenResponse, error)
	RequestUsernameReminder(ctx context.Context, in *messages.RequestUsernameReminderRequest, opts ...grpc.CallOption) (*messages.RequestUsernameReminderResponse, error)
	SearchForServiceSettings(ctx context.Context, in *messages.SearchForServiceSettingsRequest, opts ...grpc.CallOption) (*messages.SearchForServiceSettingsResponse, error)
	SearchForUsers(ctx context.Context, in *messages.SearchForUsersRequest, opts ...grpc.CallOption) (*messages.SearchForUsersResponse, error)
	SetDefaultHousehold(ctx context.Context, in *messages.SetDefaultHouseholdRequest, opts ...grpc.CallOption) (*messages.SetDefaultHouseholdResponse, error)
	TransferHouseholdOwnership(ctx context.Context, in *messages.TransferHouseholdOwnershipRequest, opts ...grpc.CallOption) (*messages.TransferHouseholdOwnershipResponse, error)
	UpdateHousehold(ctx context.Context, in *messages.UpdateHouseholdRequest, opts ...grpc.CallOption) (*messages.UpdateHouseholdResponse, error)
	UpdateHouseholdMemberPermissions(ctx context.Context, in *messages.UpdateHouseholdMemberPermissionsRequest, opts ...grpc.CallOption) (*messages.UpdateHouseholdMemberPermissionsResponse, error)
	UpdatePassword(ctx context.Context, in *messages.UpdatePasswordRequest, opts ...grpc.CallOption) (*messages.UpdatePasswordResponse, error)
	UpdateServiceSettingConfiguration(ctx context.Context, in *messages.UpdateServiceSettingConfigurationRequest, opts ...grpc.CallOption) (*messages.UpdateServiceSettingConfigurationResponse, error)
	UpdateUserDetails(ctx context.Context, in *messages.UpdateUserDetailsRequest, opts ...grpc.CallOption) (*messages.UpdateUserDetailsResponse, error)
	UpdateUserEmailAddress(ctx context.Context, in *messages.UpdateUserEmailAddressRequest, opts ...grpc.CallOption) (*messages.UpdateUserEmailAddressResponse, error)
	UpdateUserNotification(ctx context.Context, in *messages.UpdateUserNotificationRequest, opts ...grpc.CallOption) (*messages.UpdateUserNotificationResponse, error)
	UpdateUserUsername(ctx context.Context, in *messages.UpdateUserUsernameRequest, opts ...grpc.CallOption) (*messages.UpdateUserUsernameResponse, error)
	UploadUserAvatar(ctx context.Context, in *messages.UploadUserAvatarRequest, opts ...grpc.CallOption) (*messages.UploadUserAvatarResponse, error)
	VerifyEmailAddress(ctx context.Context, in *messages.VerifyEmailAddressRequest, opts ...grpc.CallOption) (*messages.VerifyEmailAddressResponse, error)
	VerifyTOTPSecret(ctx context.Context, in *messages.VerifyTOTPSecretRequest, opts ...grpc.CallOption) (*messages.VerifyTOTPSecretResponse, error)
	ArchiveMeal(ctx context.Context, in *messages.ArchiveMealRequest, opts ...grpc.CallOption) (*messages.ArchiveMealResponse, error)
	ArchiveMealPlan(ctx context.Context, in *messages.ArchiveMealPlanRequest, opts ...grpc.CallOption) (*messages.ArchiveMealPlanResponse, error)
	ArchiveMealPlanEvent(ctx context.Context, in *messages.ArchiveMealPlanEventRequest, opts ...grpc.CallOption) (*messages.ArchiveMealPlanEventResponse, error)
	ArchiveMealPlanGroceryListItem(ctx context.Context, in *messages.ArchiveMealPlanGroceryListItemRequest, opts ...grpc.CallOption) (*messages.ArchiveMealPlanGroceryListItemResponse, error)
	ArchiveMealPlanOption(ctx context.Context, in *messages.ArchiveMealPlanOptionRequest, opts ...grpc.CallOption) (*messages.ArchiveMealPlanOptionResponse, error)
	ArchiveMealPlanOptionVote(ctx context.Context, in *messages.ArchiveMealPlanOptionVoteRequest, opts ...grpc.CallOption) (*messages.ArchiveMealPlanOptionVoteResponse, error)
	ArchiveRecipe(ctx context.Context, in *messages.ArchiveRecipeRequest, opts ...grpc.CallOption) (*messages.ArchiveRecipeResponse, error)
	ArchiveRecipePrepTask(ctx context.Context, in *messages.ArchiveRecipePrepTaskRequest, opts ...grpc.CallOption) (*messages.ArchiveRecipePrepTaskResponse, error)
	ArchiveRecipeRating(ctx context.Context, in *messages.ArchiveRecipeRatingRequest, opts ...grpc.CallOption) (*messages.ArchiveRecipeRatingResponse, error)
	ArchiveRecipeStep(ctx context.Context, in *messages.ArchiveRecipeStepRequest, opts ...grpc.CallOption) (*messages.ArchiveRecipeStepResponse, error)
	ArchiveRecipeStepCompletionCondition(ctx context.Context, in *messages.ArchiveRecipeStepCompletionConditionRequest, opts ...grpc.CallOption) (*messages.ArchiveRecipeStepCompletionConditionResponse, error)
	ArchiveRecipeStepIngredient(ctx context.Context, in *messages.ArchiveRecipeStepIngredientRequest, opts ...grpc.CallOption) (*messages.ArchiveRecipeStepIngredientResponse, error)
	ArchiveRecipeStepInstrument(ctx context.Context, in *messages.ArchiveRecipeStepInstrumentRequest, opts ...grpc.CallOption) (*messages.ArchiveRecipeStepInstrumentResponse, error)
	ArchiveRecipeStepProduct(ctx context.Context, in *messages.ArchiveRecipeStepProductRequest, opts ...grpc.CallOption) (*messages.ArchiveRecipeStepProductResponse, error)
	ArchiveRecipeStepVessel(ctx context.Context, in *messages.ArchiveRecipeStepVesselRequest, opts ...grpc.CallOption) (*messages.ArchiveRecipeStepVesselResponse, error)
	ArchiveValidIngredient(ctx context.Context, in *messages.ArchiveValidIngredientRequest, opts ...grpc.CallOption) (*messages.ArchiveValidIngredientResponse, error)
	ArchiveValidIngredientGroup(ctx context.Context, in *messages.ArchiveValidIngredientGroupRequest, opts ...grpc.CallOption) (*messages.ArchiveValidIngredientGroupResponse, error)
	ArchiveValidIngredientMeasurementUnit(ctx context.Context, in *messages.ArchiveValidIngredientMeasurementUnitRequest, opts ...grpc.CallOption) (*messages.ArchiveValidIngredientMeasurementUnitResponse, error)
	ArchiveValidIngredientPreparation(ctx context.Context, in *messages.ArchiveValidIngredientPreparationRequest, opts ...grpc.CallOption) (*messages.ArchiveValidIngredientPreparationResponse, error)
	ArchiveValidIngredientState(ctx context.Context, in *messages.ArchiveValidIngredientStateRequest, opts ...grpc.CallOption) (*messages.ArchiveValidIngredientStateResponse, error)
	ArchiveValidIngredientStateIngredient(ctx context.Context, in *messages.ArchiveValidIngredientStateIngredientRequest, opts ...grpc.CallOption) (*messages.ArchiveValidIngredientStateIngredientResponse, error)
	ArchiveValidInstrument(ctx context.Context, in *messages.ArchiveValidInstrumentRequest, opts ...grpc.CallOption) (*messages.ArchiveValidInstrumentResponse, error)
	ArchiveValidMeasurementUnit(ctx context.Context, in *messages.ArchiveValidMeasurementUnitRequest, opts ...grpc.CallOption) (*messages.ArchiveValidMeasurementUnitResponse, error)
	ArchiveValidMeasurementUnitConversion(ctx context.Context, in *messages.ArchiveValidMeasurementUnitConversionRequest, opts ...grpc.CallOption) (*messages.ArchiveValidMeasurementUnitConversionResponse, error)
	ArchiveValidPreparation(ctx context.Context, in *messages.ArchiveValidPreparationRequest, opts ...grpc.CallOption) (*messages.ArchiveValidPreparationResponse, error)
	ArchiveValidPreparationInstrument(ctx context.Context, in *messages.ArchiveValidPreparationInstrumentRequest, opts ...grpc.CallOption) (*messages.ArchiveValidPreparationInstrumentResponse, error)
	ArchiveValidPreparationVessel(ctx context.Context, in *messages.ArchiveValidPreparationVesselRequest, opts ...grpc.CallOption) (*messages.ArchiveValidPreparationVesselResponse, error)
	ArchiveValidVessel(ctx context.Context, in *messages.ArchiveValidVesselRequest, opts ...grpc.CallOption) (*messages.ArchiveValidVesselResponse, error)
	CloneRecipe(ctx context.Context, in *messages.CloneRecipeRequest, opts ...grpc.CallOption) (*messages.CloneRecipeResponse, error)
	CreateMeal(ctx context.Context, in *messages.CreateMealRequest, opts ...grpc.CallOption) (*messages.CreateMealResponse, error)
	CreateMealPlan(ctx context.Context, in *messages.CreateMealPlanRequest, opts ...grpc.CallOption) (*messages.CreateMealPlanResponse, error)
	CreateMealPlanEvent(ctx context.Context, in *messages.CreateMealPlanEventRequest, opts ...grpc.CallOption) (*messages.CreateMealPlanEventResponse, error)
	CreateMealPlanGroceryListItem(ctx context.Context, in *messages.CreateMealPlanGroceryListItemRequest, opts ...grpc.CallOption) (*messages.CreateMealPlanGroceryListItemResponse, error)
	CreateMealPlanOption(ctx context.Context, in *messages.CreateMealPlanOptionRequest, opts ...grpc.CallOption) (*messages.CreateMealPlanOptionResponse, error)
	CreateMealPlanOptionVote(ctx context.Context, in *messages.CreateMealPlanOptionVoteRequest, opts ...grpc.CallOption) (*messages.CreateMealPlanOptionVoteResponse, error)
	CreateMealPlanTask(ctx context.Context, in *messages.CreateMealPlanTaskRequest, opts ...grpc.CallOption) (*messages.CreateMealPlanTaskResponse, error)
	CreateRecipe(ctx context.Context, in *messages.CreateRecipeRequest, opts ...grpc.CallOption) (*messages.CreateRecipeResponse, error)
	CreateRecipePrepTask(ctx context.Context, in *messages.CreateRecipePrepTaskRequest, opts ...grpc.CallOption) (*messages.CreateRecipePrepTaskResponse, error)
	CreateRecipeRating(ctx context.Context, in *messages.CreateRecipeRatingRequest, opts ...grpc.CallOption) (*messages.CreateRecipeRatingResponse, error)
	CreateRecipeStep(ctx context.Context, in *messages.CreateRecipeStepRequest, opts ...grpc.CallOption) (*messages.CreateRecipeStepResponse, error)
	CreateRecipeStepCompletionCondition(ctx context.Context, in *messages.CreateRecipeStepCompletionConditionRequest, opts ...grpc.CallOption) (*messages.CreateRecipeStepCompletionConditionResponse, error)
	CreateRecipeStepIngredient(ctx context.Context, in *messages.CreateRecipeStepIngredientRequest, opts ...grpc.CallOption) (*messages.CreateRecipeStepIngredientResponse, error)
	CreateRecipeStepInstrument(ctx context.Context, in *messages.CreateRecipeStepInstrumentRequest, opts ...grpc.CallOption) (*messages.CreateRecipeStepInstrumentResponse, error)
	CreateRecipeStepProduct(ctx context.Context, in *messages.CreateRecipeStepProductRequest, opts ...grpc.CallOption) (*messages.CreateRecipeStepProductResponse, error)
	CreateRecipeStepVessel(ctx context.Context, in *messages.CreateRecipeStepVesselRequest, opts ...grpc.CallOption) (*messages.CreateRecipeStepVesselResponse, error)
	CreateValidIngredient(ctx context.Context, in *messages.CreateValidIngredientRequest, opts ...grpc.CallOption) (*messages.CreateValidIngredientResponse, error)
	CreateValidIngredientGroup(ctx context.Context, in *messages.CreateValidIngredientGroupRequest, opts ...grpc.CallOption) (*messages.CreateValidIngredientGroupResponse, error)
	CreateValidIngredientMeasurementUnit(ctx context.Context, in *messages.CreateValidIngredientMeasurementUnitRequest, opts ...grpc.CallOption) (*messages.CreateValidIngredientMeasurementUnitResponse, error)
	CreateValidIngredientPreparation(ctx context.Context, in *messages.CreateValidIngredientPreparationRequest, opts ...grpc.CallOption) (*messages.CreateValidIngredientPreparationResponse, error)
	CreateValidIngredientState(ctx context.Context, in *messages.CreateValidIngredientStateRequest, opts ...grpc.CallOption) (*messages.CreateValidIngredientStateResponse, error)
	CreateValidIngredientStateIngredient(ctx context.Context, in *messages.CreateValidIngredientStateIngredientRequest, opts ...grpc.CallOption) (*messages.CreateValidIngredientStateIngredientResponse, error)
	CreateValidInstrument(ctx context.Context, in *messages.CreateValidInstrumentRequest, opts ...grpc.CallOption) (*messages.CreateValidInstrumentResponse, error)
	CreateValidMeasurementUnit(ctx context.Context, in *messages.CreateValidMeasurementUnitRequest, opts ...grpc.CallOption) (*messages.CreateValidMeasurementUnitResponse, error)
	CreateValidMeasurementUnitConversion(ctx context.Context, in *messages.CreateValidMeasurementUnitConversionRequest, opts ...grpc.CallOption) (*messages.CreateValidMeasurementUnitConversionResponse, error)
	CreateValidPreparation(ctx context.Context, in *messages.CreateValidPreparationRequest, opts ...grpc.CallOption) (*messages.CreateValidPreparationResponse, error)
	CreateValidPreparationInstrument(ctx context.Context, in *messages.CreateValidPreparationInstrumentRequest, opts ...grpc.CallOption) (*messages.CreateValidPreparationInstrumentResponse, error)
	CreateValidPreparationVessel(ctx context.Context, in *messages.CreateValidPreparationVesselRequest, opts ...grpc.CallOption) (*messages.CreateValidPreparationVesselResponse, error)
	CreateValidVessel(ctx context.Context, in *messages.CreateValidVesselRequest, opts ...grpc.CallOption) (*messages.CreateValidVesselResponse, error)
	FinalizeMealPlan(ctx context.Context, in *messages.FinalizeMealPlanRequest, opts ...grpc.CallOption) (*messages.FinalizeMealPlanResponse, error)
	GetMeal(ctx context.Context, in *messages.GetMealRequest, opts ...grpc.CallOption) (*messages.GetMealResponse, error)
	GetMealPlan(ctx context.Context, in *messages.GetMealPlanRequest, opts ...grpc.CallOption) (*messages.GetMealPlanResponse, error)
	GetMealPlanEvent(ctx context.Context, in *messages.GetMealPlanEventRequest, opts ...grpc.CallOption) (*messages.GetMealPlanEventResponse, error)
	GetMealPlanEvents(ctx context.Context, in *messages.GetMealPlanEventsRequest, opts ...grpc.CallOption) (*messages.GetMealPlanEventsResponse, error)
	GetMealPlanGroceryListItem(ctx context.Context, in *messages.GetMealPlanGroceryListItemRequest, opts ...grpc.CallOption) (*messages.GetMealPlanGroceryListItemResponse, error)
	GetMealPlanGroceryListItemsForMealPlan(ctx context.Context, in *messages.GetMealPlanGroceryListItemsForMealPlanRequest, opts ...grpc.CallOption) (*messages.GetMealPlanGroceryListItemsForMealPlanResponse, error)
	GetMealPlanOption(ctx context.Context, in *messages.GetMealPlanOptionRequest, opts ...grpc.CallOption) (*messages.GetMealPlanOptionResponse, error)
	GetMealPlanOptionVote(ctx context.Context, in *messages.GetMealPlanOptionVoteRequest, opts ...grpc.CallOption) (*messages.GetMealPlanOptionVoteResponse, error)
	GetMealPlanOptionVotes(ctx context.Context, in *messages.GetMealPlanOptionVotesRequest, opts ...grpc.CallOption) (*messages.GetMealPlanOptionVotesResponse, error)
	GetMealPlanOptions(ctx context.Context, in *messages.GetMealPlanOptionsRequest, opts ...grpc.CallOption) (*messages.GetMealPlanOptionsResponse, error)
	GetMealPlanTask(ctx context.Context, in *messages.GetMealPlanTaskRequest, opts ...grpc.CallOption) (*messages.GetMealPlanTaskResponse, error)
	GetMealPlanTasks(ctx context.Context, in *messages.GetMealPlanTasksRequest, opts ...grpc.CallOption) (*messages.GetMealPlanTasksResponse, error)
	GetMealPlansForHousehold(ctx context.Context, in *messages.GetMealPlansForHouseholdRequest, opts ...grpc.CallOption) (*messages.GetMealPlansForHouseholdResponse, error)
	GetMeals(ctx context.Context, in *messages.GetMealsRequest, opts ...grpc.CallOption) (*messages.GetMealsResponse, error)
	GetMermaidDiagramForRecipe(ctx context.Context, in *messages.GetMermaidDiagramForRecipeRequest, opts ...grpc.CallOption) (*messages.GetMermaidDiagramForRecipeResponse, error)
	GetRandomValidIngredient(ctx context.Context, in *messages.GetRandomValidIngredientRequest, opts ...grpc.CallOption) (*messages.GetRandomValidIngredientResponse, error)
	GetRandomValidInstrument(ctx context.Context, in *messages.GetRandomValidInstrumentRequest, opts ...grpc.CallOption) (*messages.GetRandomValidInstrumentResponse, error)
	GetRandomValidPreparation(ctx context.Context, in *messages.GetRandomValidPreparationRequest, opts ...grpc.CallOption) (*messages.GetRandomValidPreparationResponse, error)
	GetRandomValidVessel(ctx context.Context, in *messages.GetRandomValidVesselRequest, opts ...grpc.CallOption) (*messages.GetRandomValidVesselResponse, error)
	GetRecipe(ctx context.Context, in *messages.GetRecipeRequest, opts ...grpc.CallOption) (*messages.GetRecipeResponse, error)
	GetRecipeMealPlanTasks(ctx context.Context, in *messages.GetRecipeMealPlanTasksRequest, opts ...grpc.CallOption) (*messages.GetRecipeMealPlanTasksResponse, error)
	GetRecipePrepTask(ctx context.Context, in *messages.GetRecipePrepTaskRequest, opts ...grpc.CallOption) (*messages.GetRecipePrepTaskResponse, error)
	GetRecipePrepTasks(ctx context.Context, in *messages.GetRecipePrepTasksRequest, opts ...grpc.CallOption) (*messages.GetRecipePrepTasksResponse, error)
	GetRecipeRating(ctx context.Context, in *messages.GetRecipeRatingRequest, opts ...grpc.CallOption) (*messages.GetRecipeRatingResponse, error)
	GetRecipeRatingsForRecipe(ctx context.Context, in *messages.GetRecipeRatingsForRecipeRequest, opts ...grpc.CallOption) (*messages.GetRecipeRatingsForRecipeResponse, error)
	GetRecipeStep(ctx context.Context, in *messages.GetRecipeStepRequest, opts ...grpc.CallOption) (*messages.GetRecipeStepResponse, error)
	GetRecipeStepCompletionCondition(ctx context.Context, in *messages.GetRecipeStepCompletionConditionRequest, opts ...grpc.CallOption) (*messages.GetRecipeStepCompletionConditionResponse, error)
	GetRecipeStepCompletionConditions(ctx context.Context, in *messages.GetRecipeStepCompletionConditionsRequest, opts ...grpc.CallOption) (*messages.GetRecipeStepCompletionConditionsResponse, error)
	GetRecipeStepIngredient(ctx context.Context, in *messages.GetRecipeStepIngredientRequest, opts ...grpc.CallOption) (*messages.GetRecipeStepIngredientResponse, error)
	GetRecipeStepIngredients(ctx context.Context, in *messages.GetRecipeStepIngredientsRequest, opts ...grpc.CallOption) (*messages.GetRecipeStepIngredientsResponse, error)
	GetRecipeStepInstrument(ctx context.Context, in *messages.GetRecipeStepInstrumentRequest, opts ...grpc.CallOption) (*messages.GetRecipeStepInstrumentResponse, error)
	GetRecipeStepInstruments(ctx context.Context, in *messages.GetRecipeStepInstrumentsRequest, opts ...grpc.CallOption) (*messages.GetRecipeStepInstrumentsResponse, error)
	GetRecipeStepProduct(ctx context.Context, in *messages.GetRecipeStepProductRequest, opts ...grpc.CallOption) (*messages.GetRecipeStepProductResponse, error)
	GetRecipeStepProducts(ctx context.Context, in *messages.GetRecipeStepProductsRequest, opts ...grpc.CallOption) (*messages.GetRecipeStepProductsResponse, error)
	GetRecipeStepVessel(ctx context.Context, in *messages.GetRecipeStepVesselRequest, opts ...grpc.CallOption) (*messages.GetRecipeStepVesselResponse, error)
	GetRecipeStepVessels(ctx context.Context, in *messages.GetRecipeStepVesselsRequest, opts ...grpc.CallOption) (*messages.GetRecipeStepVesselsResponse, error)
	GetRecipeSteps(ctx context.Context, in *messages.GetRecipeStepsRequest, opts ...grpc.CallOption) (*messages.GetRecipeStepsResponse, error)
	GetRecipes(ctx context.Context, in *messages.GetRecipesRequest, opts ...grpc.CallOption) (*messages.GetRecipesResponse, error)
	GetValidIngredient(ctx context.Context, in *messages.GetValidIngredientRequest, opts ...grpc.CallOption) (*messages.GetValidIngredientResponse, error)
	GetValidIngredientGroup(ctx context.Context, in *messages.GetValidIngredientGroupRequest, opts ...grpc.CallOption) (*messages.GetValidIngredientGroupResponse, error)
	GetValidIngredientGroups(ctx context.Context, in *messages.GetValidIngredientGroupsRequest, opts ...grpc.CallOption) (*messages.GetValidIngredientGroupsResponse, error)
	GetValidIngredientMeasurementUnit(ctx context.Context, in *messages.GetValidIngredientMeasurementUnitRequest, opts ...grpc.CallOption) (*messages.GetValidIngredientMeasurementUnitResponse, error)
	GetValidIngredientMeasurementUnits(ctx context.Context, in *messages.GetValidIngredientMeasurementUnitsRequest, opts ...grpc.CallOption) (*messages.GetValidIngredientMeasurementUnitsResponse, error)
	GetValidIngredientMeasurementUnitsByIngredient(ctx context.Context, in *messages.GetValidIngredientMeasurementUnitsByIngredientRequest, opts ...grpc.CallOption) (*messages.GetValidIngredientMeasurementUnitsByIngredientResponse, error)
	GetValidIngredientMeasurementUnitsByMeasurementUnit(ctx context.Context, in *messages.GetValidIngredientMeasurementUnitsByMeasurementUnitRequest, opts ...grpc.CallOption) (*messages.GetValidIngredientMeasurementUnitsByMeasurementUnitResponse, error)
	GetValidIngredientPreparation(ctx context.Context, in *messages.GetValidIngredientPreparationRequest, opts ...grpc.CallOption) (*messages.GetValidIngredientPreparationResponse, error)
	GetValidIngredientPreparations(ctx context.Context, in *messages.GetValidIngredientPreparationsRequest, opts ...grpc.CallOption) (*messages.GetValidIngredientPreparationsResponse, error)
	GetValidIngredientPreparationsByIngredient(ctx context.Context, in *messages.GetValidIngredientPreparationsByIngredientRequest, opts ...grpc.CallOption) (*messages.GetValidIngredientPreparationsByIngredientResponse, error)
	GetValidIngredientPreparationsByPreparation(ctx context.Context, in *messages.GetValidIngredientPreparationsByPreparationRequest, opts ...grpc.CallOption) (*messages.GetValidIngredientPreparationsByPreparationResponse, error)
	GetValidIngredientState(ctx context.Context, in *messages.GetValidIngredientStateRequest, opts ...grpc.CallOption) (*messages.GetValidIngredientStateResponse, error)
	GetValidIngredientStateIngredient(ctx context.Context, in *messages.GetValidIngredientStateIngredientRequest, opts ...grpc.CallOption) (*messages.GetValidIngredientStateIngredientResponse, error)
	GetValidIngredientStateIngredients(ctx context.Context, in *messages.GetValidIngredientStateIngredientsRequest, opts ...grpc.CallOption) (*messages.GetValidIngredientStateIngredientsResponse, error)
	GetValidIngredientStateIngredientsByIngredient(ctx context.Context, in *messages.GetValidIngredientStateIngredientsByIngredientRequest, opts ...grpc.CallOption) (*messages.GetValidIngredientStateIngredientsByIngredientResponse, error)
	GetValidIngredientStateIngredientsByIngredientState(ctx context.Context, in *messages.GetValidIngredientStateIngredientsByIngredientStateRequest, opts ...grpc.CallOption) (*messages.GetValidIngredientStateIngredientsByIngredientStateResponse, error)
	GetValidIngredientStates(ctx context.Context, in *messages.GetValidIngredientStatesRequest, opts ...grpc.CallOption) (*messages.GetValidIngredientStatesResponse, error)
	GetValidIngredients(ctx context.Context, in *messages.GetValidIngredientsRequest, opts ...grpc.CallOption) (*messages.GetValidIngredientsResponse, error)
	GetValidInstrument(ctx context.Context, in *messages.GetValidInstrumentRequest, opts ...grpc.CallOption) (*messages.GetValidInstrumentResponse, error)
	GetValidInstruments(ctx context.Context, in *messages.GetValidInstrumentsRequest, opts ...grpc.CallOption) (*messages.GetValidInstrumentsResponse, error)
	GetValidMeasurementUnit(ctx context.Context, in *messages.GetValidMeasurementUnitRequest, opts ...grpc.CallOption) (*messages.GetValidMeasurementUnitResponse, error)
	GetValidMeasurementUnitConversion(ctx context.Context, in *messages.GetValidMeasurementUnitConversionRequest, opts ...grpc.CallOption) (*messages.GetValidMeasurementUnitConversionResponse, error)
	GetValidMeasurementUnitConversionsFromUnit(ctx context.Context, in *messages.GetValidMeasurementUnitConversionsFromUnitRequest, opts ...grpc.CallOption) (*messages.GetValidMeasurementUnitConversionsFromUnitResponse, error)
	GetValidMeasurementUnitConversionsToUnit(ctx context.Context, in *messages.GetValidMeasurementUnitConversionsToUnitRequest, opts ...grpc.CallOption) (*messages.GetValidMeasurementUnitConversionsToUnitResponse, error)
	GetValidMeasurementUnits(ctx context.Context, in *messages.GetValidMeasurementUnitsRequest, opts ...grpc.CallOption) (*messages.GetValidMeasurementUnitsResponse, error)
	GetValidPreparation(ctx context.Context, in *messages.GetValidPreparationRequest, opts ...grpc.CallOption) (*messages.GetValidPreparationResponse, error)
	GetValidPreparationInstrument(ctx context.Context, in *messages.GetValidPreparationInstrumentRequest, opts ...grpc.CallOption) (*messages.GetValidPreparationInstrumentResponse, error)
	GetValidPreparationInstruments(ctx context.Context, in *messages.GetValidPreparationInstrumentsRequest, opts ...grpc.CallOption) (*messages.GetValidPreparationInstrumentsResponse, error)
	GetValidPreparationInstrumentsByInstrument(ctx context.Context, in *messages.GetValidPreparationInstrumentsByInstrumentRequest, opts ...grpc.CallOption) (*messages.GetValidPreparationInstrumentsByInstrumentResponse, error)
	GetValidPreparationInstrumentsByPreparation(ctx context.Context, in *messages.GetValidPreparationInstrumentsByPreparationRequest, opts ...grpc.CallOption) (*messages.GetValidPreparationInstrumentsByPreparationResponse, error)
	GetValidPreparationVessel(ctx context.Context, in *messages.GetValidPreparationVesselRequest, opts ...grpc.CallOption) (*messages.GetValidPreparationVesselResponse, error)
	GetValidPreparationVessels(ctx context.Context, in *messages.GetValidPreparationVesselsRequest, opts ...grpc.CallOption) (*messages.GetValidPreparationVesselsResponse, error)
	GetValidPreparationVesselsByPreparation(ctx context.Context, in *messages.GetValidPreparationVesselsByPreparationRequest, opts ...grpc.CallOption) (*messages.GetValidPreparationVesselsByPreparationResponse, error)
	GetValidPreparationVesselsByVessel(ctx context.Context, in *messages.GetValidPreparationVesselsByVesselRequest, opts ...grpc.CallOption) (*messages.GetValidPreparationVesselsByVesselResponse, error)
	GetValidPreparations(ctx context.Context, in *messages.GetValidPreparationsRequest, opts ...grpc.CallOption) (*messages.GetValidPreparationsResponse, error)
	GetValidVessel(ctx context.Context, in *messages.GetValidVesselRequest, opts ...grpc.CallOption) (*messages.GetValidVesselResponse, error)
	GetValidVessels(ctx context.Context, in *messages.GetValidVesselsRequest, opts ...grpc.CallOption) (*messages.GetValidVesselsResponse, error)
	RunFinalizeMealPlanWorker(ctx context.Context, in *messages.RunFinalizeMealPlanWorkerRequest, opts ...grpc.CallOption) (*messages.RunFinalizeMealPlanWorkerResponse, error)
	RunMealPlanGroceryListInitializerWorker(ctx context.Context, in *messages.RunMealPlanGroceryListInitializerWorkerRequest, opts ...grpc.CallOption) (*messages.RunMealPlanGroceryListInitializerWorkerResponse, error)
	RunMealPlanTaskCreatorWorker(ctx context.Context, in *messages.RunMealPlanTaskCreatorWorkerRequest, opts ...grpc.CallOption) (*messages.RunMealPlanTaskCreatorWorkerResponse, error)
	SearchForMeals(ctx context.Context, in *messages.SearchForMealsRequest, opts ...grpc.CallOption) (*messages.SearchForMealsResponse, error)
	SearchForRecipes(ctx context.Context, in *messages.SearchForRecipesRequest, opts ...grpc.CallOption) (*messages.SearchForRecipesResponse, error)
	SearchForValidIngredientGroups(ctx context.Context, in *messages.SearchForValidIngredientGroupsRequest, opts ...grpc.CallOption) (*messages.SearchForValidIngredientGroupsResponse, error)
	SearchForValidIngredientStates(ctx context.Context, in *messages.SearchForValidIngredientStatesRequest, opts ...grpc.CallOption) (*messages.SearchForValidIngredientStatesResponse, error)
	SearchForValidIngredients(ctx context.Context, in *messages.SearchForValidIngredientsRequest, opts ...grpc.CallOption) (*messages.SearchForValidIngredientsResponse, error)
	SearchForValidInstruments(ctx context.Context, in *messages.SearchForValidInstrumentsRequest, opts ...grpc.CallOption) (*messages.SearchForValidInstrumentsResponse, error)
	SearchForValidMeasurementUnits(ctx context.Context, in *messages.SearchForValidMeasurementUnitsRequest, opts ...grpc.CallOption) (*messages.SearchForValidMeasurementUnitsResponse, error)
	SearchForValidPreparations(ctx context.Context, in *messages.SearchForValidPreparationsRequest, opts ...grpc.CallOption) (*messages.SearchForValidPreparationsResponse, error)
	SearchForValidVessels(ctx context.Context, in *messages.SearchForValidVesselsRequest, opts ...grpc.CallOption) (*messages.SearchForValidVesselsResponse, error)
	SearchValidIngredientsByPreparation(ctx context.Context, in *messages.SearchValidIngredientsByPreparationRequest, opts ...grpc.CallOption) (*messages.SearchValidIngredientsByPreparationResponse, error)
	SearchValidMeasurementUnitsByIngredient(ctx context.Context, in *messages.SearchValidMeasurementUnitsByIngredientRequest, opts ...grpc.CallOption) (*messages.SearchValidMeasurementUnitsByIngredientResponse, error)
	UpdateMealPlan(ctx context.Context, in *messages.UpdateMealPlanRequest, opts ...grpc.CallOption) (*messages.UpdateMealPlanResponse, error)
	UpdateMealPlanEvent(ctx context.Context, in *messages.UpdateMealPlanEventRequest, opts ...grpc.CallOption) (*messages.UpdateMealPlanEventResponse, error)
	UpdateMealPlanGroceryListItem(ctx context.Context, in *messages.UpdateMealPlanGroceryListItemRequest, opts ...grpc.CallOption) (*messages.UpdateMealPlanGroceryListItemResponse, error)
	UpdateMealPlanOption(ctx context.Context, in *messages.UpdateMealPlanOptionRequest, opts ...grpc.CallOption) (*messages.UpdateMealPlanOptionResponse, error)
	UpdateMealPlanOptionVote(ctx context.Context, in *messages.UpdateMealPlanOptionVoteRequest, opts ...grpc.CallOption) (*messages.UpdateMealPlanOptionVoteResponse, error)
	UpdateMealPlanTaskStatus(ctx context.Context, in *messages.UpdateMealPlanTaskStatusRequest, opts ...grpc.CallOption) (*messages.UpdateMealPlanTaskStatusResponse, error)
	UpdateRecipe(ctx context.Context, in *messages.UpdateRecipeRequest, opts ...grpc.CallOption) (*messages.UpdateRecipeResponse, error)
	UpdateRecipePrepTask(ctx context.Context, in *messages.UpdateRecipePrepTaskRequest, opts ...grpc.CallOption) (*messages.UpdateRecipePrepTaskResponse, error)
	UpdateRecipeRating(ctx context.Context, in *messages.UpdateRecipeRatingRequest, opts ...grpc.CallOption) (*messages.UpdateRecipeRatingResponse, error)
	UpdateRecipeStep(ctx context.Context, in *messages.UpdateRecipeStepRequest, opts ...grpc.CallOption) (*messages.UpdateRecipeStepResponse, error)
	UpdateRecipeStepCompletionCondition(ctx context.Context, in *messages.UpdateRecipeStepCompletionConditionRequest, opts ...grpc.CallOption) (*messages.UpdateRecipeStepCompletionConditionResponse, error)
	UpdateRecipeStepIngredient(ctx context.Context, in *messages.UpdateRecipeStepIngredientRequest, opts ...grpc.CallOption) (*messages.UpdateRecipeStepIngredientResponse, error)
	UpdateRecipeStepInstrument(ctx context.Context, in *messages.UpdateRecipeStepInstrumentRequest, opts ...grpc.CallOption) (*messages.UpdateRecipeStepInstrumentResponse, error)
	UpdateRecipeStepProduct(ctx context.Context, in *messages.UpdateRecipeStepProductRequest, opts ...grpc.CallOption) (*messages.UpdateRecipeStepProductResponse, error)
	UpdateRecipeStepVessel(ctx context.Context, in *messages.UpdateRecipeStepVesselRequest, opts ...grpc.CallOption) (*messages.UpdateRecipeStepVesselResponse, error)
	UpdateValidIngredient(ctx context.Context, in *messages.UpdateValidIngredientRequest, opts ...grpc.CallOption) (*messages.UpdateValidIngredientResponse, error)
	UpdateValidIngredientGroup(ctx context.Context, in *messages.UpdateValidIngredientGroupRequest, opts ...grpc.CallOption) (*messages.UpdateValidIngredientGroupResponse, error)
	UpdateValidIngredientMeasurementUnit(ctx context.Context, in *messages.UpdateValidIngredientMeasurementUnitRequest, opts ...grpc.CallOption) (*messages.UpdateValidIngredientMeasurementUnitResponse, error)
	UpdateValidIngredientPreparation(ctx context.Context, in *messages.UpdateValidIngredientPreparationRequest, opts ...grpc.CallOption) (*messages.UpdateValidIngredientPreparationResponse, error)
	UpdateValidIngredientState(ctx context.Context, in *messages.UpdateValidIngredientStateRequest, opts ...grpc.CallOption) (*messages.UpdateValidIngredientStateResponse, error)
	UpdateValidIngredientStateIngredient(ctx context.Context, in *messages.UpdateValidIngredientStateIngredientRequest, opts ...grpc.CallOption) (*messages.UpdateValidIngredientStateIngredientResponse, error)
	UpdateValidInstrument(ctx context.Context, in *messages.UpdateValidInstrumentRequest, opts ...grpc.CallOption) (*messages.UpdateValidInstrumentResponse, error)
	UpdateValidMeasurementUnit(ctx context.Context, in *messages.UpdateValidMeasurementUnitRequest, opts ...grpc.CallOption) (*messages.UpdateValidMeasurementUnitResponse, error)
	UpdateValidMeasurementUnitConversion(ctx context.Context, in *messages.UpdateValidMeasurementUnitConversionRequest, opts ...grpc.CallOption) (*messages.UpdateValidMeasurementUnitConversionResponse, error)
	UpdateValidPreparation(ctx context.Context, in *messages.UpdateValidPreparationRequest, opts ...grpc.CallOption) (*messages.UpdateValidPreparationResponse, error)
	UpdateValidPreparationInstrument(ctx context.Context, in *messages.UpdateValidPreparationInstrumentRequest, opts ...grpc.CallOption) (*messages.UpdateValidPreparationInstrumentResponse, error)
	UpdateValidPreparationVessel(ctx context.Context, in *messages.UpdateValidPreparationVesselRequest, opts ...grpc.CallOption) (*messages.UpdateValidPreparationVesselResponse, error)
	UpdateValidVessel(ctx context.Context, in *messages.UpdateValidVesselRequest, opts ...grpc.CallOption) (*messages.UpdateValidVesselResponse, error)
	ArchiveHouseholdInstrumentOwnership(ctx context.Context, in *messages.ArchiveHouseholdInstrumentOwnershipRequest, opts ...grpc.CallOption) (*messages.ArchiveHouseholdInstrumentOwnershipResponse, error)
	ArchiveUserIngredientPreference(ctx context.Context, in *messages.ArchiveUserIngredientPreferenceRequest, opts ...grpc.CallOption) (*messages.ArchiveUserIngredientPreferenceResponse, error)
	CreateHouseholdInstrumentOwnership(ctx context.Context, in *messages.CreateHouseholdInstrumentOwnershipRequest, opts ...grpc.CallOption) (*messages.CreateHouseholdInstrumentOwnershipResponse, error)
	CreateUserIngredientPreference(ctx context.Context, in *messages.CreateUserIngredientPreferenceRequest, opts ...grpc.CallOption) (*messages.CreateUserIngredientPreferenceResponse, error)
	GetHouseholdInstrumentOwnership(ctx context.Context, in *messages.GetHouseholdInstrumentOwnershipRequest, opts ...grpc.CallOption) (*messages.GetHouseholdInstrumentOwnershipResponse, error)
	GetHouseholdInstrumentOwnerships(ctx context.Context, in *messages.GetHouseholdInstrumentOwnershipsRequest, opts ...grpc.CallOption) (*messages.GetHouseholdInstrumentOwnershipsResponse, error)
	GetUserIngredientPreferences(ctx context.Context, in *messages.GetUserIngredientPreferencesRequest, opts ...grpc.CallOption) (*messages.GetUserIngredientPreferencesResponse, error)
	UpdateHouseholdInstrumentOwnership(ctx context.Context, in *messages.UpdateHouseholdInstrumentOwnershipRequest, opts ...grpc.CallOption) (*messages.UpdateHouseholdInstrumentOwnershipResponse, error)
	UpdateUserIngredientPreference(ctx context.Context, in *messages.UpdateUserIngredientPreferenceRequest, opts ...grpc.CallOption) (*messages.UpdateUserIngredientPreferenceResponse, error)
}

type dinnerDoneBetterClient struct {
	cc grpc.ClientConnInterface
}

func NewDinnerDoneBetterClient(cc grpc.ClientConnInterface) DinnerDoneBetterClient {
	return &dinnerDoneBetterClient{cc}
}

func (c *dinnerDoneBetterClient) Ping(ctx context.Context, in *messages.PingRequest, opts ...grpc.CallOption) (*messages.PingResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.PingResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_Ping_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) ExchangeToken(ctx context.Context, in *messages.ExchangeTokenRequest, opts ...grpc.CallOption) (*messages.ExchangeTokenResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.ExchangeTokenResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_ExchangeToken_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) AcceptHouseholdInvitation(ctx context.Context, in *messages.AcceptHouseholdInvitationRequest, opts ...grpc.CallOption) (*messages.AcceptHouseholdInvitationResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.AcceptHouseholdInvitationResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_AcceptHouseholdInvitation_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) AdminLoginForToken(ctx context.Context, in *messages.AdminLoginForTokenRequest, opts ...grpc.CallOption) (*messages.AdminLoginForTokenResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.AdminLoginForTokenResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_AdminLoginForToken_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) AdminUpdateUserStatus(ctx context.Context, in *messages.AdminUpdateUserStatusRequest, opts ...grpc.CallOption) (*messages.AdminUpdateUserStatusResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.AdminUpdateUserStatusResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_AdminUpdateUserStatus_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) AggregateUserDataReport(ctx context.Context, in *messages.AggregateUserDataReportRequest, opts ...grpc.CallOption) (*messages.AggregateUserDataReportResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.AggregateUserDataReportResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_AggregateUserDataReport_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) ArchiveHousehold(ctx context.Context, in *messages.ArchiveHouseholdRequest, opts ...grpc.CallOption) (*messages.ArchiveHouseholdResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.ArchiveHouseholdResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_ArchiveHousehold_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) ArchiveOAuth2Client(ctx context.Context, in *messages.ArchiveOAuth2ClientRequest, opts ...grpc.CallOption) (*messages.ArchiveOAuth2ClientResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.ArchiveOAuth2ClientResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_ArchiveOAuth2Client_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) ArchiveServiceSetting(ctx context.Context, in *messages.ArchiveServiceSettingRequest, opts ...grpc.CallOption) (*messages.ArchiveServiceSettingResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.ArchiveServiceSettingResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_ArchiveServiceSetting_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) ArchiveServiceSettingConfiguration(ctx context.Context, in *messages.ArchiveServiceSettingConfigurationRequest, opts ...grpc.CallOption) (*messages.ArchiveServiceSettingConfigurationResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.ArchiveServiceSettingConfigurationResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_ArchiveServiceSettingConfiguration_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) ArchiveUser(ctx context.Context, in *messages.ArchiveUserRequest, opts ...grpc.CallOption) (*messages.ArchiveUserResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.ArchiveUserResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_ArchiveUser_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) ArchiveUserMembership(ctx context.Context, in *messages.ArchiveUserMembershipRequest, opts ...grpc.CallOption) (*messages.ArchiveUserMembershipResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.ArchiveUserMembershipResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_ArchiveUserMembership_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) ArchiveWebhook(ctx context.Context, in *messages.ArchiveWebhookRequest, opts ...grpc.CallOption) (*messages.ArchiveWebhookResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.ArchiveWebhookResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_ArchiveWebhook_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) ArchiveWebhookTriggerEvent(ctx context.Context, in *messages.ArchiveWebhookTriggerEventRequest, opts ...grpc.CallOption) (*messages.ArchiveWebhookTriggerEventResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.ArchiveWebhookTriggerEventResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_ArchiveWebhookTriggerEvent_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) CancelHouseholdInvitation(ctx context.Context, in *messages.CancelHouseholdInvitationRequest, opts ...grpc.CallOption) (*messages.CancelHouseholdInvitationResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.CancelHouseholdInvitationResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_CancelHouseholdInvitation_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) CheckPermissions(ctx context.Context, in *messages.CheckPermissionsRequest, opts ...grpc.CallOption) (*messages.CheckPermissionsResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.CheckPermissionsResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_CheckPermissions_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) CreateHousehold(ctx context.Context, in *messages.CreateHouseholdRequest, opts ...grpc.CallOption) (*messages.CreateHouseholdResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.CreateHouseholdResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_CreateHousehold_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) CreateHouseholdInvitation(ctx context.Context, in *messages.CreateHouseholdInvitationRequest, opts ...grpc.CallOption) (*messages.CreateHouseholdInvitationResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.CreateHouseholdInvitationResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_CreateHouseholdInvitation_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) CreateOAuth2Client(ctx context.Context, in *messages.CreateOAuth2ClientRequest, opts ...grpc.CallOption) (*messages.CreateOAuth2ClientResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.CreateOAuth2ClientResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_CreateOAuth2Client_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) CreateServiceSetting(ctx context.Context, in *messages.CreateServiceSettingRequest, opts ...grpc.CallOption) (*messages.CreateServiceSettingResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.CreateServiceSettingResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_CreateServiceSetting_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) CreateServiceSettingConfiguration(ctx context.Context, in *messages.CreateServiceSettingConfigurationRequest, opts ...grpc.CallOption) (*messages.CreateServiceSettingConfigurationResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.CreateServiceSettingConfigurationResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_CreateServiceSettingConfiguration_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) CreateUser(ctx context.Context, in *messages.CreateUserRequest, opts ...grpc.CallOption) (*messages.CreateUserResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.CreateUserResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_CreateUser_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) CreateUserNotification(ctx context.Context, in *messages.CreateUserNotificationRequest, opts ...grpc.CallOption) (*messages.CreateUserNotificationResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.CreateUserNotificationResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_CreateUserNotification_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) CreateWebhook(ctx context.Context, in *messages.CreateWebhookRequest, opts ...grpc.CallOption) (*messages.CreateWebhookResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.CreateWebhookResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_CreateWebhook_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) CreateWebhookTriggerEvent(ctx context.Context, in *messages.CreateWebhookTriggerEventRequest, opts ...grpc.CallOption) (*messages.CreateWebhookTriggerEventResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.CreateWebhookTriggerEventResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_CreateWebhookTriggerEvent_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) DestroyAllUserData(ctx context.Context, in *messages.DestroyAllUserDataRequest, opts ...grpc.CallOption) (*messages.DestroyAllUserDataResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.DestroyAllUserDataResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_DestroyAllUserData_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) FetchUserDataReport(ctx context.Context, in *messages.FetchUserDataReportRequest, opts ...grpc.CallOption) (*messages.FetchUserDataReportResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.FetchUserDataReportResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_FetchUserDataReport_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) GetActiveHousehold(ctx context.Context, in *messages.GetActiveHouseholdRequest, opts ...grpc.CallOption) (*messages.GetActiveHouseholdResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.GetActiveHouseholdResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_GetActiveHousehold_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) GetAuditLogEntriesForHousehold(ctx context.Context, in *messages.GetAuditLogEntriesForHouseholdRequest, opts ...grpc.CallOption) (*messages.GetAuditLogEntriesForHouseholdResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.GetAuditLogEntriesForHouseholdResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_GetAuditLogEntriesForHousehold_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) GetAuditLogEntriesForUser(ctx context.Context, in *messages.GetAuditLogEntriesForUserRequest, opts ...grpc.CallOption) (*messages.GetAuditLogEntriesForUserResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.GetAuditLogEntriesForUserResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_GetAuditLogEntriesForUser_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) GetAuditLogEntryByID(ctx context.Context, in *messages.GetAuditLogEntryByIDRequest, opts ...grpc.CallOption) (*messages.GetAuditLogEntryByIDResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.GetAuditLogEntryByIDResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_GetAuditLogEntryByID_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) GetAuthStatus(ctx context.Context, in *messages.GetAuthStatusRequest, opts ...grpc.CallOption) (*messages.GetAuthStatusResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.GetAuthStatusResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_GetAuthStatus_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) GetHousehold(ctx context.Context, in *messages.GetHouseholdRequest, opts ...grpc.CallOption) (*messages.GetHouseholdResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.GetHouseholdResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_GetHousehold_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) GetHouseholdInvitation(ctx context.Context, in *messages.GetHouseholdInvitationRequest, opts ...grpc.CallOption) (*messages.GetHouseholdInvitationResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.GetHouseholdInvitationResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_GetHouseholdInvitation_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) GetHouseholdInvitationByID(ctx context.Context, in *messages.GetHouseholdInvitationByIDRequest, opts ...grpc.CallOption) (*messages.GetHouseholdInvitationByIDResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.GetHouseholdInvitationByIDResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_GetHouseholdInvitationByID_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) GetHouseholds(ctx context.Context, in *messages.GetHouseholdsRequest, opts ...grpc.CallOption) (*messages.GetHouseholdsResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.GetHouseholdsResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_GetHouseholds_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) GetOAuth2Client(ctx context.Context, in *messages.GetOAuth2ClientRequest, opts ...grpc.CallOption) (*messages.GetOAuth2ClientResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.GetOAuth2ClientResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_GetOAuth2Client_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) GetOAuth2Clients(ctx context.Context, in *messages.GetOAuth2ClientsRequest, opts ...grpc.CallOption) (*messages.GetOAuth2ClientsResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.GetOAuth2ClientsResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_GetOAuth2Clients_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) GetReceivedHouseholdInvitations(ctx context.Context, in *messages.GetReceivedHouseholdInvitationsRequest, opts ...grpc.CallOption) (*messages.GetReceivedHouseholdInvitationsResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.GetReceivedHouseholdInvitationsResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_GetReceivedHouseholdInvitations_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) GetSelf(ctx context.Context, in *messages.GetSelfRequest, opts ...grpc.CallOption) (*messages.GetSelfResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.GetSelfResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_GetSelf_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) GetSentHouseholdInvitations(ctx context.Context, in *messages.GetSentHouseholdInvitationsRequest, opts ...grpc.CallOption) (*messages.GetSentHouseholdInvitationsResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.GetSentHouseholdInvitationsResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_GetSentHouseholdInvitations_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) GetServiceSetting(ctx context.Context, in *messages.GetServiceSettingRequest, opts ...grpc.CallOption) (*messages.GetServiceSettingResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.GetServiceSettingResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_GetServiceSetting_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) GetServiceSettingConfigurationByName(ctx context.Context, in *messages.GetServiceSettingConfigurationByNameRequest, opts ...grpc.CallOption) (*messages.GetServiceSettingConfigurationByNameResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.GetServiceSettingConfigurationByNameResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_GetServiceSettingConfigurationByName_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) GetServiceSettingConfigurationsForHousehold(ctx context.Context, in *messages.GetServiceSettingConfigurationsForHouseholdRequest, opts ...grpc.CallOption) (*messages.GetServiceSettingConfigurationsForHouseholdResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.GetServiceSettingConfigurationsForHouseholdResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_GetServiceSettingConfigurationsForHousehold_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) GetServiceSettingConfigurationsForUser(ctx context.Context, in *messages.GetServiceSettingConfigurationsForUserRequest, opts ...grpc.CallOption) (*messages.GetServiceSettingConfigurationsForUserResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.GetServiceSettingConfigurationsForUserResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_GetServiceSettingConfigurationsForUser_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) GetServiceSettings(ctx context.Context, in *messages.GetServiceSettingsRequest, opts ...grpc.CallOption) (*messages.GetServiceSettingsResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.GetServiceSettingsResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_GetServiceSettings_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) GetUser(ctx context.Context, in *messages.GetUserRequest, opts ...grpc.CallOption) (*messages.GetUserResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.GetUserResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_GetUser_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) GetUserNotification(ctx context.Context, in *messages.GetUserNotificationRequest, opts ...grpc.CallOption) (*messages.GetUserNotificationResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.GetUserNotificationResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_GetUserNotification_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) GetUserNotifications(ctx context.Context, in *messages.GetUserNotificationsRequest, opts ...grpc.CallOption) (*messages.GetUserNotificationsResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.GetUserNotificationsResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_GetUserNotifications_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) GetUsers(ctx context.Context, in *messages.GetUsersRequest, opts ...grpc.CallOption) (*messages.GetUsersResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.GetUsersResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_GetUsers_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) GetWebhook(ctx context.Context, in *messages.GetWebhookRequest, opts ...grpc.CallOption) (*messages.GetWebhookResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.GetWebhookResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_GetWebhook_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) GetWebhooks(ctx context.Context, in *messages.GetWebhooksRequest, opts ...grpc.CallOption) (*messages.GetWebhooksResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.GetWebhooksResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_GetWebhooks_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) LoginForToken(ctx context.Context, in *messages.LoginForTokenRequest, opts ...grpc.CallOption) (*messages.LoginForTokenResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.LoginForTokenResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_LoginForToken_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) PublishArbitraryQueueMessage(ctx context.Context, in *messages.PublishArbitraryQueueMessageRequest, opts ...grpc.CallOption) (*messages.PublishArbitraryQueueMessageResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.PublishArbitraryQueueMessageResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_PublishArbitraryQueueMessage_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) RedeemPasswordResetToken(ctx context.Context, in *messages.RedeemPasswordResetTokenRequest, opts ...grpc.CallOption) (*messages.RedeemPasswordResetTokenResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.RedeemPasswordResetTokenResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_RedeemPasswordResetToken_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) RefreshTOTPSecret(ctx context.Context, in *messages.RefreshTOTPSecretRequest, opts ...grpc.CallOption) (*messages.RefreshTOTPSecretResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.RefreshTOTPSecretResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_RefreshTOTPSecret_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) RejectHouseholdInvitation(ctx context.Context, in *messages.RejectHouseholdInvitationRequest, opts ...grpc.CallOption) (*messages.RejectHouseholdInvitationResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.RejectHouseholdInvitationResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_RejectHouseholdInvitation_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) RequestEmailVerificationEmail(ctx context.Context, in *messages.RequestEmailVerificationEmailRequest, opts ...grpc.CallOption) (*messages.RequestEmailVerificationEmailResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.RequestEmailVerificationEmailResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_RequestEmailVerificationEmail_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) RequestPasswordResetToken(ctx context.Context, in *messages.RequestPasswordResetTokenRequest, opts ...grpc.CallOption) (*messages.RequestPasswordResetTokenResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.RequestPasswordResetTokenResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_RequestPasswordResetToken_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) RequestUsernameReminder(ctx context.Context, in *messages.RequestUsernameReminderRequest, opts ...grpc.CallOption) (*messages.RequestUsernameReminderResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.RequestUsernameReminderResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_RequestUsernameReminder_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) SearchForServiceSettings(ctx context.Context, in *messages.SearchForServiceSettingsRequest, opts ...grpc.CallOption) (*messages.SearchForServiceSettingsResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.SearchForServiceSettingsResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_SearchForServiceSettings_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) SearchForUsers(ctx context.Context, in *messages.SearchForUsersRequest, opts ...grpc.CallOption) (*messages.SearchForUsersResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.SearchForUsersResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_SearchForUsers_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) SetDefaultHousehold(ctx context.Context, in *messages.SetDefaultHouseholdRequest, opts ...grpc.CallOption) (*messages.SetDefaultHouseholdResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.SetDefaultHouseholdResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_SetDefaultHousehold_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) TransferHouseholdOwnership(ctx context.Context, in *messages.TransferHouseholdOwnershipRequest, opts ...grpc.CallOption) (*messages.TransferHouseholdOwnershipResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.TransferHouseholdOwnershipResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_TransferHouseholdOwnership_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) UpdateHousehold(ctx context.Context, in *messages.UpdateHouseholdRequest, opts ...grpc.CallOption) (*messages.UpdateHouseholdResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.UpdateHouseholdResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_UpdateHousehold_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) UpdateHouseholdMemberPermissions(ctx context.Context, in *messages.UpdateHouseholdMemberPermissionsRequest, opts ...grpc.CallOption) (*messages.UpdateHouseholdMemberPermissionsResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.UpdateHouseholdMemberPermissionsResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_UpdateHouseholdMemberPermissions_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) UpdatePassword(ctx context.Context, in *messages.UpdatePasswordRequest, opts ...grpc.CallOption) (*messages.UpdatePasswordResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.UpdatePasswordResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_UpdatePassword_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) UpdateServiceSettingConfiguration(ctx context.Context, in *messages.UpdateServiceSettingConfigurationRequest, opts ...grpc.CallOption) (*messages.UpdateServiceSettingConfigurationResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.UpdateServiceSettingConfigurationResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_UpdateServiceSettingConfiguration_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) UpdateUserDetails(ctx context.Context, in *messages.UpdateUserDetailsRequest, opts ...grpc.CallOption) (*messages.UpdateUserDetailsResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.UpdateUserDetailsResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_UpdateUserDetails_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) UpdateUserEmailAddress(ctx context.Context, in *messages.UpdateUserEmailAddressRequest, opts ...grpc.CallOption) (*messages.UpdateUserEmailAddressResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.UpdateUserEmailAddressResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_UpdateUserEmailAddress_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) UpdateUserNotification(ctx context.Context, in *messages.UpdateUserNotificationRequest, opts ...grpc.CallOption) (*messages.UpdateUserNotificationResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.UpdateUserNotificationResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_UpdateUserNotification_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) UpdateUserUsername(ctx context.Context, in *messages.UpdateUserUsernameRequest, opts ...grpc.CallOption) (*messages.UpdateUserUsernameResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.UpdateUserUsernameResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_UpdateUserUsername_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) UploadUserAvatar(ctx context.Context, in *messages.UploadUserAvatarRequest, opts ...grpc.CallOption) (*messages.UploadUserAvatarResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.UploadUserAvatarResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_UploadUserAvatar_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) VerifyEmailAddress(ctx context.Context, in *messages.VerifyEmailAddressRequest, opts ...grpc.CallOption) (*messages.VerifyEmailAddressResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.VerifyEmailAddressResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_VerifyEmailAddress_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) VerifyTOTPSecret(ctx context.Context, in *messages.VerifyTOTPSecretRequest, opts ...grpc.CallOption) (*messages.VerifyTOTPSecretResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.VerifyTOTPSecretResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_VerifyTOTPSecret_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) ArchiveMeal(ctx context.Context, in *messages.ArchiveMealRequest, opts ...grpc.CallOption) (*messages.ArchiveMealResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.ArchiveMealResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_ArchiveMeal_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) ArchiveMealPlan(ctx context.Context, in *messages.ArchiveMealPlanRequest, opts ...grpc.CallOption) (*messages.ArchiveMealPlanResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.ArchiveMealPlanResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_ArchiveMealPlan_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) ArchiveMealPlanEvent(ctx context.Context, in *messages.ArchiveMealPlanEventRequest, opts ...grpc.CallOption) (*messages.ArchiveMealPlanEventResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.ArchiveMealPlanEventResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_ArchiveMealPlanEvent_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) ArchiveMealPlanGroceryListItem(ctx context.Context, in *messages.ArchiveMealPlanGroceryListItemRequest, opts ...grpc.CallOption) (*messages.ArchiveMealPlanGroceryListItemResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.ArchiveMealPlanGroceryListItemResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_ArchiveMealPlanGroceryListItem_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) ArchiveMealPlanOption(ctx context.Context, in *messages.ArchiveMealPlanOptionRequest, opts ...grpc.CallOption) (*messages.ArchiveMealPlanOptionResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.ArchiveMealPlanOptionResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_ArchiveMealPlanOption_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) ArchiveMealPlanOptionVote(ctx context.Context, in *messages.ArchiveMealPlanOptionVoteRequest, opts ...grpc.CallOption) (*messages.ArchiveMealPlanOptionVoteResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.ArchiveMealPlanOptionVoteResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_ArchiveMealPlanOptionVote_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) ArchiveRecipe(ctx context.Context, in *messages.ArchiveRecipeRequest, opts ...grpc.CallOption) (*messages.ArchiveRecipeResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.ArchiveRecipeResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_ArchiveRecipe_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) ArchiveRecipePrepTask(ctx context.Context, in *messages.ArchiveRecipePrepTaskRequest, opts ...grpc.CallOption) (*messages.ArchiveRecipePrepTaskResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.ArchiveRecipePrepTaskResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_ArchiveRecipePrepTask_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) ArchiveRecipeRating(ctx context.Context, in *messages.ArchiveRecipeRatingRequest, opts ...grpc.CallOption) (*messages.ArchiveRecipeRatingResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.ArchiveRecipeRatingResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_ArchiveRecipeRating_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) ArchiveRecipeStep(ctx context.Context, in *messages.ArchiveRecipeStepRequest, opts ...grpc.CallOption) (*messages.ArchiveRecipeStepResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.ArchiveRecipeStepResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_ArchiveRecipeStep_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) ArchiveRecipeStepCompletionCondition(ctx context.Context, in *messages.ArchiveRecipeStepCompletionConditionRequest, opts ...grpc.CallOption) (*messages.ArchiveRecipeStepCompletionConditionResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.ArchiveRecipeStepCompletionConditionResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_ArchiveRecipeStepCompletionCondition_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) ArchiveRecipeStepIngredient(ctx context.Context, in *messages.ArchiveRecipeStepIngredientRequest, opts ...grpc.CallOption) (*messages.ArchiveRecipeStepIngredientResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.ArchiveRecipeStepIngredientResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_ArchiveRecipeStepIngredient_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) ArchiveRecipeStepInstrument(ctx context.Context, in *messages.ArchiveRecipeStepInstrumentRequest, opts ...grpc.CallOption) (*messages.ArchiveRecipeStepInstrumentResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.ArchiveRecipeStepInstrumentResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_ArchiveRecipeStepInstrument_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) ArchiveRecipeStepProduct(ctx context.Context, in *messages.ArchiveRecipeStepProductRequest, opts ...grpc.CallOption) (*messages.ArchiveRecipeStepProductResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.ArchiveRecipeStepProductResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_ArchiveRecipeStepProduct_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) ArchiveRecipeStepVessel(ctx context.Context, in *messages.ArchiveRecipeStepVesselRequest, opts ...grpc.CallOption) (*messages.ArchiveRecipeStepVesselResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.ArchiveRecipeStepVesselResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_ArchiveRecipeStepVessel_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) ArchiveValidIngredient(ctx context.Context, in *messages.ArchiveValidIngredientRequest, opts ...grpc.CallOption) (*messages.ArchiveValidIngredientResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.ArchiveValidIngredientResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_ArchiveValidIngredient_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) ArchiveValidIngredientGroup(ctx context.Context, in *messages.ArchiveValidIngredientGroupRequest, opts ...grpc.CallOption) (*messages.ArchiveValidIngredientGroupResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.ArchiveValidIngredientGroupResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_ArchiveValidIngredientGroup_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) ArchiveValidIngredientMeasurementUnit(ctx context.Context, in *messages.ArchiveValidIngredientMeasurementUnitRequest, opts ...grpc.CallOption) (*messages.ArchiveValidIngredientMeasurementUnitResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.ArchiveValidIngredientMeasurementUnitResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_ArchiveValidIngredientMeasurementUnit_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) ArchiveValidIngredientPreparation(ctx context.Context, in *messages.ArchiveValidIngredientPreparationRequest, opts ...grpc.CallOption) (*messages.ArchiveValidIngredientPreparationResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.ArchiveValidIngredientPreparationResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_ArchiveValidIngredientPreparation_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) ArchiveValidIngredientState(ctx context.Context, in *messages.ArchiveValidIngredientStateRequest, opts ...grpc.CallOption) (*messages.ArchiveValidIngredientStateResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.ArchiveValidIngredientStateResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_ArchiveValidIngredientState_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) ArchiveValidIngredientStateIngredient(ctx context.Context, in *messages.ArchiveValidIngredientStateIngredientRequest, opts ...grpc.CallOption) (*messages.ArchiveValidIngredientStateIngredientResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.ArchiveValidIngredientStateIngredientResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_ArchiveValidIngredientStateIngredient_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) ArchiveValidInstrument(ctx context.Context, in *messages.ArchiveValidInstrumentRequest, opts ...grpc.CallOption) (*messages.ArchiveValidInstrumentResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.ArchiveValidInstrumentResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_ArchiveValidInstrument_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) ArchiveValidMeasurementUnit(ctx context.Context, in *messages.ArchiveValidMeasurementUnitRequest, opts ...grpc.CallOption) (*messages.ArchiveValidMeasurementUnitResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.ArchiveValidMeasurementUnitResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_ArchiveValidMeasurementUnit_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) ArchiveValidMeasurementUnitConversion(ctx context.Context, in *messages.ArchiveValidMeasurementUnitConversionRequest, opts ...grpc.CallOption) (*messages.ArchiveValidMeasurementUnitConversionResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.ArchiveValidMeasurementUnitConversionResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_ArchiveValidMeasurementUnitConversion_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) ArchiveValidPreparation(ctx context.Context, in *messages.ArchiveValidPreparationRequest, opts ...grpc.CallOption) (*messages.ArchiveValidPreparationResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.ArchiveValidPreparationResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_ArchiveValidPreparation_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) ArchiveValidPreparationInstrument(ctx context.Context, in *messages.ArchiveValidPreparationInstrumentRequest, opts ...grpc.CallOption) (*messages.ArchiveValidPreparationInstrumentResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.ArchiveValidPreparationInstrumentResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_ArchiveValidPreparationInstrument_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) ArchiveValidPreparationVessel(ctx context.Context, in *messages.ArchiveValidPreparationVesselRequest, opts ...grpc.CallOption) (*messages.ArchiveValidPreparationVesselResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.ArchiveValidPreparationVesselResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_ArchiveValidPreparationVessel_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) ArchiveValidVessel(ctx context.Context, in *messages.ArchiveValidVesselRequest, opts ...grpc.CallOption) (*messages.ArchiveValidVesselResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.ArchiveValidVesselResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_ArchiveValidVessel_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) CloneRecipe(ctx context.Context, in *messages.CloneRecipeRequest, opts ...grpc.CallOption) (*messages.CloneRecipeResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.CloneRecipeResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_CloneRecipe_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) CreateMeal(ctx context.Context, in *messages.CreateMealRequest, opts ...grpc.CallOption) (*messages.CreateMealResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.CreateMealResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_CreateMeal_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) CreateMealPlan(ctx context.Context, in *messages.CreateMealPlanRequest, opts ...grpc.CallOption) (*messages.CreateMealPlanResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.CreateMealPlanResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_CreateMealPlan_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) CreateMealPlanEvent(ctx context.Context, in *messages.CreateMealPlanEventRequest, opts ...grpc.CallOption) (*messages.CreateMealPlanEventResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.CreateMealPlanEventResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_CreateMealPlanEvent_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) CreateMealPlanGroceryListItem(ctx context.Context, in *messages.CreateMealPlanGroceryListItemRequest, opts ...grpc.CallOption) (*messages.CreateMealPlanGroceryListItemResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.CreateMealPlanGroceryListItemResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_CreateMealPlanGroceryListItem_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) CreateMealPlanOption(ctx context.Context, in *messages.CreateMealPlanOptionRequest, opts ...grpc.CallOption) (*messages.CreateMealPlanOptionResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.CreateMealPlanOptionResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_CreateMealPlanOption_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) CreateMealPlanOptionVote(ctx context.Context, in *messages.CreateMealPlanOptionVoteRequest, opts ...grpc.CallOption) (*messages.CreateMealPlanOptionVoteResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.CreateMealPlanOptionVoteResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_CreateMealPlanOptionVote_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) CreateMealPlanTask(ctx context.Context, in *messages.CreateMealPlanTaskRequest, opts ...grpc.CallOption) (*messages.CreateMealPlanTaskResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.CreateMealPlanTaskResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_CreateMealPlanTask_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) CreateRecipe(ctx context.Context, in *messages.CreateRecipeRequest, opts ...grpc.CallOption) (*messages.CreateRecipeResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.CreateRecipeResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_CreateRecipe_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) CreateRecipePrepTask(ctx context.Context, in *messages.CreateRecipePrepTaskRequest, opts ...grpc.CallOption) (*messages.CreateRecipePrepTaskResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.CreateRecipePrepTaskResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_CreateRecipePrepTask_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) CreateRecipeRating(ctx context.Context, in *messages.CreateRecipeRatingRequest, opts ...grpc.CallOption) (*messages.CreateRecipeRatingResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.CreateRecipeRatingResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_CreateRecipeRating_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) CreateRecipeStep(ctx context.Context, in *messages.CreateRecipeStepRequest, opts ...grpc.CallOption) (*messages.CreateRecipeStepResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.CreateRecipeStepResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_CreateRecipeStep_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) CreateRecipeStepCompletionCondition(ctx context.Context, in *messages.CreateRecipeStepCompletionConditionRequest, opts ...grpc.CallOption) (*messages.CreateRecipeStepCompletionConditionResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.CreateRecipeStepCompletionConditionResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_CreateRecipeStepCompletionCondition_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) CreateRecipeStepIngredient(ctx context.Context, in *messages.CreateRecipeStepIngredientRequest, opts ...grpc.CallOption) (*messages.CreateRecipeStepIngredientResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.CreateRecipeStepIngredientResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_CreateRecipeStepIngredient_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) CreateRecipeStepInstrument(ctx context.Context, in *messages.CreateRecipeStepInstrumentRequest, opts ...grpc.CallOption) (*messages.CreateRecipeStepInstrumentResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.CreateRecipeStepInstrumentResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_CreateRecipeStepInstrument_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) CreateRecipeStepProduct(ctx context.Context, in *messages.CreateRecipeStepProductRequest, opts ...grpc.CallOption) (*messages.CreateRecipeStepProductResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.CreateRecipeStepProductResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_CreateRecipeStepProduct_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) CreateRecipeStepVessel(ctx context.Context, in *messages.CreateRecipeStepVesselRequest, opts ...grpc.CallOption) (*messages.CreateRecipeStepVesselResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.CreateRecipeStepVesselResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_CreateRecipeStepVessel_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) CreateValidIngredient(ctx context.Context, in *messages.CreateValidIngredientRequest, opts ...grpc.CallOption) (*messages.CreateValidIngredientResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.CreateValidIngredientResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_CreateValidIngredient_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) CreateValidIngredientGroup(ctx context.Context, in *messages.CreateValidIngredientGroupRequest, opts ...grpc.CallOption) (*messages.CreateValidIngredientGroupResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.CreateValidIngredientGroupResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_CreateValidIngredientGroup_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) CreateValidIngredientMeasurementUnit(ctx context.Context, in *messages.CreateValidIngredientMeasurementUnitRequest, opts ...grpc.CallOption) (*messages.CreateValidIngredientMeasurementUnitResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.CreateValidIngredientMeasurementUnitResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_CreateValidIngredientMeasurementUnit_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) CreateValidIngredientPreparation(ctx context.Context, in *messages.CreateValidIngredientPreparationRequest, opts ...grpc.CallOption) (*messages.CreateValidIngredientPreparationResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.CreateValidIngredientPreparationResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_CreateValidIngredientPreparation_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) CreateValidIngredientState(ctx context.Context, in *messages.CreateValidIngredientStateRequest, opts ...grpc.CallOption) (*messages.CreateValidIngredientStateResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.CreateValidIngredientStateResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_CreateValidIngredientState_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) CreateValidIngredientStateIngredient(ctx context.Context, in *messages.CreateValidIngredientStateIngredientRequest, opts ...grpc.CallOption) (*messages.CreateValidIngredientStateIngredientResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.CreateValidIngredientStateIngredientResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_CreateValidIngredientStateIngredient_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) CreateValidInstrument(ctx context.Context, in *messages.CreateValidInstrumentRequest, opts ...grpc.CallOption) (*messages.CreateValidInstrumentResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.CreateValidInstrumentResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_CreateValidInstrument_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) CreateValidMeasurementUnit(ctx context.Context, in *messages.CreateValidMeasurementUnitRequest, opts ...grpc.CallOption) (*messages.CreateValidMeasurementUnitResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.CreateValidMeasurementUnitResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_CreateValidMeasurementUnit_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) CreateValidMeasurementUnitConversion(ctx context.Context, in *messages.CreateValidMeasurementUnitConversionRequest, opts ...grpc.CallOption) (*messages.CreateValidMeasurementUnitConversionResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.CreateValidMeasurementUnitConversionResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_CreateValidMeasurementUnitConversion_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) CreateValidPreparation(ctx context.Context, in *messages.CreateValidPreparationRequest, opts ...grpc.CallOption) (*messages.CreateValidPreparationResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.CreateValidPreparationResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_CreateValidPreparation_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) CreateValidPreparationInstrument(ctx context.Context, in *messages.CreateValidPreparationInstrumentRequest, opts ...grpc.CallOption) (*messages.CreateValidPreparationInstrumentResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.CreateValidPreparationInstrumentResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_CreateValidPreparationInstrument_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) CreateValidPreparationVessel(ctx context.Context, in *messages.CreateValidPreparationVesselRequest, opts ...grpc.CallOption) (*messages.CreateValidPreparationVesselResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.CreateValidPreparationVesselResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_CreateValidPreparationVessel_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) CreateValidVessel(ctx context.Context, in *messages.CreateValidVesselRequest, opts ...grpc.CallOption) (*messages.CreateValidVesselResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.CreateValidVesselResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_CreateValidVessel_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) FinalizeMealPlan(ctx context.Context, in *messages.FinalizeMealPlanRequest, opts ...grpc.CallOption) (*messages.FinalizeMealPlanResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.FinalizeMealPlanResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_FinalizeMealPlan_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) GetMeal(ctx context.Context, in *messages.GetMealRequest, opts ...grpc.CallOption) (*messages.GetMealResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.GetMealResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_GetMeal_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) GetMealPlan(ctx context.Context, in *messages.GetMealPlanRequest, opts ...grpc.CallOption) (*messages.GetMealPlanResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.GetMealPlanResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_GetMealPlan_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) GetMealPlanEvent(ctx context.Context, in *messages.GetMealPlanEventRequest, opts ...grpc.CallOption) (*messages.GetMealPlanEventResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.GetMealPlanEventResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_GetMealPlanEvent_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) GetMealPlanEvents(ctx context.Context, in *messages.GetMealPlanEventsRequest, opts ...grpc.CallOption) (*messages.GetMealPlanEventsResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.GetMealPlanEventsResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_GetMealPlanEvents_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) GetMealPlanGroceryListItem(ctx context.Context, in *messages.GetMealPlanGroceryListItemRequest, opts ...grpc.CallOption) (*messages.GetMealPlanGroceryListItemResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.GetMealPlanGroceryListItemResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_GetMealPlanGroceryListItem_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) GetMealPlanGroceryListItemsForMealPlan(ctx context.Context, in *messages.GetMealPlanGroceryListItemsForMealPlanRequest, opts ...grpc.CallOption) (*messages.GetMealPlanGroceryListItemsForMealPlanResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.GetMealPlanGroceryListItemsForMealPlanResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_GetMealPlanGroceryListItemsForMealPlan_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) GetMealPlanOption(ctx context.Context, in *messages.GetMealPlanOptionRequest, opts ...grpc.CallOption) (*messages.GetMealPlanOptionResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.GetMealPlanOptionResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_GetMealPlanOption_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) GetMealPlanOptionVote(ctx context.Context, in *messages.GetMealPlanOptionVoteRequest, opts ...grpc.CallOption) (*messages.GetMealPlanOptionVoteResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.GetMealPlanOptionVoteResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_GetMealPlanOptionVote_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) GetMealPlanOptionVotes(ctx context.Context, in *messages.GetMealPlanOptionVotesRequest, opts ...grpc.CallOption) (*messages.GetMealPlanOptionVotesResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.GetMealPlanOptionVotesResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_GetMealPlanOptionVotes_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) GetMealPlanOptions(ctx context.Context, in *messages.GetMealPlanOptionsRequest, opts ...grpc.CallOption) (*messages.GetMealPlanOptionsResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.GetMealPlanOptionsResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_GetMealPlanOptions_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) GetMealPlanTask(ctx context.Context, in *messages.GetMealPlanTaskRequest, opts ...grpc.CallOption) (*messages.GetMealPlanTaskResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.GetMealPlanTaskResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_GetMealPlanTask_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) GetMealPlanTasks(ctx context.Context, in *messages.GetMealPlanTasksRequest, opts ...grpc.CallOption) (*messages.GetMealPlanTasksResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.GetMealPlanTasksResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_GetMealPlanTasks_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) GetMealPlansForHousehold(ctx context.Context, in *messages.GetMealPlansForHouseholdRequest, opts ...grpc.CallOption) (*messages.GetMealPlansForHouseholdResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.GetMealPlansForHouseholdResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_GetMealPlansForHousehold_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) GetMeals(ctx context.Context, in *messages.GetMealsRequest, opts ...grpc.CallOption) (*messages.GetMealsResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.GetMealsResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_GetMeals_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) GetMermaidDiagramForRecipe(ctx context.Context, in *messages.GetMermaidDiagramForRecipeRequest, opts ...grpc.CallOption) (*messages.GetMermaidDiagramForRecipeResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.GetMermaidDiagramForRecipeResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_GetMermaidDiagramForRecipe_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) GetRandomValidIngredient(ctx context.Context, in *messages.GetRandomValidIngredientRequest, opts ...grpc.CallOption) (*messages.GetRandomValidIngredientResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.GetRandomValidIngredientResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_GetRandomValidIngredient_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) GetRandomValidInstrument(ctx context.Context, in *messages.GetRandomValidInstrumentRequest, opts ...grpc.CallOption) (*messages.GetRandomValidInstrumentResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.GetRandomValidInstrumentResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_GetRandomValidInstrument_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) GetRandomValidPreparation(ctx context.Context, in *messages.GetRandomValidPreparationRequest, opts ...grpc.CallOption) (*messages.GetRandomValidPreparationResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.GetRandomValidPreparationResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_GetRandomValidPreparation_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) GetRandomValidVessel(ctx context.Context, in *messages.GetRandomValidVesselRequest, opts ...grpc.CallOption) (*messages.GetRandomValidVesselResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.GetRandomValidVesselResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_GetRandomValidVessel_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) GetRecipe(ctx context.Context, in *messages.GetRecipeRequest, opts ...grpc.CallOption) (*messages.GetRecipeResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.GetRecipeResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_GetRecipe_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) GetRecipeMealPlanTasks(ctx context.Context, in *messages.GetRecipeMealPlanTasksRequest, opts ...grpc.CallOption) (*messages.GetRecipeMealPlanTasksResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.GetRecipeMealPlanTasksResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_GetRecipeMealPlanTasks_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) GetRecipePrepTask(ctx context.Context, in *messages.GetRecipePrepTaskRequest, opts ...grpc.CallOption) (*messages.GetRecipePrepTaskResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.GetRecipePrepTaskResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_GetRecipePrepTask_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) GetRecipePrepTasks(ctx context.Context, in *messages.GetRecipePrepTasksRequest, opts ...grpc.CallOption) (*messages.GetRecipePrepTasksResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.GetRecipePrepTasksResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_GetRecipePrepTasks_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) GetRecipeRating(ctx context.Context, in *messages.GetRecipeRatingRequest, opts ...grpc.CallOption) (*messages.GetRecipeRatingResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.GetRecipeRatingResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_GetRecipeRating_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) GetRecipeRatingsForRecipe(ctx context.Context, in *messages.GetRecipeRatingsForRecipeRequest, opts ...grpc.CallOption) (*messages.GetRecipeRatingsForRecipeResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.GetRecipeRatingsForRecipeResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_GetRecipeRatingsForRecipe_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) GetRecipeStep(ctx context.Context, in *messages.GetRecipeStepRequest, opts ...grpc.CallOption) (*messages.GetRecipeStepResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.GetRecipeStepResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_GetRecipeStep_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) GetRecipeStepCompletionCondition(ctx context.Context, in *messages.GetRecipeStepCompletionConditionRequest, opts ...grpc.CallOption) (*messages.GetRecipeStepCompletionConditionResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.GetRecipeStepCompletionConditionResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_GetRecipeStepCompletionCondition_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) GetRecipeStepCompletionConditions(ctx context.Context, in *messages.GetRecipeStepCompletionConditionsRequest, opts ...grpc.CallOption) (*messages.GetRecipeStepCompletionConditionsResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.GetRecipeStepCompletionConditionsResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_GetRecipeStepCompletionConditions_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) GetRecipeStepIngredient(ctx context.Context, in *messages.GetRecipeStepIngredientRequest, opts ...grpc.CallOption) (*messages.GetRecipeStepIngredientResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.GetRecipeStepIngredientResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_GetRecipeStepIngredient_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) GetRecipeStepIngredients(ctx context.Context, in *messages.GetRecipeStepIngredientsRequest, opts ...grpc.CallOption) (*messages.GetRecipeStepIngredientsResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.GetRecipeStepIngredientsResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_GetRecipeStepIngredients_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) GetRecipeStepInstrument(ctx context.Context, in *messages.GetRecipeStepInstrumentRequest, opts ...grpc.CallOption) (*messages.GetRecipeStepInstrumentResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.GetRecipeStepInstrumentResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_GetRecipeStepInstrument_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) GetRecipeStepInstruments(ctx context.Context, in *messages.GetRecipeStepInstrumentsRequest, opts ...grpc.CallOption) (*messages.GetRecipeStepInstrumentsResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.GetRecipeStepInstrumentsResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_GetRecipeStepInstruments_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) GetRecipeStepProduct(ctx context.Context, in *messages.GetRecipeStepProductRequest, opts ...grpc.CallOption) (*messages.GetRecipeStepProductResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.GetRecipeStepProductResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_GetRecipeStepProduct_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) GetRecipeStepProducts(ctx context.Context, in *messages.GetRecipeStepProductsRequest, opts ...grpc.CallOption) (*messages.GetRecipeStepProductsResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.GetRecipeStepProductsResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_GetRecipeStepProducts_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) GetRecipeStepVessel(ctx context.Context, in *messages.GetRecipeStepVesselRequest, opts ...grpc.CallOption) (*messages.GetRecipeStepVesselResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.GetRecipeStepVesselResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_GetRecipeStepVessel_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) GetRecipeStepVessels(ctx context.Context, in *messages.GetRecipeStepVesselsRequest, opts ...grpc.CallOption) (*messages.GetRecipeStepVesselsResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.GetRecipeStepVesselsResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_GetRecipeStepVessels_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) GetRecipeSteps(ctx context.Context, in *messages.GetRecipeStepsRequest, opts ...grpc.CallOption) (*messages.GetRecipeStepsResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.GetRecipeStepsResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_GetRecipeSteps_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) GetRecipes(ctx context.Context, in *messages.GetRecipesRequest, opts ...grpc.CallOption) (*messages.GetRecipesResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.GetRecipesResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_GetRecipes_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) GetValidIngredient(ctx context.Context, in *messages.GetValidIngredientRequest, opts ...grpc.CallOption) (*messages.GetValidIngredientResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.GetValidIngredientResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_GetValidIngredient_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) GetValidIngredientGroup(ctx context.Context, in *messages.GetValidIngredientGroupRequest, opts ...grpc.CallOption) (*messages.GetValidIngredientGroupResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.GetValidIngredientGroupResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_GetValidIngredientGroup_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) GetValidIngredientGroups(ctx context.Context, in *messages.GetValidIngredientGroupsRequest, opts ...grpc.CallOption) (*messages.GetValidIngredientGroupsResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.GetValidIngredientGroupsResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_GetValidIngredientGroups_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) GetValidIngredientMeasurementUnit(ctx context.Context, in *messages.GetValidIngredientMeasurementUnitRequest, opts ...grpc.CallOption) (*messages.GetValidIngredientMeasurementUnitResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.GetValidIngredientMeasurementUnitResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_GetValidIngredientMeasurementUnit_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) GetValidIngredientMeasurementUnits(ctx context.Context, in *messages.GetValidIngredientMeasurementUnitsRequest, opts ...grpc.CallOption) (*messages.GetValidIngredientMeasurementUnitsResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.GetValidIngredientMeasurementUnitsResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_GetValidIngredientMeasurementUnits_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) GetValidIngredientMeasurementUnitsByIngredient(ctx context.Context, in *messages.GetValidIngredientMeasurementUnitsByIngredientRequest, opts ...grpc.CallOption) (*messages.GetValidIngredientMeasurementUnitsByIngredientResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.GetValidIngredientMeasurementUnitsByIngredientResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_GetValidIngredientMeasurementUnitsByIngredient_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) GetValidIngredientMeasurementUnitsByMeasurementUnit(ctx context.Context, in *messages.GetValidIngredientMeasurementUnitsByMeasurementUnitRequest, opts ...grpc.CallOption) (*messages.GetValidIngredientMeasurementUnitsByMeasurementUnitResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.GetValidIngredientMeasurementUnitsByMeasurementUnitResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_GetValidIngredientMeasurementUnitsByMeasurementUnit_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) GetValidIngredientPreparation(ctx context.Context, in *messages.GetValidIngredientPreparationRequest, opts ...grpc.CallOption) (*messages.GetValidIngredientPreparationResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.GetValidIngredientPreparationResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_GetValidIngredientPreparation_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) GetValidIngredientPreparations(ctx context.Context, in *messages.GetValidIngredientPreparationsRequest, opts ...grpc.CallOption) (*messages.GetValidIngredientPreparationsResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.GetValidIngredientPreparationsResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_GetValidIngredientPreparations_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) GetValidIngredientPreparationsByIngredient(ctx context.Context, in *messages.GetValidIngredientPreparationsByIngredientRequest, opts ...grpc.CallOption) (*messages.GetValidIngredientPreparationsByIngredientResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.GetValidIngredientPreparationsByIngredientResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_GetValidIngredientPreparationsByIngredient_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) GetValidIngredientPreparationsByPreparation(ctx context.Context, in *messages.GetValidIngredientPreparationsByPreparationRequest, opts ...grpc.CallOption) (*messages.GetValidIngredientPreparationsByPreparationResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.GetValidIngredientPreparationsByPreparationResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_GetValidIngredientPreparationsByPreparation_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) GetValidIngredientState(ctx context.Context, in *messages.GetValidIngredientStateRequest, opts ...grpc.CallOption) (*messages.GetValidIngredientStateResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.GetValidIngredientStateResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_GetValidIngredientState_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) GetValidIngredientStateIngredient(ctx context.Context, in *messages.GetValidIngredientStateIngredientRequest, opts ...grpc.CallOption) (*messages.GetValidIngredientStateIngredientResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.GetValidIngredientStateIngredientResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_GetValidIngredientStateIngredient_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) GetValidIngredientStateIngredients(ctx context.Context, in *messages.GetValidIngredientStateIngredientsRequest, opts ...grpc.CallOption) (*messages.GetValidIngredientStateIngredientsResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.GetValidIngredientStateIngredientsResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_GetValidIngredientStateIngredients_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) GetValidIngredientStateIngredientsByIngredient(ctx context.Context, in *messages.GetValidIngredientStateIngredientsByIngredientRequest, opts ...grpc.CallOption) (*messages.GetValidIngredientStateIngredientsByIngredientResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.GetValidIngredientStateIngredientsByIngredientResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_GetValidIngredientStateIngredientsByIngredient_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) GetValidIngredientStateIngredientsByIngredientState(ctx context.Context, in *messages.GetValidIngredientStateIngredientsByIngredientStateRequest, opts ...grpc.CallOption) (*messages.GetValidIngredientStateIngredientsByIngredientStateResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.GetValidIngredientStateIngredientsByIngredientStateResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_GetValidIngredientStateIngredientsByIngredientState_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) GetValidIngredientStates(ctx context.Context, in *messages.GetValidIngredientStatesRequest, opts ...grpc.CallOption) (*messages.GetValidIngredientStatesResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.GetValidIngredientStatesResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_GetValidIngredientStates_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) GetValidIngredients(ctx context.Context, in *messages.GetValidIngredientsRequest, opts ...grpc.CallOption) (*messages.GetValidIngredientsResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.GetValidIngredientsResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_GetValidIngredients_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) GetValidInstrument(ctx context.Context, in *messages.GetValidInstrumentRequest, opts ...grpc.CallOption) (*messages.GetValidInstrumentResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.GetValidInstrumentResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_GetValidInstrument_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) GetValidInstruments(ctx context.Context, in *messages.GetValidInstrumentsRequest, opts ...grpc.CallOption) (*messages.GetValidInstrumentsResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.GetValidInstrumentsResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_GetValidInstruments_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) GetValidMeasurementUnit(ctx context.Context, in *messages.GetValidMeasurementUnitRequest, opts ...grpc.CallOption) (*messages.GetValidMeasurementUnitResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.GetValidMeasurementUnitResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_GetValidMeasurementUnit_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) GetValidMeasurementUnitConversion(ctx context.Context, in *messages.GetValidMeasurementUnitConversionRequest, opts ...grpc.CallOption) (*messages.GetValidMeasurementUnitConversionResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.GetValidMeasurementUnitConversionResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_GetValidMeasurementUnitConversion_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) GetValidMeasurementUnitConversionsFromUnit(ctx context.Context, in *messages.GetValidMeasurementUnitConversionsFromUnitRequest, opts ...grpc.CallOption) (*messages.GetValidMeasurementUnitConversionsFromUnitResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.GetValidMeasurementUnitConversionsFromUnitResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_GetValidMeasurementUnitConversionsFromUnit_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) GetValidMeasurementUnitConversionsToUnit(ctx context.Context, in *messages.GetValidMeasurementUnitConversionsToUnitRequest, opts ...grpc.CallOption) (*messages.GetValidMeasurementUnitConversionsToUnitResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.GetValidMeasurementUnitConversionsToUnitResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_GetValidMeasurementUnitConversionsToUnit_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) GetValidMeasurementUnits(ctx context.Context, in *messages.GetValidMeasurementUnitsRequest, opts ...grpc.CallOption) (*messages.GetValidMeasurementUnitsResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.GetValidMeasurementUnitsResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_GetValidMeasurementUnits_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) GetValidPreparation(ctx context.Context, in *messages.GetValidPreparationRequest, opts ...grpc.CallOption) (*messages.GetValidPreparationResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.GetValidPreparationResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_GetValidPreparation_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) GetValidPreparationInstrument(ctx context.Context, in *messages.GetValidPreparationInstrumentRequest, opts ...grpc.CallOption) (*messages.GetValidPreparationInstrumentResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.GetValidPreparationInstrumentResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_GetValidPreparationInstrument_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) GetValidPreparationInstruments(ctx context.Context, in *messages.GetValidPreparationInstrumentsRequest, opts ...grpc.CallOption) (*messages.GetValidPreparationInstrumentsResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.GetValidPreparationInstrumentsResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_GetValidPreparationInstruments_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) GetValidPreparationInstrumentsByInstrument(ctx context.Context, in *messages.GetValidPreparationInstrumentsByInstrumentRequest, opts ...grpc.CallOption) (*messages.GetValidPreparationInstrumentsByInstrumentResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.GetValidPreparationInstrumentsByInstrumentResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_GetValidPreparationInstrumentsByInstrument_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) GetValidPreparationInstrumentsByPreparation(ctx context.Context, in *messages.GetValidPreparationInstrumentsByPreparationRequest, opts ...grpc.CallOption) (*messages.GetValidPreparationInstrumentsByPreparationResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.GetValidPreparationInstrumentsByPreparationResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_GetValidPreparationInstrumentsByPreparation_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) GetValidPreparationVessel(ctx context.Context, in *messages.GetValidPreparationVesselRequest, opts ...grpc.CallOption) (*messages.GetValidPreparationVesselResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.GetValidPreparationVesselResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_GetValidPreparationVessel_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) GetValidPreparationVessels(ctx context.Context, in *messages.GetValidPreparationVesselsRequest, opts ...grpc.CallOption) (*messages.GetValidPreparationVesselsResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.GetValidPreparationVesselsResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_GetValidPreparationVessels_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) GetValidPreparationVesselsByPreparation(ctx context.Context, in *messages.GetValidPreparationVesselsByPreparationRequest, opts ...grpc.CallOption) (*messages.GetValidPreparationVesselsByPreparationResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.GetValidPreparationVesselsByPreparationResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_GetValidPreparationVesselsByPreparation_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) GetValidPreparationVesselsByVessel(ctx context.Context, in *messages.GetValidPreparationVesselsByVesselRequest, opts ...grpc.CallOption) (*messages.GetValidPreparationVesselsByVesselResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.GetValidPreparationVesselsByVesselResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_GetValidPreparationVesselsByVessel_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) GetValidPreparations(ctx context.Context, in *messages.GetValidPreparationsRequest, opts ...grpc.CallOption) (*messages.GetValidPreparationsResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.GetValidPreparationsResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_GetValidPreparations_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) GetValidVessel(ctx context.Context, in *messages.GetValidVesselRequest, opts ...grpc.CallOption) (*messages.GetValidVesselResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.GetValidVesselResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_GetValidVessel_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) GetValidVessels(ctx context.Context, in *messages.GetValidVesselsRequest, opts ...grpc.CallOption) (*messages.GetValidVesselsResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.GetValidVesselsResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_GetValidVessels_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) RunFinalizeMealPlanWorker(ctx context.Context, in *messages.RunFinalizeMealPlanWorkerRequest, opts ...grpc.CallOption) (*messages.RunFinalizeMealPlanWorkerResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.RunFinalizeMealPlanWorkerResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_RunFinalizeMealPlanWorker_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) RunMealPlanGroceryListInitializerWorker(ctx context.Context, in *messages.RunMealPlanGroceryListInitializerWorkerRequest, opts ...grpc.CallOption) (*messages.RunMealPlanGroceryListInitializerWorkerResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.RunMealPlanGroceryListInitializerWorkerResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_RunMealPlanGroceryListInitializerWorker_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) RunMealPlanTaskCreatorWorker(ctx context.Context, in *messages.RunMealPlanTaskCreatorWorkerRequest, opts ...grpc.CallOption) (*messages.RunMealPlanTaskCreatorWorkerResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.RunMealPlanTaskCreatorWorkerResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_RunMealPlanTaskCreatorWorker_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) SearchForMeals(ctx context.Context, in *messages.SearchForMealsRequest, opts ...grpc.CallOption) (*messages.SearchForMealsResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.SearchForMealsResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_SearchForMeals_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) SearchForRecipes(ctx context.Context, in *messages.SearchForRecipesRequest, opts ...grpc.CallOption) (*messages.SearchForRecipesResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.SearchForRecipesResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_SearchForRecipes_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) SearchForValidIngredientGroups(ctx context.Context, in *messages.SearchForValidIngredientGroupsRequest, opts ...grpc.CallOption) (*messages.SearchForValidIngredientGroupsResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.SearchForValidIngredientGroupsResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_SearchForValidIngredientGroups_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) SearchForValidIngredientStates(ctx context.Context, in *messages.SearchForValidIngredientStatesRequest, opts ...grpc.CallOption) (*messages.SearchForValidIngredientStatesResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.SearchForValidIngredientStatesResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_SearchForValidIngredientStates_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) SearchForValidIngredients(ctx context.Context, in *messages.SearchForValidIngredientsRequest, opts ...grpc.CallOption) (*messages.SearchForValidIngredientsResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.SearchForValidIngredientsResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_SearchForValidIngredients_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) SearchForValidInstruments(ctx context.Context, in *messages.SearchForValidInstrumentsRequest, opts ...grpc.CallOption) (*messages.SearchForValidInstrumentsResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.SearchForValidInstrumentsResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_SearchForValidInstruments_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) SearchForValidMeasurementUnits(ctx context.Context, in *messages.SearchForValidMeasurementUnitsRequest, opts ...grpc.CallOption) (*messages.SearchForValidMeasurementUnitsResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.SearchForValidMeasurementUnitsResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_SearchForValidMeasurementUnits_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) SearchForValidPreparations(ctx context.Context, in *messages.SearchForValidPreparationsRequest, opts ...grpc.CallOption) (*messages.SearchForValidPreparationsResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.SearchForValidPreparationsResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_SearchForValidPreparations_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) SearchForValidVessels(ctx context.Context, in *messages.SearchForValidVesselsRequest, opts ...grpc.CallOption) (*messages.SearchForValidVesselsResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.SearchForValidVesselsResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_SearchForValidVessels_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) SearchValidIngredientsByPreparation(ctx context.Context, in *messages.SearchValidIngredientsByPreparationRequest, opts ...grpc.CallOption) (*messages.SearchValidIngredientsByPreparationResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.SearchValidIngredientsByPreparationResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_SearchValidIngredientsByPreparation_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) SearchValidMeasurementUnitsByIngredient(ctx context.Context, in *messages.SearchValidMeasurementUnitsByIngredientRequest, opts ...grpc.CallOption) (*messages.SearchValidMeasurementUnitsByIngredientResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.SearchValidMeasurementUnitsByIngredientResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_SearchValidMeasurementUnitsByIngredient_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) UpdateMealPlan(ctx context.Context, in *messages.UpdateMealPlanRequest, opts ...grpc.CallOption) (*messages.UpdateMealPlanResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.UpdateMealPlanResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_UpdateMealPlan_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) UpdateMealPlanEvent(ctx context.Context, in *messages.UpdateMealPlanEventRequest, opts ...grpc.CallOption) (*messages.UpdateMealPlanEventResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.UpdateMealPlanEventResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_UpdateMealPlanEvent_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) UpdateMealPlanGroceryListItem(ctx context.Context, in *messages.UpdateMealPlanGroceryListItemRequest, opts ...grpc.CallOption) (*messages.UpdateMealPlanGroceryListItemResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.UpdateMealPlanGroceryListItemResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_UpdateMealPlanGroceryListItem_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) UpdateMealPlanOption(ctx context.Context, in *messages.UpdateMealPlanOptionRequest, opts ...grpc.CallOption) (*messages.UpdateMealPlanOptionResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.UpdateMealPlanOptionResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_UpdateMealPlanOption_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) UpdateMealPlanOptionVote(ctx context.Context, in *messages.UpdateMealPlanOptionVoteRequest, opts ...grpc.CallOption) (*messages.UpdateMealPlanOptionVoteResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.UpdateMealPlanOptionVoteResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_UpdateMealPlanOptionVote_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) UpdateMealPlanTaskStatus(ctx context.Context, in *messages.UpdateMealPlanTaskStatusRequest, opts ...grpc.CallOption) (*messages.UpdateMealPlanTaskStatusResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.UpdateMealPlanTaskStatusResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_UpdateMealPlanTaskStatus_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) UpdateRecipe(ctx context.Context, in *messages.UpdateRecipeRequest, opts ...grpc.CallOption) (*messages.UpdateRecipeResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.UpdateRecipeResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_UpdateRecipe_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) UpdateRecipePrepTask(ctx context.Context, in *messages.UpdateRecipePrepTaskRequest, opts ...grpc.CallOption) (*messages.UpdateRecipePrepTaskResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.UpdateRecipePrepTaskResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_UpdateRecipePrepTask_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) UpdateRecipeRating(ctx context.Context, in *messages.UpdateRecipeRatingRequest, opts ...grpc.CallOption) (*messages.UpdateRecipeRatingResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.UpdateRecipeRatingResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_UpdateRecipeRating_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) UpdateRecipeStep(ctx context.Context, in *messages.UpdateRecipeStepRequest, opts ...grpc.CallOption) (*messages.UpdateRecipeStepResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.UpdateRecipeStepResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_UpdateRecipeStep_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) UpdateRecipeStepCompletionCondition(ctx context.Context, in *messages.UpdateRecipeStepCompletionConditionRequest, opts ...grpc.CallOption) (*messages.UpdateRecipeStepCompletionConditionResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.UpdateRecipeStepCompletionConditionResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_UpdateRecipeStepCompletionCondition_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) UpdateRecipeStepIngredient(ctx context.Context, in *messages.UpdateRecipeStepIngredientRequest, opts ...grpc.CallOption) (*messages.UpdateRecipeStepIngredientResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.UpdateRecipeStepIngredientResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_UpdateRecipeStepIngredient_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) UpdateRecipeStepInstrument(ctx context.Context, in *messages.UpdateRecipeStepInstrumentRequest, opts ...grpc.CallOption) (*messages.UpdateRecipeStepInstrumentResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.UpdateRecipeStepInstrumentResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_UpdateRecipeStepInstrument_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) UpdateRecipeStepProduct(ctx context.Context, in *messages.UpdateRecipeStepProductRequest, opts ...grpc.CallOption) (*messages.UpdateRecipeStepProductResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.UpdateRecipeStepProductResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_UpdateRecipeStepProduct_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) UpdateRecipeStepVessel(ctx context.Context, in *messages.UpdateRecipeStepVesselRequest, opts ...grpc.CallOption) (*messages.UpdateRecipeStepVesselResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.UpdateRecipeStepVesselResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_UpdateRecipeStepVessel_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) UpdateValidIngredient(ctx context.Context, in *messages.UpdateValidIngredientRequest, opts ...grpc.CallOption) (*messages.UpdateValidIngredientResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.UpdateValidIngredientResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_UpdateValidIngredient_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) UpdateValidIngredientGroup(ctx context.Context, in *messages.UpdateValidIngredientGroupRequest, opts ...grpc.CallOption) (*messages.UpdateValidIngredientGroupResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.UpdateValidIngredientGroupResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_UpdateValidIngredientGroup_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) UpdateValidIngredientMeasurementUnit(ctx context.Context, in *messages.UpdateValidIngredientMeasurementUnitRequest, opts ...grpc.CallOption) (*messages.UpdateValidIngredientMeasurementUnitResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.UpdateValidIngredientMeasurementUnitResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_UpdateValidIngredientMeasurementUnit_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) UpdateValidIngredientPreparation(ctx context.Context, in *messages.UpdateValidIngredientPreparationRequest, opts ...grpc.CallOption) (*messages.UpdateValidIngredientPreparationResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.UpdateValidIngredientPreparationResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_UpdateValidIngredientPreparation_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) UpdateValidIngredientState(ctx context.Context, in *messages.UpdateValidIngredientStateRequest, opts ...grpc.CallOption) (*messages.UpdateValidIngredientStateResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.UpdateValidIngredientStateResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_UpdateValidIngredientState_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) UpdateValidIngredientStateIngredient(ctx context.Context, in *messages.UpdateValidIngredientStateIngredientRequest, opts ...grpc.CallOption) (*messages.UpdateValidIngredientStateIngredientResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.UpdateValidIngredientStateIngredientResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_UpdateValidIngredientStateIngredient_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) UpdateValidInstrument(ctx context.Context, in *messages.UpdateValidInstrumentRequest, opts ...grpc.CallOption) (*messages.UpdateValidInstrumentResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.UpdateValidInstrumentResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_UpdateValidInstrument_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) UpdateValidMeasurementUnit(ctx context.Context, in *messages.UpdateValidMeasurementUnitRequest, opts ...grpc.CallOption) (*messages.UpdateValidMeasurementUnitResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.UpdateValidMeasurementUnitResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_UpdateValidMeasurementUnit_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) UpdateValidMeasurementUnitConversion(ctx context.Context, in *messages.UpdateValidMeasurementUnitConversionRequest, opts ...grpc.CallOption) (*messages.UpdateValidMeasurementUnitConversionResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.UpdateValidMeasurementUnitConversionResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_UpdateValidMeasurementUnitConversion_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) UpdateValidPreparation(ctx context.Context, in *messages.UpdateValidPreparationRequest, opts ...grpc.CallOption) (*messages.UpdateValidPreparationResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.UpdateValidPreparationResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_UpdateValidPreparation_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) UpdateValidPreparationInstrument(ctx context.Context, in *messages.UpdateValidPreparationInstrumentRequest, opts ...grpc.CallOption) (*messages.UpdateValidPreparationInstrumentResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.UpdateValidPreparationInstrumentResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_UpdateValidPreparationInstrument_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) UpdateValidPreparationVessel(ctx context.Context, in *messages.UpdateValidPreparationVesselRequest, opts ...grpc.CallOption) (*messages.UpdateValidPreparationVesselResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.UpdateValidPreparationVesselResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_UpdateValidPreparationVessel_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) UpdateValidVessel(ctx context.Context, in *messages.UpdateValidVesselRequest, opts ...grpc.CallOption) (*messages.UpdateValidVesselResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.UpdateValidVesselResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_UpdateValidVessel_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) ArchiveHouseholdInstrumentOwnership(ctx context.Context, in *messages.ArchiveHouseholdInstrumentOwnershipRequest, opts ...grpc.CallOption) (*messages.ArchiveHouseholdInstrumentOwnershipResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.ArchiveHouseholdInstrumentOwnershipResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_ArchiveHouseholdInstrumentOwnership_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) ArchiveUserIngredientPreference(ctx context.Context, in *messages.ArchiveUserIngredientPreferenceRequest, opts ...grpc.CallOption) (*messages.ArchiveUserIngredientPreferenceResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.ArchiveUserIngredientPreferenceResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_ArchiveUserIngredientPreference_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) CreateHouseholdInstrumentOwnership(ctx context.Context, in *messages.CreateHouseholdInstrumentOwnershipRequest, opts ...grpc.CallOption) (*messages.CreateHouseholdInstrumentOwnershipResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.CreateHouseholdInstrumentOwnershipResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_CreateHouseholdInstrumentOwnership_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) CreateUserIngredientPreference(ctx context.Context, in *messages.CreateUserIngredientPreferenceRequest, opts ...grpc.CallOption) (*messages.CreateUserIngredientPreferenceResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.CreateUserIngredientPreferenceResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_CreateUserIngredientPreference_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) GetHouseholdInstrumentOwnership(ctx context.Context, in *messages.GetHouseholdInstrumentOwnershipRequest, opts ...grpc.CallOption) (*messages.GetHouseholdInstrumentOwnershipResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.GetHouseholdInstrumentOwnershipResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_GetHouseholdInstrumentOwnership_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) GetHouseholdInstrumentOwnerships(ctx context.Context, in *messages.GetHouseholdInstrumentOwnershipsRequest, opts ...grpc.CallOption) (*messages.GetHouseholdInstrumentOwnershipsResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.GetHouseholdInstrumentOwnershipsResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_GetHouseholdInstrumentOwnerships_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) GetUserIngredientPreferences(ctx context.Context, in *messages.GetUserIngredientPreferencesRequest, opts ...grpc.CallOption) (*messages.GetUserIngredientPreferencesResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.GetUserIngredientPreferencesResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_GetUserIngredientPreferences_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) UpdateHouseholdInstrumentOwnership(ctx context.Context, in *messages.UpdateHouseholdInstrumentOwnershipRequest, opts ...grpc.CallOption) (*messages.UpdateHouseholdInstrumentOwnershipResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.UpdateHouseholdInstrumentOwnershipResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_UpdateHouseholdInstrumentOwnership_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinnerDoneBetterClient) UpdateUserIngredientPreference(ctx context.Context, in *messages.UpdateUserIngredientPreferenceRequest, opts ...grpc.CallOption) (*messages.UpdateUserIngredientPreferenceResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(messages.UpdateUserIngredientPreferenceResponse)
	err := c.cc.Invoke(ctx, DinnerDoneBetter_UpdateUserIngredientPreference_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DinnerDoneBetterServer is the server API for DinnerDoneBetter service.
// All implementations must embed UnimplementedDinnerDoneBetterServer
// for forward compatibility.
type DinnerDoneBetterServer interface {
	Ping(context.Context, *messages.PingRequest) (*messages.PingResponse, error)
	ExchangeToken(context.Context, *messages.ExchangeTokenRequest) (*messages.ExchangeTokenResponse, error)
	AcceptHouseholdInvitation(context.Context, *messages.AcceptHouseholdInvitationRequest) (*messages.AcceptHouseholdInvitationResponse, error)
	AdminLoginForToken(context.Context, *messages.AdminLoginForTokenRequest) (*messages.AdminLoginForTokenResponse, error)
	AdminUpdateUserStatus(context.Context, *messages.AdminUpdateUserStatusRequest) (*messages.AdminUpdateUserStatusResponse, error)
	AggregateUserDataReport(context.Context, *messages.AggregateUserDataReportRequest) (*messages.AggregateUserDataReportResponse, error)
	ArchiveHousehold(context.Context, *messages.ArchiveHouseholdRequest) (*messages.ArchiveHouseholdResponse, error)
	ArchiveOAuth2Client(context.Context, *messages.ArchiveOAuth2ClientRequest) (*messages.ArchiveOAuth2ClientResponse, error)
	ArchiveServiceSetting(context.Context, *messages.ArchiveServiceSettingRequest) (*messages.ArchiveServiceSettingResponse, error)
	ArchiveServiceSettingConfiguration(context.Context, *messages.ArchiveServiceSettingConfigurationRequest) (*messages.ArchiveServiceSettingConfigurationResponse, error)
	ArchiveUser(context.Context, *messages.ArchiveUserRequest) (*messages.ArchiveUserResponse, error)
	ArchiveUserMembership(context.Context, *messages.ArchiveUserMembershipRequest) (*messages.ArchiveUserMembershipResponse, error)
	ArchiveWebhook(context.Context, *messages.ArchiveWebhookRequest) (*messages.ArchiveWebhookResponse, error)
	ArchiveWebhookTriggerEvent(context.Context, *messages.ArchiveWebhookTriggerEventRequest) (*messages.ArchiveWebhookTriggerEventResponse, error)
	CancelHouseholdInvitation(context.Context, *messages.CancelHouseholdInvitationRequest) (*messages.CancelHouseholdInvitationResponse, error)
	CheckPermissions(context.Context, *messages.CheckPermissionsRequest) (*messages.CheckPermissionsResponse, error)
	CreateHousehold(context.Context, *messages.CreateHouseholdRequest) (*messages.CreateHouseholdResponse, error)
	CreateHouseholdInvitation(context.Context, *messages.CreateHouseholdInvitationRequest) (*messages.CreateHouseholdInvitationResponse, error)
	CreateOAuth2Client(context.Context, *messages.CreateOAuth2ClientRequest) (*messages.CreateOAuth2ClientResponse, error)
	CreateServiceSetting(context.Context, *messages.CreateServiceSettingRequest) (*messages.CreateServiceSettingResponse, error)
	CreateServiceSettingConfiguration(context.Context, *messages.CreateServiceSettingConfigurationRequest) (*messages.CreateServiceSettingConfigurationResponse, error)
	CreateUser(context.Context, *messages.CreateUserRequest) (*messages.CreateUserResponse, error)
	CreateUserNotification(context.Context, *messages.CreateUserNotificationRequest) (*messages.CreateUserNotificationResponse, error)
	CreateWebhook(context.Context, *messages.CreateWebhookRequest) (*messages.CreateWebhookResponse, error)
	CreateWebhookTriggerEvent(context.Context, *messages.CreateWebhookTriggerEventRequest) (*messages.CreateWebhookTriggerEventResponse, error)
	DestroyAllUserData(context.Context, *messages.DestroyAllUserDataRequest) (*messages.DestroyAllUserDataResponse, error)
	FetchUserDataReport(context.Context, *messages.FetchUserDataReportRequest) (*messages.FetchUserDataReportResponse, error)
	GetActiveHousehold(context.Context, *messages.GetActiveHouseholdRequest) (*messages.GetActiveHouseholdResponse, error)
	GetAuditLogEntriesForHousehold(context.Context, *messages.GetAuditLogEntriesForHouseholdRequest) (*messages.GetAuditLogEntriesForHouseholdResponse, error)
	GetAuditLogEntriesForUser(context.Context, *messages.GetAuditLogEntriesForUserRequest) (*messages.GetAuditLogEntriesForUserResponse, error)
	GetAuditLogEntryByID(context.Context, *messages.GetAuditLogEntryByIDRequest) (*messages.GetAuditLogEntryByIDResponse, error)
	GetAuthStatus(context.Context, *messages.GetAuthStatusRequest) (*messages.GetAuthStatusResponse, error)
	GetHousehold(context.Context, *messages.GetHouseholdRequest) (*messages.GetHouseholdResponse, error)
	GetHouseholdInvitation(context.Context, *messages.GetHouseholdInvitationRequest) (*messages.GetHouseholdInvitationResponse, error)
	GetHouseholdInvitationByID(context.Context, *messages.GetHouseholdInvitationByIDRequest) (*messages.GetHouseholdInvitationByIDResponse, error)
	GetHouseholds(context.Context, *messages.GetHouseholdsRequest) (*messages.GetHouseholdsResponse, error)
	GetOAuth2Client(context.Context, *messages.GetOAuth2ClientRequest) (*messages.GetOAuth2ClientResponse, error)
	GetOAuth2Clients(context.Context, *messages.GetOAuth2ClientsRequest) (*messages.GetOAuth2ClientsResponse, error)
	GetReceivedHouseholdInvitations(context.Context, *messages.GetReceivedHouseholdInvitationsRequest) (*messages.GetReceivedHouseholdInvitationsResponse, error)
	GetSelf(context.Context, *messages.GetSelfRequest) (*messages.GetSelfResponse, error)
	GetSentHouseholdInvitations(context.Context, *messages.GetSentHouseholdInvitationsRequest) (*messages.GetSentHouseholdInvitationsResponse, error)
	GetServiceSetting(context.Context, *messages.GetServiceSettingRequest) (*messages.GetServiceSettingResponse, error)
	GetServiceSettingConfigurationByName(context.Context, *messages.GetServiceSettingConfigurationByNameRequest) (*messages.GetServiceSettingConfigurationByNameResponse, error)
	GetServiceSettingConfigurationsForHousehold(context.Context, *messages.GetServiceSettingConfigurationsForHouseholdRequest) (*messages.GetServiceSettingConfigurationsForHouseholdResponse, error)
	GetServiceSettingConfigurationsForUser(context.Context, *messages.GetServiceSettingConfigurationsForUserRequest) (*messages.GetServiceSettingConfigurationsForUserResponse, error)
	GetServiceSettings(context.Context, *messages.GetServiceSettingsRequest) (*messages.GetServiceSettingsResponse, error)
	GetUser(context.Context, *messages.GetUserRequest) (*messages.GetUserResponse, error)
	GetUserNotification(context.Context, *messages.GetUserNotificationRequest) (*messages.GetUserNotificationResponse, error)
	GetUserNotifications(context.Context, *messages.GetUserNotificationsRequest) (*messages.GetUserNotificationsResponse, error)
	GetUsers(context.Context, *messages.GetUsersRequest) (*messages.GetUsersResponse, error)
	GetWebhook(context.Context, *messages.GetWebhookRequest) (*messages.GetWebhookResponse, error)
	GetWebhooks(context.Context, *messages.GetWebhooksRequest) (*messages.GetWebhooksResponse, error)
	LoginForToken(context.Context, *messages.LoginForTokenRequest) (*messages.LoginForTokenResponse, error)
	PublishArbitraryQueueMessage(context.Context, *messages.PublishArbitraryQueueMessageRequest) (*messages.PublishArbitraryQueueMessageResponse, error)
	RedeemPasswordResetToken(context.Context, *messages.RedeemPasswordResetTokenRequest) (*messages.RedeemPasswordResetTokenResponse, error)
	RefreshTOTPSecret(context.Context, *messages.RefreshTOTPSecretRequest) (*messages.RefreshTOTPSecretResponse, error)
	RejectHouseholdInvitation(context.Context, *messages.RejectHouseholdInvitationRequest) (*messages.RejectHouseholdInvitationResponse, error)
	RequestEmailVerificationEmail(context.Context, *messages.RequestEmailVerificationEmailRequest) (*messages.RequestEmailVerificationEmailResponse, error)
	RequestPasswordResetToken(context.Context, *messages.RequestPasswordResetTokenRequest) (*messages.RequestPasswordResetTokenResponse, error)
	RequestUsernameReminder(context.Context, *messages.RequestUsernameReminderRequest) (*messages.RequestUsernameReminderResponse, error)
	SearchForServiceSettings(context.Context, *messages.SearchForServiceSettingsRequest) (*messages.SearchForServiceSettingsResponse, error)
	SearchForUsers(context.Context, *messages.SearchForUsersRequest) (*messages.SearchForUsersResponse, error)
	SetDefaultHousehold(context.Context, *messages.SetDefaultHouseholdRequest) (*messages.SetDefaultHouseholdResponse, error)
	TransferHouseholdOwnership(context.Context, *messages.TransferHouseholdOwnershipRequest) (*messages.TransferHouseholdOwnershipResponse, error)
	UpdateHousehold(context.Context, *messages.UpdateHouseholdRequest) (*messages.UpdateHouseholdResponse, error)
	UpdateHouseholdMemberPermissions(context.Context, *messages.UpdateHouseholdMemberPermissionsRequest) (*messages.UpdateHouseholdMemberPermissionsResponse, error)
	UpdatePassword(context.Context, *messages.UpdatePasswordRequest) (*messages.UpdatePasswordResponse, error)
	UpdateServiceSettingConfiguration(context.Context, *messages.UpdateServiceSettingConfigurationRequest) (*messages.UpdateServiceSettingConfigurationResponse, error)
	UpdateUserDetails(context.Context, *messages.UpdateUserDetailsRequest) (*messages.UpdateUserDetailsResponse, error)
	UpdateUserEmailAddress(context.Context, *messages.UpdateUserEmailAddressRequest) (*messages.UpdateUserEmailAddressResponse, error)
	UpdateUserNotification(context.Context, *messages.UpdateUserNotificationRequest) (*messages.UpdateUserNotificationResponse, error)
	UpdateUserUsername(context.Context, *messages.UpdateUserUsernameRequest) (*messages.UpdateUserUsernameResponse, error)
	UploadUserAvatar(context.Context, *messages.UploadUserAvatarRequest) (*messages.UploadUserAvatarResponse, error)
	VerifyEmailAddress(context.Context, *messages.VerifyEmailAddressRequest) (*messages.VerifyEmailAddressResponse, error)
	VerifyTOTPSecret(context.Context, *messages.VerifyTOTPSecretRequest) (*messages.VerifyTOTPSecretResponse, error)
	ArchiveMeal(context.Context, *messages.ArchiveMealRequest) (*messages.ArchiveMealResponse, error)
	ArchiveMealPlan(context.Context, *messages.ArchiveMealPlanRequest) (*messages.ArchiveMealPlanResponse, error)
	ArchiveMealPlanEvent(context.Context, *messages.ArchiveMealPlanEventRequest) (*messages.ArchiveMealPlanEventResponse, error)
	ArchiveMealPlanGroceryListItem(context.Context, *messages.ArchiveMealPlanGroceryListItemRequest) (*messages.ArchiveMealPlanGroceryListItemResponse, error)
	ArchiveMealPlanOption(context.Context, *messages.ArchiveMealPlanOptionRequest) (*messages.ArchiveMealPlanOptionResponse, error)
	ArchiveMealPlanOptionVote(context.Context, *messages.ArchiveMealPlanOptionVoteRequest) (*messages.ArchiveMealPlanOptionVoteResponse, error)
	ArchiveRecipe(context.Context, *messages.ArchiveRecipeRequest) (*messages.ArchiveRecipeResponse, error)
	ArchiveRecipePrepTask(context.Context, *messages.ArchiveRecipePrepTaskRequest) (*messages.ArchiveRecipePrepTaskResponse, error)
	ArchiveRecipeRating(context.Context, *messages.ArchiveRecipeRatingRequest) (*messages.ArchiveRecipeRatingResponse, error)
	ArchiveRecipeStep(context.Context, *messages.ArchiveRecipeStepRequest) (*messages.ArchiveRecipeStepResponse, error)
	ArchiveRecipeStepCompletionCondition(context.Context, *messages.ArchiveRecipeStepCompletionConditionRequest) (*messages.ArchiveRecipeStepCompletionConditionResponse, error)
	ArchiveRecipeStepIngredient(context.Context, *messages.ArchiveRecipeStepIngredientRequest) (*messages.ArchiveRecipeStepIngredientResponse, error)
	ArchiveRecipeStepInstrument(context.Context, *messages.ArchiveRecipeStepInstrumentRequest) (*messages.ArchiveRecipeStepInstrumentResponse, error)
	ArchiveRecipeStepProduct(context.Context, *messages.ArchiveRecipeStepProductRequest) (*messages.ArchiveRecipeStepProductResponse, error)
	ArchiveRecipeStepVessel(context.Context, *messages.ArchiveRecipeStepVesselRequest) (*messages.ArchiveRecipeStepVesselResponse, error)
	ArchiveValidIngredient(context.Context, *messages.ArchiveValidIngredientRequest) (*messages.ArchiveValidIngredientResponse, error)
	ArchiveValidIngredientGroup(context.Context, *messages.ArchiveValidIngredientGroupRequest) (*messages.ArchiveValidIngredientGroupResponse, error)
	ArchiveValidIngredientMeasurementUnit(context.Context, *messages.ArchiveValidIngredientMeasurementUnitRequest) (*messages.ArchiveValidIngredientMeasurementUnitResponse, error)
	ArchiveValidIngredientPreparation(context.Context, *messages.ArchiveValidIngredientPreparationRequest) (*messages.ArchiveValidIngredientPreparationResponse, error)
	ArchiveValidIngredientState(context.Context, *messages.ArchiveValidIngredientStateRequest) (*messages.ArchiveValidIngredientStateResponse, error)
	ArchiveValidIngredientStateIngredient(context.Context, *messages.ArchiveValidIngredientStateIngredientRequest) (*messages.ArchiveValidIngredientStateIngredientResponse, error)
	ArchiveValidInstrument(context.Context, *messages.ArchiveValidInstrumentRequest) (*messages.ArchiveValidInstrumentResponse, error)
	ArchiveValidMeasurementUnit(context.Context, *messages.ArchiveValidMeasurementUnitRequest) (*messages.ArchiveValidMeasurementUnitResponse, error)
	ArchiveValidMeasurementUnitConversion(context.Context, *messages.ArchiveValidMeasurementUnitConversionRequest) (*messages.ArchiveValidMeasurementUnitConversionResponse, error)
	ArchiveValidPreparation(context.Context, *messages.ArchiveValidPreparationRequest) (*messages.ArchiveValidPreparationResponse, error)
	ArchiveValidPreparationInstrument(context.Context, *messages.ArchiveValidPreparationInstrumentRequest) (*messages.ArchiveValidPreparationInstrumentResponse, error)
	ArchiveValidPreparationVessel(context.Context, *messages.ArchiveValidPreparationVesselRequest) (*messages.ArchiveValidPreparationVesselResponse, error)
	ArchiveValidVessel(context.Context, *messages.ArchiveValidVesselRequest) (*messages.ArchiveValidVesselResponse, error)
	CloneRecipe(context.Context, *messages.CloneRecipeRequest) (*messages.CloneRecipeResponse, error)
	CreateMeal(context.Context, *messages.CreateMealRequest) (*messages.CreateMealResponse, error)
	CreateMealPlan(context.Context, *messages.CreateMealPlanRequest) (*messages.CreateMealPlanResponse, error)
	CreateMealPlanEvent(context.Context, *messages.CreateMealPlanEventRequest) (*messages.CreateMealPlanEventResponse, error)
	CreateMealPlanGroceryListItem(context.Context, *messages.CreateMealPlanGroceryListItemRequest) (*messages.CreateMealPlanGroceryListItemResponse, error)
	CreateMealPlanOption(context.Context, *messages.CreateMealPlanOptionRequest) (*messages.CreateMealPlanOptionResponse, error)
	CreateMealPlanOptionVote(context.Context, *messages.CreateMealPlanOptionVoteRequest) (*messages.CreateMealPlanOptionVoteResponse, error)
	CreateMealPlanTask(context.Context, *messages.CreateMealPlanTaskRequest) (*messages.CreateMealPlanTaskResponse, error)
	CreateRecipe(context.Context, *messages.CreateRecipeRequest) (*messages.CreateRecipeResponse, error)
	CreateRecipePrepTask(context.Context, *messages.CreateRecipePrepTaskRequest) (*messages.CreateRecipePrepTaskResponse, error)
	CreateRecipeRating(context.Context, *messages.CreateRecipeRatingRequest) (*messages.CreateRecipeRatingResponse, error)
	CreateRecipeStep(context.Context, *messages.CreateRecipeStepRequest) (*messages.CreateRecipeStepResponse, error)
	CreateRecipeStepCompletionCondition(context.Context, *messages.CreateRecipeStepCompletionConditionRequest) (*messages.CreateRecipeStepCompletionConditionResponse, error)
	CreateRecipeStepIngredient(context.Context, *messages.CreateRecipeStepIngredientRequest) (*messages.CreateRecipeStepIngredientResponse, error)
	CreateRecipeStepInstrument(context.Context, *messages.CreateRecipeStepInstrumentRequest) (*messages.CreateRecipeStepInstrumentResponse, error)
	CreateRecipeStepProduct(context.Context, *messages.CreateRecipeStepProductRequest) (*messages.CreateRecipeStepProductResponse, error)
	CreateRecipeStepVessel(context.Context, *messages.CreateRecipeStepVesselRequest) (*messages.CreateRecipeStepVesselResponse, error)
	CreateValidIngredient(context.Context, *messages.CreateValidIngredientRequest) (*messages.CreateValidIngredientResponse, error)
	CreateValidIngredientGroup(context.Context, *messages.CreateValidIngredientGroupRequest) (*messages.CreateValidIngredientGroupResponse, error)
	CreateValidIngredientMeasurementUnit(context.Context, *messages.CreateValidIngredientMeasurementUnitRequest) (*messages.CreateValidIngredientMeasurementUnitResponse, error)
	CreateValidIngredientPreparation(context.Context, *messages.CreateValidIngredientPreparationRequest) (*messages.CreateValidIngredientPreparationResponse, error)
	CreateValidIngredientState(context.Context, *messages.CreateValidIngredientStateRequest) (*messages.CreateValidIngredientStateResponse, error)
	CreateValidIngredientStateIngredient(context.Context, *messages.CreateValidIngredientStateIngredientRequest) (*messages.CreateValidIngredientStateIngredientResponse, error)
	CreateValidInstrument(context.Context, *messages.CreateValidInstrumentRequest) (*messages.CreateValidInstrumentResponse, error)
	CreateValidMeasurementUnit(context.Context, *messages.CreateValidMeasurementUnitRequest) (*messages.CreateValidMeasurementUnitResponse, error)
	CreateValidMeasurementUnitConversion(context.Context, *messages.CreateValidMeasurementUnitConversionRequest) (*messages.CreateValidMeasurementUnitConversionResponse, error)
	CreateValidPreparation(context.Context, *messages.CreateValidPreparationRequest) (*messages.CreateValidPreparationResponse, error)
	CreateValidPreparationInstrument(context.Context, *messages.CreateValidPreparationInstrumentRequest) (*messages.CreateValidPreparationInstrumentResponse, error)
	CreateValidPreparationVessel(context.Context, *messages.CreateValidPreparationVesselRequest) (*messages.CreateValidPreparationVesselResponse, error)
	CreateValidVessel(context.Context, *messages.CreateValidVesselRequest) (*messages.CreateValidVesselResponse, error)
	FinalizeMealPlan(context.Context, *messages.FinalizeMealPlanRequest) (*messages.FinalizeMealPlanResponse, error)
	GetMeal(context.Context, *messages.GetMealRequest) (*messages.GetMealResponse, error)
	GetMealPlan(context.Context, *messages.GetMealPlanRequest) (*messages.GetMealPlanResponse, error)
	GetMealPlanEvent(context.Context, *messages.GetMealPlanEventRequest) (*messages.GetMealPlanEventResponse, error)
	GetMealPlanEvents(context.Context, *messages.GetMealPlanEventsRequest) (*messages.GetMealPlanEventsResponse, error)
	GetMealPlanGroceryListItem(context.Context, *messages.GetMealPlanGroceryListItemRequest) (*messages.GetMealPlanGroceryListItemResponse, error)
	GetMealPlanGroceryListItemsForMealPlan(context.Context, *messages.GetMealPlanGroceryListItemsForMealPlanRequest) (*messages.GetMealPlanGroceryListItemsForMealPlanResponse, error)
	GetMealPlanOption(context.Context, *messages.GetMealPlanOptionRequest) (*messages.GetMealPlanOptionResponse, error)
	GetMealPlanOptionVote(context.Context, *messages.GetMealPlanOptionVoteRequest) (*messages.GetMealPlanOptionVoteResponse, error)
	GetMealPlanOptionVotes(context.Context, *messages.GetMealPlanOptionVotesRequest) (*messages.GetMealPlanOptionVotesResponse, error)
	GetMealPlanOptions(context.Context, *messages.GetMealPlanOptionsRequest) (*messages.GetMealPlanOptionsResponse, error)
	GetMealPlanTask(context.Context, *messages.GetMealPlanTaskRequest) (*messages.GetMealPlanTaskResponse, error)
	GetMealPlanTasks(context.Context, *messages.GetMealPlanTasksRequest) (*messages.GetMealPlanTasksResponse, error)
	GetMealPlansForHousehold(context.Context, *messages.GetMealPlansForHouseholdRequest) (*messages.GetMealPlansForHouseholdResponse, error)
	GetMeals(context.Context, *messages.GetMealsRequest) (*messages.GetMealsResponse, error)
	GetMermaidDiagramForRecipe(context.Context, *messages.GetMermaidDiagramForRecipeRequest) (*messages.GetMermaidDiagramForRecipeResponse, error)
	GetRandomValidIngredient(context.Context, *messages.GetRandomValidIngredientRequest) (*messages.GetRandomValidIngredientResponse, error)
	GetRandomValidInstrument(context.Context, *messages.GetRandomValidInstrumentRequest) (*messages.GetRandomValidInstrumentResponse, error)
	GetRandomValidPreparation(context.Context, *messages.GetRandomValidPreparationRequest) (*messages.GetRandomValidPreparationResponse, error)
	GetRandomValidVessel(context.Context, *messages.GetRandomValidVesselRequest) (*messages.GetRandomValidVesselResponse, error)
	GetRecipe(context.Context, *messages.GetRecipeRequest) (*messages.GetRecipeResponse, error)
	GetRecipeMealPlanTasks(context.Context, *messages.GetRecipeMealPlanTasksRequest) (*messages.GetRecipeMealPlanTasksResponse, error)
	GetRecipePrepTask(context.Context, *messages.GetRecipePrepTaskRequest) (*messages.GetRecipePrepTaskResponse, error)
	GetRecipePrepTasks(context.Context, *messages.GetRecipePrepTasksRequest) (*messages.GetRecipePrepTasksResponse, error)
	GetRecipeRating(context.Context, *messages.GetRecipeRatingRequest) (*messages.GetRecipeRatingResponse, error)
	GetRecipeRatingsForRecipe(context.Context, *messages.GetRecipeRatingsForRecipeRequest) (*messages.GetRecipeRatingsForRecipeResponse, error)
	GetRecipeStep(context.Context, *messages.GetRecipeStepRequest) (*messages.GetRecipeStepResponse, error)
	GetRecipeStepCompletionCondition(context.Context, *messages.GetRecipeStepCompletionConditionRequest) (*messages.GetRecipeStepCompletionConditionResponse, error)
	GetRecipeStepCompletionConditions(context.Context, *messages.GetRecipeStepCompletionConditionsRequest) (*messages.GetRecipeStepCompletionConditionsResponse, error)
	GetRecipeStepIngredient(context.Context, *messages.GetRecipeStepIngredientRequest) (*messages.GetRecipeStepIngredientResponse, error)
	GetRecipeStepIngredients(context.Context, *messages.GetRecipeStepIngredientsRequest) (*messages.GetRecipeStepIngredientsResponse, error)
	GetRecipeStepInstrument(context.Context, *messages.GetRecipeStepInstrumentRequest) (*messages.GetRecipeStepInstrumentResponse, error)
	GetRecipeStepInstruments(context.Context, *messages.GetRecipeStepInstrumentsRequest) (*messages.GetRecipeStepInstrumentsResponse, error)
	GetRecipeStepProduct(context.Context, *messages.GetRecipeStepProductRequest) (*messages.GetRecipeStepProductResponse, error)
	GetRecipeStepProducts(context.Context, *messages.GetRecipeStepProductsRequest) (*messages.GetRecipeStepProductsResponse, error)
	GetRecipeStepVessel(context.Context, *messages.GetRecipeStepVesselRequest) (*messages.GetRecipeStepVesselResponse, error)
	GetRecipeStepVessels(context.Context, *messages.GetRecipeStepVesselsRequest) (*messages.GetRecipeStepVesselsResponse, error)
	GetRecipeSteps(context.Context, *messages.GetRecipeStepsRequest) (*messages.GetRecipeStepsResponse, error)
	GetRecipes(context.Context, *messages.GetRecipesRequest) (*messages.GetRecipesResponse, error)
	GetValidIngredient(context.Context, *messages.GetValidIngredientRequest) (*messages.GetValidIngredientResponse, error)
	GetValidIngredientGroup(context.Context, *messages.GetValidIngredientGroupRequest) (*messages.GetValidIngredientGroupResponse, error)
	GetValidIngredientGroups(context.Context, *messages.GetValidIngredientGroupsRequest) (*messages.GetValidIngredientGroupsResponse, error)
	GetValidIngredientMeasurementUnit(context.Context, *messages.GetValidIngredientMeasurementUnitRequest) (*messages.GetValidIngredientMeasurementUnitResponse, error)
	GetValidIngredientMeasurementUnits(context.Context, *messages.GetValidIngredientMeasurementUnitsRequest) (*messages.GetValidIngredientMeasurementUnitsResponse, error)
	GetValidIngredientMeasurementUnitsByIngredient(context.Context, *messages.GetValidIngredientMeasurementUnitsByIngredientRequest) (*messages.GetValidIngredientMeasurementUnitsByIngredientResponse, error)
	GetValidIngredientMeasurementUnitsByMeasurementUnit(context.Context, *messages.GetValidIngredientMeasurementUnitsByMeasurementUnitRequest) (*messages.GetValidIngredientMeasurementUnitsByMeasurementUnitResponse, error)
	GetValidIngredientPreparation(context.Context, *messages.GetValidIngredientPreparationRequest) (*messages.GetValidIngredientPreparationResponse, error)
	GetValidIngredientPreparations(context.Context, *messages.GetValidIngredientPreparationsRequest) (*messages.GetValidIngredientPreparationsResponse, error)
	GetValidIngredientPreparationsByIngredient(context.Context, *messages.GetValidIngredientPreparationsByIngredientRequest) (*messages.GetValidIngredientPreparationsByIngredientResponse, error)
	GetValidIngredientPreparationsByPreparation(context.Context, *messages.GetValidIngredientPreparationsByPreparationRequest) (*messages.GetValidIngredientPreparationsByPreparationResponse, error)
	GetValidIngredientState(context.Context, *messages.GetValidIngredientStateRequest) (*messages.GetValidIngredientStateResponse, error)
	GetValidIngredientStateIngredient(context.Context, *messages.GetValidIngredientStateIngredientRequest) (*messages.GetValidIngredientStateIngredientResponse, error)
	GetValidIngredientStateIngredients(context.Context, *messages.GetValidIngredientStateIngredientsRequest) (*messages.GetValidIngredientStateIngredientsResponse, error)
	GetValidIngredientStateIngredientsByIngredient(context.Context, *messages.GetValidIngredientStateIngredientsByIngredientRequest) (*messages.GetValidIngredientStateIngredientsByIngredientResponse, error)
	GetValidIngredientStateIngredientsByIngredientState(context.Context, *messages.GetValidIngredientStateIngredientsByIngredientStateRequest) (*messages.GetValidIngredientStateIngredientsByIngredientStateResponse, error)
	GetValidIngredientStates(context.Context, *messages.GetValidIngredientStatesRequest) (*messages.GetValidIngredientStatesResponse, error)
	GetValidIngredients(context.Context, *messages.GetValidIngredientsRequest) (*messages.GetValidIngredientsResponse, error)
	GetValidInstrument(context.Context, *messages.GetValidInstrumentRequest) (*messages.GetValidInstrumentResponse, error)
	GetValidInstruments(context.Context, *messages.GetValidInstrumentsRequest) (*messages.GetValidInstrumentsResponse, error)
	GetValidMeasurementUnit(context.Context, *messages.GetValidMeasurementUnitRequest) (*messages.GetValidMeasurementUnitResponse, error)
	GetValidMeasurementUnitConversion(context.Context, *messages.GetValidMeasurementUnitConversionRequest) (*messages.GetValidMeasurementUnitConversionResponse, error)
	GetValidMeasurementUnitConversionsFromUnit(context.Context, *messages.GetValidMeasurementUnitConversionsFromUnitRequest) (*messages.GetValidMeasurementUnitConversionsFromUnitResponse, error)
	GetValidMeasurementUnitConversionsToUnit(context.Context, *messages.GetValidMeasurementUnitConversionsToUnitRequest) (*messages.GetValidMeasurementUnitConversionsToUnitResponse, error)
	GetValidMeasurementUnits(context.Context, *messages.GetValidMeasurementUnitsRequest) (*messages.GetValidMeasurementUnitsResponse, error)
	GetValidPreparation(context.Context, *messages.GetValidPreparationRequest) (*messages.GetValidPreparationResponse, error)
	GetValidPreparationInstrument(context.Context, *messages.GetValidPreparationInstrumentRequest) (*messages.GetValidPreparationInstrumentResponse, error)
	GetValidPreparationInstruments(context.Context, *messages.GetValidPreparationInstrumentsRequest) (*messages.GetValidPreparationInstrumentsResponse, error)
	GetValidPreparationInstrumentsByInstrument(context.Context, *messages.GetValidPreparationInstrumentsByInstrumentRequest) (*messages.GetValidPreparationInstrumentsByInstrumentResponse, error)
	GetValidPreparationInstrumentsByPreparation(context.Context, *messages.GetValidPreparationInstrumentsByPreparationRequest) (*messages.GetValidPreparationInstrumentsByPreparationResponse, error)
	GetValidPreparationVessel(context.Context, *messages.GetValidPreparationVesselRequest) (*messages.GetValidPreparationVesselResponse, error)
	GetValidPreparationVessels(context.Context, *messages.GetValidPreparationVesselsRequest) (*messages.GetValidPreparationVesselsResponse, error)
	GetValidPreparationVesselsByPreparation(context.Context, *messages.GetValidPreparationVesselsByPreparationRequest) (*messages.GetValidPreparationVesselsByPreparationResponse, error)
	GetValidPreparationVesselsByVessel(context.Context, *messages.GetValidPreparationVesselsByVesselRequest) (*messages.GetValidPreparationVesselsByVesselResponse, error)
	GetValidPreparations(context.Context, *messages.GetValidPreparationsRequest) (*messages.GetValidPreparationsResponse, error)
	GetValidVessel(context.Context, *messages.GetValidVesselRequest) (*messages.GetValidVesselResponse, error)
	GetValidVessels(context.Context, *messages.GetValidVesselsRequest) (*messages.GetValidVesselsResponse, error)
	RunFinalizeMealPlanWorker(context.Context, *messages.RunFinalizeMealPlanWorkerRequest) (*messages.RunFinalizeMealPlanWorkerResponse, error)
	RunMealPlanGroceryListInitializerWorker(context.Context, *messages.RunMealPlanGroceryListInitializerWorkerRequest) (*messages.RunMealPlanGroceryListInitializerWorkerResponse, error)
	RunMealPlanTaskCreatorWorker(context.Context, *messages.RunMealPlanTaskCreatorWorkerRequest) (*messages.RunMealPlanTaskCreatorWorkerResponse, error)
	SearchForMeals(context.Context, *messages.SearchForMealsRequest) (*messages.SearchForMealsResponse, error)
	SearchForRecipes(context.Context, *messages.SearchForRecipesRequest) (*messages.SearchForRecipesResponse, error)
	SearchForValidIngredientGroups(context.Context, *messages.SearchForValidIngredientGroupsRequest) (*messages.SearchForValidIngredientGroupsResponse, error)
	SearchForValidIngredientStates(context.Context, *messages.SearchForValidIngredientStatesRequest) (*messages.SearchForValidIngredientStatesResponse, error)
	SearchForValidIngredients(context.Context, *messages.SearchForValidIngredientsRequest) (*messages.SearchForValidIngredientsResponse, error)
	SearchForValidInstruments(context.Context, *messages.SearchForValidInstrumentsRequest) (*messages.SearchForValidInstrumentsResponse, error)
	SearchForValidMeasurementUnits(context.Context, *messages.SearchForValidMeasurementUnitsRequest) (*messages.SearchForValidMeasurementUnitsResponse, error)
	SearchForValidPreparations(context.Context, *messages.SearchForValidPreparationsRequest) (*messages.SearchForValidPreparationsResponse, error)
	SearchForValidVessels(context.Context, *messages.SearchForValidVesselsRequest) (*messages.SearchForValidVesselsResponse, error)
	SearchValidIngredientsByPreparation(context.Context, *messages.SearchValidIngredientsByPreparationRequest) (*messages.SearchValidIngredientsByPreparationResponse, error)
	SearchValidMeasurementUnitsByIngredient(context.Context, *messages.SearchValidMeasurementUnitsByIngredientRequest) (*messages.SearchValidMeasurementUnitsByIngredientResponse, error)
	UpdateMealPlan(context.Context, *messages.UpdateMealPlanRequest) (*messages.UpdateMealPlanResponse, error)
	UpdateMealPlanEvent(context.Context, *messages.UpdateMealPlanEventRequest) (*messages.UpdateMealPlanEventResponse, error)
	UpdateMealPlanGroceryListItem(context.Context, *messages.UpdateMealPlanGroceryListItemRequest) (*messages.UpdateMealPlanGroceryListItemResponse, error)
	UpdateMealPlanOption(context.Context, *messages.UpdateMealPlanOptionRequest) (*messages.UpdateMealPlanOptionResponse, error)
	UpdateMealPlanOptionVote(context.Context, *messages.UpdateMealPlanOptionVoteRequest) (*messages.UpdateMealPlanOptionVoteResponse, error)
	UpdateMealPlanTaskStatus(context.Context, *messages.UpdateMealPlanTaskStatusRequest) (*messages.UpdateMealPlanTaskStatusResponse, error)
	UpdateRecipe(context.Context, *messages.UpdateRecipeRequest) (*messages.UpdateRecipeResponse, error)
	UpdateRecipePrepTask(context.Context, *messages.UpdateRecipePrepTaskRequest) (*messages.UpdateRecipePrepTaskResponse, error)
	UpdateRecipeRating(context.Context, *messages.UpdateRecipeRatingRequest) (*messages.UpdateRecipeRatingResponse, error)
	UpdateRecipeStep(context.Context, *messages.UpdateRecipeStepRequest) (*messages.UpdateRecipeStepResponse, error)
	UpdateRecipeStepCompletionCondition(context.Context, *messages.UpdateRecipeStepCompletionConditionRequest) (*messages.UpdateRecipeStepCompletionConditionResponse, error)
	UpdateRecipeStepIngredient(context.Context, *messages.UpdateRecipeStepIngredientRequest) (*messages.UpdateRecipeStepIngredientResponse, error)
	UpdateRecipeStepInstrument(context.Context, *messages.UpdateRecipeStepInstrumentRequest) (*messages.UpdateRecipeStepInstrumentResponse, error)
	UpdateRecipeStepProduct(context.Context, *messages.UpdateRecipeStepProductRequest) (*messages.UpdateRecipeStepProductResponse, error)
	UpdateRecipeStepVessel(context.Context, *messages.UpdateRecipeStepVesselRequest) (*messages.UpdateRecipeStepVesselResponse, error)
	UpdateValidIngredient(context.Context, *messages.UpdateValidIngredientRequest) (*messages.UpdateValidIngredientResponse, error)
	UpdateValidIngredientGroup(context.Context, *messages.UpdateValidIngredientGroupRequest) (*messages.UpdateValidIngredientGroupResponse, error)
	UpdateValidIngredientMeasurementUnit(context.Context, *messages.UpdateValidIngredientMeasurementUnitRequest) (*messages.UpdateValidIngredientMeasurementUnitResponse, error)
	UpdateValidIngredientPreparation(context.Context, *messages.UpdateValidIngredientPreparationRequest) (*messages.UpdateValidIngredientPreparationResponse, error)
	UpdateValidIngredientState(context.Context, *messages.UpdateValidIngredientStateRequest) (*messages.UpdateValidIngredientStateResponse, error)
	UpdateValidIngredientStateIngredient(context.Context, *messages.UpdateValidIngredientStateIngredientRequest) (*messages.UpdateValidIngredientStateIngredientResponse, error)
	UpdateValidInstrument(context.Context, *messages.UpdateValidInstrumentRequest) (*messages.UpdateValidInstrumentResponse, error)
	UpdateValidMeasurementUnit(context.Context, *messages.UpdateValidMeasurementUnitRequest) (*messages.UpdateValidMeasurementUnitResponse, error)
	UpdateValidMeasurementUnitConversion(context.Context, *messages.UpdateValidMeasurementUnitConversionRequest) (*messages.UpdateValidMeasurementUnitConversionResponse, error)
	UpdateValidPreparation(context.Context, *messages.UpdateValidPreparationRequest) (*messages.UpdateValidPreparationResponse, error)
	UpdateValidPreparationInstrument(context.Context, *messages.UpdateValidPreparationInstrumentRequest) (*messages.UpdateValidPreparationInstrumentResponse, error)
	UpdateValidPreparationVessel(context.Context, *messages.UpdateValidPreparationVesselRequest) (*messages.UpdateValidPreparationVesselResponse, error)
	UpdateValidVessel(context.Context, *messages.UpdateValidVesselRequest) (*messages.UpdateValidVesselResponse, error)
	ArchiveHouseholdInstrumentOwnership(context.Context, *messages.ArchiveHouseholdInstrumentOwnershipRequest) (*messages.ArchiveHouseholdInstrumentOwnershipResponse, error)
	ArchiveUserIngredientPreference(context.Context, *messages.ArchiveUserIngredientPreferenceRequest) (*messages.ArchiveUserIngredientPreferenceResponse, error)
	CreateHouseholdInstrumentOwnership(context.Context, *messages.CreateHouseholdInstrumentOwnershipRequest) (*messages.CreateHouseholdInstrumentOwnershipResponse, error)
	CreateUserIngredientPreference(context.Context, *messages.CreateUserIngredientPreferenceRequest) (*messages.CreateUserIngredientPreferenceResponse, error)
	GetHouseholdInstrumentOwnership(context.Context, *messages.GetHouseholdInstrumentOwnershipRequest) (*messages.GetHouseholdInstrumentOwnershipResponse, error)
	GetHouseholdInstrumentOwnerships(context.Context, *messages.GetHouseholdInstrumentOwnershipsRequest) (*messages.GetHouseholdInstrumentOwnershipsResponse, error)
	GetUserIngredientPreferences(context.Context, *messages.GetUserIngredientPreferencesRequest) (*messages.GetUserIngredientPreferencesResponse, error)
	UpdateHouseholdInstrumentOwnership(context.Context, *messages.UpdateHouseholdInstrumentOwnershipRequest) (*messages.UpdateHouseholdInstrumentOwnershipResponse, error)
	UpdateUserIngredientPreference(context.Context, *messages.UpdateUserIngredientPreferenceRequest) (*messages.UpdateUserIngredientPreferenceResponse, error)
	mustEmbedUnimplementedDinnerDoneBetterServer()
}

// UnimplementedDinnerDoneBetterServer must be embedded to have
// forward compatible implementations.
//
// NOTE: this should be embedded by value instead of pointer to avoid a nil
// pointer dereference when methods are called.
type UnimplementedDinnerDoneBetterServer struct{}

func (UnimplementedDinnerDoneBetterServer) Ping(context.Context, *messages.PingRequest) (*messages.PingResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Ping not implemented")
}
func (UnimplementedDinnerDoneBetterServer) ExchangeToken(context.Context, *messages.ExchangeTokenRequest) (*messages.ExchangeTokenResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ExchangeToken not implemented")
}
func (UnimplementedDinnerDoneBetterServer) AcceptHouseholdInvitation(context.Context, *messages.AcceptHouseholdInvitationRequest) (*messages.AcceptHouseholdInvitationResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AcceptHouseholdInvitation not implemented")
}
func (UnimplementedDinnerDoneBetterServer) AdminLoginForToken(context.Context, *messages.AdminLoginForTokenRequest) (*messages.AdminLoginForTokenResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AdminLoginForToken not implemented")
}
func (UnimplementedDinnerDoneBetterServer) AdminUpdateUserStatus(context.Context, *messages.AdminUpdateUserStatusRequest) (*messages.AdminUpdateUserStatusResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AdminUpdateUserStatus not implemented")
}
func (UnimplementedDinnerDoneBetterServer) AggregateUserDataReport(context.Context, *messages.AggregateUserDataReportRequest) (*messages.AggregateUserDataReportResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AggregateUserDataReport not implemented")
}
func (UnimplementedDinnerDoneBetterServer) ArchiveHousehold(context.Context, *messages.ArchiveHouseholdRequest) (*messages.ArchiveHouseholdResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ArchiveHousehold not implemented")
}
func (UnimplementedDinnerDoneBetterServer) ArchiveOAuth2Client(context.Context, *messages.ArchiveOAuth2ClientRequest) (*messages.ArchiveOAuth2ClientResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ArchiveOAuth2Client not implemented")
}
func (UnimplementedDinnerDoneBetterServer) ArchiveServiceSetting(context.Context, *messages.ArchiveServiceSettingRequest) (*messages.ArchiveServiceSettingResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ArchiveServiceSetting not implemented")
}
func (UnimplementedDinnerDoneBetterServer) ArchiveServiceSettingConfiguration(context.Context, *messages.ArchiveServiceSettingConfigurationRequest) (*messages.ArchiveServiceSettingConfigurationResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ArchiveServiceSettingConfiguration not implemented")
}
func (UnimplementedDinnerDoneBetterServer) ArchiveUser(context.Context, *messages.ArchiveUserRequest) (*messages.ArchiveUserResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ArchiveUser not implemented")
}
func (UnimplementedDinnerDoneBetterServer) ArchiveUserMembership(context.Context, *messages.ArchiveUserMembershipRequest) (*messages.ArchiveUserMembershipResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ArchiveUserMembership not implemented")
}
func (UnimplementedDinnerDoneBetterServer) ArchiveWebhook(context.Context, *messages.ArchiveWebhookRequest) (*messages.ArchiveWebhookResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ArchiveWebhook not implemented")
}
func (UnimplementedDinnerDoneBetterServer) ArchiveWebhookTriggerEvent(context.Context, *messages.ArchiveWebhookTriggerEventRequest) (*messages.ArchiveWebhookTriggerEventResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ArchiveWebhookTriggerEvent not implemented")
}
func (UnimplementedDinnerDoneBetterServer) CancelHouseholdInvitation(context.Context, *messages.CancelHouseholdInvitationRequest) (*messages.CancelHouseholdInvitationResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CancelHouseholdInvitation not implemented")
}
func (UnimplementedDinnerDoneBetterServer) CheckPermissions(context.Context, *messages.CheckPermissionsRequest) (*messages.CheckPermissionsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CheckPermissions not implemented")
}
func (UnimplementedDinnerDoneBetterServer) CreateHousehold(context.Context, *messages.CreateHouseholdRequest) (*messages.CreateHouseholdResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateHousehold not implemented")
}
func (UnimplementedDinnerDoneBetterServer) CreateHouseholdInvitation(context.Context, *messages.CreateHouseholdInvitationRequest) (*messages.CreateHouseholdInvitationResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateHouseholdInvitation not implemented")
}
func (UnimplementedDinnerDoneBetterServer) CreateOAuth2Client(context.Context, *messages.CreateOAuth2ClientRequest) (*messages.CreateOAuth2ClientResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateOAuth2Client not implemented")
}
func (UnimplementedDinnerDoneBetterServer) CreateServiceSetting(context.Context, *messages.CreateServiceSettingRequest) (*messages.CreateServiceSettingResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateServiceSetting not implemented")
}
func (UnimplementedDinnerDoneBetterServer) CreateServiceSettingConfiguration(context.Context, *messages.CreateServiceSettingConfigurationRequest) (*messages.CreateServiceSettingConfigurationResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateServiceSettingConfiguration not implemented")
}
func (UnimplementedDinnerDoneBetterServer) CreateUser(context.Context, *messages.CreateUserRequest) (*messages.CreateUserResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateUser not implemented")
}
func (UnimplementedDinnerDoneBetterServer) CreateUserNotification(context.Context, *messages.CreateUserNotificationRequest) (*messages.CreateUserNotificationResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateUserNotification not implemented")
}
func (UnimplementedDinnerDoneBetterServer) CreateWebhook(context.Context, *messages.CreateWebhookRequest) (*messages.CreateWebhookResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateWebhook not implemented")
}
func (UnimplementedDinnerDoneBetterServer) CreateWebhookTriggerEvent(context.Context, *messages.CreateWebhookTriggerEventRequest) (*messages.CreateWebhookTriggerEventResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateWebhookTriggerEvent not implemented")
}
func (UnimplementedDinnerDoneBetterServer) DestroyAllUserData(context.Context, *messages.DestroyAllUserDataRequest) (*messages.DestroyAllUserDataResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DestroyAllUserData not implemented")
}
func (UnimplementedDinnerDoneBetterServer) FetchUserDataReport(context.Context, *messages.FetchUserDataReportRequest) (*messages.FetchUserDataReportResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FetchUserDataReport not implemented")
}
func (UnimplementedDinnerDoneBetterServer) GetActiveHousehold(context.Context, *messages.GetActiveHouseholdRequest) (*messages.GetActiveHouseholdResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetActiveHousehold not implemented")
}
func (UnimplementedDinnerDoneBetterServer) GetAuditLogEntriesForHousehold(context.Context, *messages.GetAuditLogEntriesForHouseholdRequest) (*messages.GetAuditLogEntriesForHouseholdResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAuditLogEntriesForHousehold not implemented")
}
func (UnimplementedDinnerDoneBetterServer) GetAuditLogEntriesForUser(context.Context, *messages.GetAuditLogEntriesForUserRequest) (*messages.GetAuditLogEntriesForUserResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAuditLogEntriesForUser not implemented")
}
func (UnimplementedDinnerDoneBetterServer) GetAuditLogEntryByID(context.Context, *messages.GetAuditLogEntryByIDRequest) (*messages.GetAuditLogEntryByIDResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAuditLogEntryByID not implemented")
}
func (UnimplementedDinnerDoneBetterServer) GetAuthStatus(context.Context, *messages.GetAuthStatusRequest) (*messages.GetAuthStatusResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAuthStatus not implemented")
}
func (UnimplementedDinnerDoneBetterServer) GetHousehold(context.Context, *messages.GetHouseholdRequest) (*messages.GetHouseholdResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetHousehold not implemented")
}
func (UnimplementedDinnerDoneBetterServer) GetHouseholdInvitation(context.Context, *messages.GetHouseholdInvitationRequest) (*messages.GetHouseholdInvitationResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetHouseholdInvitation not implemented")
}
func (UnimplementedDinnerDoneBetterServer) GetHouseholdInvitationByID(context.Context, *messages.GetHouseholdInvitationByIDRequest) (*messages.GetHouseholdInvitationByIDResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetHouseholdInvitationByID not implemented")
}
func (UnimplementedDinnerDoneBetterServer) GetHouseholds(context.Context, *messages.GetHouseholdsRequest) (*messages.GetHouseholdsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetHouseholds not implemented")
}
func (UnimplementedDinnerDoneBetterServer) GetOAuth2Client(context.Context, *messages.GetOAuth2ClientRequest) (*messages.GetOAuth2ClientResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetOAuth2Client not implemented")
}
func (UnimplementedDinnerDoneBetterServer) GetOAuth2Clients(context.Context, *messages.GetOAuth2ClientsRequest) (*messages.GetOAuth2ClientsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetOAuth2Clients not implemented")
}
func (UnimplementedDinnerDoneBetterServer) GetReceivedHouseholdInvitations(context.Context, *messages.GetReceivedHouseholdInvitationsRequest) (*messages.GetReceivedHouseholdInvitationsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetReceivedHouseholdInvitations not implemented")
}
func (UnimplementedDinnerDoneBetterServer) GetSelf(context.Context, *messages.GetSelfRequest) (*messages.GetSelfResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetSelf not implemented")
}
func (UnimplementedDinnerDoneBetterServer) GetSentHouseholdInvitations(context.Context, *messages.GetSentHouseholdInvitationsRequest) (*messages.GetSentHouseholdInvitationsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetSentHouseholdInvitations not implemented")
}
func (UnimplementedDinnerDoneBetterServer) GetServiceSetting(context.Context, *messages.GetServiceSettingRequest) (*messages.GetServiceSettingResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetServiceSetting not implemented")
}
func (UnimplementedDinnerDoneBetterServer) GetServiceSettingConfigurationByName(context.Context, *messages.GetServiceSettingConfigurationByNameRequest) (*messages.GetServiceSettingConfigurationByNameResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetServiceSettingConfigurationByName not implemented")
}
func (UnimplementedDinnerDoneBetterServer) GetServiceSettingConfigurationsForHousehold(context.Context, *messages.GetServiceSettingConfigurationsForHouseholdRequest) (*messages.GetServiceSettingConfigurationsForHouseholdResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetServiceSettingConfigurationsForHousehold not implemented")
}
func (UnimplementedDinnerDoneBetterServer) GetServiceSettingConfigurationsForUser(context.Context, *messages.GetServiceSettingConfigurationsForUserRequest) (*messages.GetServiceSettingConfigurationsForUserResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetServiceSettingConfigurationsForUser not implemented")
}
func (UnimplementedDinnerDoneBetterServer) GetServiceSettings(context.Context, *messages.GetServiceSettingsRequest) (*messages.GetServiceSettingsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetServiceSettings not implemented")
}
func (UnimplementedDinnerDoneBetterServer) GetUser(context.Context, *messages.GetUserRequest) (*messages.GetUserResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUser not implemented")
}
func (UnimplementedDinnerDoneBetterServer) GetUserNotification(context.Context, *messages.GetUserNotificationRequest) (*messages.GetUserNotificationResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUserNotification not implemented")
}
func (UnimplementedDinnerDoneBetterServer) GetUserNotifications(context.Context, *messages.GetUserNotificationsRequest) (*messages.GetUserNotificationsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUserNotifications not implemented")
}
func (UnimplementedDinnerDoneBetterServer) GetUsers(context.Context, *messages.GetUsersRequest) (*messages.GetUsersResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUsers not implemented")
}
func (UnimplementedDinnerDoneBetterServer) GetWebhook(context.Context, *messages.GetWebhookRequest) (*messages.GetWebhookResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetWebhook not implemented")
}
func (UnimplementedDinnerDoneBetterServer) GetWebhooks(context.Context, *messages.GetWebhooksRequest) (*messages.GetWebhooksResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetWebhooks not implemented")
}
func (UnimplementedDinnerDoneBetterServer) LoginForToken(context.Context, *messages.LoginForTokenRequest) (*messages.LoginForTokenResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LoginForToken not implemented")
}
func (UnimplementedDinnerDoneBetterServer) PublishArbitraryQueueMessage(context.Context, *messages.PublishArbitraryQueueMessageRequest) (*messages.PublishArbitraryQueueMessageResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PublishArbitraryQueueMessage not implemented")
}
func (UnimplementedDinnerDoneBetterServer) RedeemPasswordResetToken(context.Context, *messages.RedeemPasswordResetTokenRequest) (*messages.RedeemPasswordResetTokenResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RedeemPasswordResetToken not implemented")
}
func (UnimplementedDinnerDoneBetterServer) RefreshTOTPSecret(context.Context, *messages.RefreshTOTPSecretRequest) (*messages.RefreshTOTPSecretResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RefreshTOTPSecret not implemented")
}
func (UnimplementedDinnerDoneBetterServer) RejectHouseholdInvitation(context.Context, *messages.RejectHouseholdInvitationRequest) (*messages.RejectHouseholdInvitationResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RejectHouseholdInvitation not implemented")
}
func (UnimplementedDinnerDoneBetterServer) RequestEmailVerificationEmail(context.Context, *messages.RequestEmailVerificationEmailRequest) (*messages.RequestEmailVerificationEmailResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RequestEmailVerificationEmail not implemented")
}
func (UnimplementedDinnerDoneBetterServer) RequestPasswordResetToken(context.Context, *messages.RequestPasswordResetTokenRequest) (*messages.RequestPasswordResetTokenResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RequestPasswordResetToken not implemented")
}
func (UnimplementedDinnerDoneBetterServer) RequestUsernameReminder(context.Context, *messages.RequestUsernameReminderRequest) (*messages.RequestUsernameReminderResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RequestUsernameReminder not implemented")
}
func (UnimplementedDinnerDoneBetterServer) SearchForServiceSettings(context.Context, *messages.SearchForServiceSettingsRequest) (*messages.SearchForServiceSettingsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SearchForServiceSettings not implemented")
}
func (UnimplementedDinnerDoneBetterServer) SearchForUsers(context.Context, *messages.SearchForUsersRequest) (*messages.SearchForUsersResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SearchForUsers not implemented")
}
func (UnimplementedDinnerDoneBetterServer) SetDefaultHousehold(context.Context, *messages.SetDefaultHouseholdRequest) (*messages.SetDefaultHouseholdResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetDefaultHousehold not implemented")
}
func (UnimplementedDinnerDoneBetterServer) TransferHouseholdOwnership(context.Context, *messages.TransferHouseholdOwnershipRequest) (*messages.TransferHouseholdOwnershipResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TransferHouseholdOwnership not implemented")
}
func (UnimplementedDinnerDoneBetterServer) UpdateHousehold(context.Context, *messages.UpdateHouseholdRequest) (*messages.UpdateHouseholdResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateHousehold not implemented")
}
func (UnimplementedDinnerDoneBetterServer) UpdateHouseholdMemberPermissions(context.Context, *messages.UpdateHouseholdMemberPermissionsRequest) (*messages.UpdateHouseholdMemberPermissionsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateHouseholdMemberPermissions not implemented")
}
func (UnimplementedDinnerDoneBetterServer) UpdatePassword(context.Context, *messages.UpdatePasswordRequest) (*messages.UpdatePasswordResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdatePassword not implemented")
}
func (UnimplementedDinnerDoneBetterServer) UpdateServiceSettingConfiguration(context.Context, *messages.UpdateServiceSettingConfigurationRequest) (*messages.UpdateServiceSettingConfigurationResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateServiceSettingConfiguration not implemented")
}
func (UnimplementedDinnerDoneBetterServer) UpdateUserDetails(context.Context, *messages.UpdateUserDetailsRequest) (*messages.UpdateUserDetailsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateUserDetails not implemented")
}
func (UnimplementedDinnerDoneBetterServer) UpdateUserEmailAddress(context.Context, *messages.UpdateUserEmailAddressRequest) (*messages.UpdateUserEmailAddressResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateUserEmailAddress not implemented")
}
func (UnimplementedDinnerDoneBetterServer) UpdateUserNotification(context.Context, *messages.UpdateUserNotificationRequest) (*messages.UpdateUserNotificationResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateUserNotification not implemented")
}
func (UnimplementedDinnerDoneBetterServer) UpdateUserUsername(context.Context, *messages.UpdateUserUsernameRequest) (*messages.UpdateUserUsernameResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateUserUsername not implemented")
}
func (UnimplementedDinnerDoneBetterServer) UploadUserAvatar(context.Context, *messages.UploadUserAvatarRequest) (*messages.UploadUserAvatarResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UploadUserAvatar not implemented")
}
func (UnimplementedDinnerDoneBetterServer) VerifyEmailAddress(context.Context, *messages.VerifyEmailAddressRequest) (*messages.VerifyEmailAddressResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method VerifyEmailAddress not implemented")
}
func (UnimplementedDinnerDoneBetterServer) VerifyTOTPSecret(context.Context, *messages.VerifyTOTPSecretRequest) (*messages.VerifyTOTPSecretResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method VerifyTOTPSecret not implemented")
}
func (UnimplementedDinnerDoneBetterServer) ArchiveMeal(context.Context, *messages.ArchiveMealRequest) (*messages.ArchiveMealResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ArchiveMeal not implemented")
}
func (UnimplementedDinnerDoneBetterServer) ArchiveMealPlan(context.Context, *messages.ArchiveMealPlanRequest) (*messages.ArchiveMealPlanResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ArchiveMealPlan not implemented")
}
func (UnimplementedDinnerDoneBetterServer) ArchiveMealPlanEvent(context.Context, *messages.ArchiveMealPlanEventRequest) (*messages.ArchiveMealPlanEventResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ArchiveMealPlanEvent not implemented")
}
func (UnimplementedDinnerDoneBetterServer) ArchiveMealPlanGroceryListItem(context.Context, *messages.ArchiveMealPlanGroceryListItemRequest) (*messages.ArchiveMealPlanGroceryListItemResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ArchiveMealPlanGroceryListItem not implemented")
}
func (UnimplementedDinnerDoneBetterServer) ArchiveMealPlanOption(context.Context, *messages.ArchiveMealPlanOptionRequest) (*messages.ArchiveMealPlanOptionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ArchiveMealPlanOption not implemented")
}
func (UnimplementedDinnerDoneBetterServer) ArchiveMealPlanOptionVote(context.Context, *messages.ArchiveMealPlanOptionVoteRequest) (*messages.ArchiveMealPlanOptionVoteResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ArchiveMealPlanOptionVote not implemented")
}
func (UnimplementedDinnerDoneBetterServer) ArchiveRecipe(context.Context, *messages.ArchiveRecipeRequest) (*messages.ArchiveRecipeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ArchiveRecipe not implemented")
}
func (UnimplementedDinnerDoneBetterServer) ArchiveRecipePrepTask(context.Context, *messages.ArchiveRecipePrepTaskRequest) (*messages.ArchiveRecipePrepTaskResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ArchiveRecipePrepTask not implemented")
}
func (UnimplementedDinnerDoneBetterServer) ArchiveRecipeRating(context.Context, *messages.ArchiveRecipeRatingRequest) (*messages.ArchiveRecipeRatingResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ArchiveRecipeRating not implemented")
}
func (UnimplementedDinnerDoneBetterServer) ArchiveRecipeStep(context.Context, *messages.ArchiveRecipeStepRequest) (*messages.ArchiveRecipeStepResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ArchiveRecipeStep not implemented")
}
func (UnimplementedDinnerDoneBetterServer) ArchiveRecipeStepCompletionCondition(context.Context, *messages.ArchiveRecipeStepCompletionConditionRequest) (*messages.ArchiveRecipeStepCompletionConditionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ArchiveRecipeStepCompletionCondition not implemented")
}
func (UnimplementedDinnerDoneBetterServer) ArchiveRecipeStepIngredient(context.Context, *messages.ArchiveRecipeStepIngredientRequest) (*messages.ArchiveRecipeStepIngredientResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ArchiveRecipeStepIngredient not implemented")
}
func (UnimplementedDinnerDoneBetterServer) ArchiveRecipeStepInstrument(context.Context, *messages.ArchiveRecipeStepInstrumentRequest) (*messages.ArchiveRecipeStepInstrumentResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ArchiveRecipeStepInstrument not implemented")
}
func (UnimplementedDinnerDoneBetterServer) ArchiveRecipeStepProduct(context.Context, *messages.ArchiveRecipeStepProductRequest) (*messages.ArchiveRecipeStepProductResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ArchiveRecipeStepProduct not implemented")
}
func (UnimplementedDinnerDoneBetterServer) ArchiveRecipeStepVessel(context.Context, *messages.ArchiveRecipeStepVesselRequest) (*messages.ArchiveRecipeStepVesselResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ArchiveRecipeStepVessel not implemented")
}
func (UnimplementedDinnerDoneBetterServer) ArchiveValidIngredient(context.Context, *messages.ArchiveValidIngredientRequest) (*messages.ArchiveValidIngredientResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ArchiveValidIngredient not implemented")
}
func (UnimplementedDinnerDoneBetterServer) ArchiveValidIngredientGroup(context.Context, *messages.ArchiveValidIngredientGroupRequest) (*messages.ArchiveValidIngredientGroupResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ArchiveValidIngredientGroup not implemented")
}
func (UnimplementedDinnerDoneBetterServer) ArchiveValidIngredientMeasurementUnit(context.Context, *messages.ArchiveValidIngredientMeasurementUnitRequest) (*messages.ArchiveValidIngredientMeasurementUnitResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ArchiveValidIngredientMeasurementUnit not implemented")
}
func (UnimplementedDinnerDoneBetterServer) ArchiveValidIngredientPreparation(context.Context, *messages.ArchiveValidIngredientPreparationRequest) (*messages.ArchiveValidIngredientPreparationResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ArchiveValidIngredientPreparation not implemented")
}
func (UnimplementedDinnerDoneBetterServer) ArchiveValidIngredientState(context.Context, *messages.ArchiveValidIngredientStateRequest) (*messages.ArchiveValidIngredientStateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ArchiveValidIngredientState not implemented")
}
func (UnimplementedDinnerDoneBetterServer) ArchiveValidIngredientStateIngredient(context.Context, *messages.ArchiveValidIngredientStateIngredientRequest) (*messages.ArchiveValidIngredientStateIngredientResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ArchiveValidIngredientStateIngredient not implemented")
}
func (UnimplementedDinnerDoneBetterServer) ArchiveValidInstrument(context.Context, *messages.ArchiveValidInstrumentRequest) (*messages.ArchiveValidInstrumentResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ArchiveValidInstrument not implemented")
}
func (UnimplementedDinnerDoneBetterServer) ArchiveValidMeasurementUnit(context.Context, *messages.ArchiveValidMeasurementUnitRequest) (*messages.ArchiveValidMeasurementUnitResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ArchiveValidMeasurementUnit not implemented")
}
func (UnimplementedDinnerDoneBetterServer) ArchiveValidMeasurementUnitConversion(context.Context, *messages.ArchiveValidMeasurementUnitConversionRequest) (*messages.ArchiveValidMeasurementUnitConversionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ArchiveValidMeasurementUnitConversion not implemented")
}
func (UnimplementedDinnerDoneBetterServer) ArchiveValidPreparation(context.Context, *messages.ArchiveValidPreparationRequest) (*messages.ArchiveValidPreparationResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ArchiveValidPreparation not implemented")
}
func (UnimplementedDinnerDoneBetterServer) ArchiveValidPreparationInstrument(context.Context, *messages.ArchiveValidPreparationInstrumentRequest) (*messages.ArchiveValidPreparationInstrumentResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ArchiveValidPreparationInstrument not implemented")
}
func (UnimplementedDinnerDoneBetterServer) ArchiveValidPreparationVessel(context.Context, *messages.ArchiveValidPreparationVesselRequest) (*messages.ArchiveValidPreparationVesselResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ArchiveValidPreparationVessel not implemented")
}
func (UnimplementedDinnerDoneBetterServer) ArchiveValidVessel(context.Context, *messages.ArchiveValidVesselRequest) (*messages.ArchiveValidVesselResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ArchiveValidVessel not implemented")
}
func (UnimplementedDinnerDoneBetterServer) CloneRecipe(context.Context, *messages.CloneRecipeRequest) (*messages.CloneRecipeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CloneRecipe not implemented")
}
func (UnimplementedDinnerDoneBetterServer) CreateMeal(context.Context, *messages.CreateMealRequest) (*messages.CreateMealResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateMeal not implemented")
}
func (UnimplementedDinnerDoneBetterServer) CreateMealPlan(context.Context, *messages.CreateMealPlanRequest) (*messages.CreateMealPlanResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateMealPlan not implemented")
}
func (UnimplementedDinnerDoneBetterServer) CreateMealPlanEvent(context.Context, *messages.CreateMealPlanEventRequest) (*messages.CreateMealPlanEventResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateMealPlanEvent not implemented")
}
func (UnimplementedDinnerDoneBetterServer) CreateMealPlanGroceryListItem(context.Context, *messages.CreateMealPlanGroceryListItemRequest) (*messages.CreateMealPlanGroceryListItemResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateMealPlanGroceryListItem not implemented")
}
func (UnimplementedDinnerDoneBetterServer) CreateMealPlanOption(context.Context, *messages.CreateMealPlanOptionRequest) (*messages.CreateMealPlanOptionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateMealPlanOption not implemented")
}
func (UnimplementedDinnerDoneBetterServer) CreateMealPlanOptionVote(context.Context, *messages.CreateMealPlanOptionVoteRequest) (*messages.CreateMealPlanOptionVoteResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateMealPlanOptionVote not implemented")
}
func (UnimplementedDinnerDoneBetterServer) CreateMealPlanTask(context.Context, *messages.CreateMealPlanTaskRequest) (*messages.CreateMealPlanTaskResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateMealPlanTask not implemented")
}
func (UnimplementedDinnerDoneBetterServer) CreateRecipe(context.Context, *messages.CreateRecipeRequest) (*messages.CreateRecipeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateRecipe not implemented")
}
func (UnimplementedDinnerDoneBetterServer) CreateRecipePrepTask(context.Context, *messages.CreateRecipePrepTaskRequest) (*messages.CreateRecipePrepTaskResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateRecipePrepTask not implemented")
}
func (UnimplementedDinnerDoneBetterServer) CreateRecipeRating(context.Context, *messages.CreateRecipeRatingRequest) (*messages.CreateRecipeRatingResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateRecipeRating not implemented")
}
func (UnimplementedDinnerDoneBetterServer) CreateRecipeStep(context.Context, *messages.CreateRecipeStepRequest) (*messages.CreateRecipeStepResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateRecipeStep not implemented")
}
func (UnimplementedDinnerDoneBetterServer) CreateRecipeStepCompletionCondition(context.Context, *messages.CreateRecipeStepCompletionConditionRequest) (*messages.CreateRecipeStepCompletionConditionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateRecipeStepCompletionCondition not implemented")
}
func (UnimplementedDinnerDoneBetterServer) CreateRecipeStepIngredient(context.Context, *messages.CreateRecipeStepIngredientRequest) (*messages.CreateRecipeStepIngredientResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateRecipeStepIngredient not implemented")
}
func (UnimplementedDinnerDoneBetterServer) CreateRecipeStepInstrument(context.Context, *messages.CreateRecipeStepInstrumentRequest) (*messages.CreateRecipeStepInstrumentResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateRecipeStepInstrument not implemented")
}
func (UnimplementedDinnerDoneBetterServer) CreateRecipeStepProduct(context.Context, *messages.CreateRecipeStepProductRequest) (*messages.CreateRecipeStepProductResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateRecipeStepProduct not implemented")
}
func (UnimplementedDinnerDoneBetterServer) CreateRecipeStepVessel(context.Context, *messages.CreateRecipeStepVesselRequest) (*messages.CreateRecipeStepVesselResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateRecipeStepVessel not implemented")
}
func (UnimplementedDinnerDoneBetterServer) CreateValidIngredient(context.Context, *messages.CreateValidIngredientRequest) (*messages.CreateValidIngredientResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateValidIngredient not implemented")
}
func (UnimplementedDinnerDoneBetterServer) CreateValidIngredientGroup(context.Context, *messages.CreateValidIngredientGroupRequest) (*messages.CreateValidIngredientGroupResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateValidIngredientGroup not implemented")
}
func (UnimplementedDinnerDoneBetterServer) CreateValidIngredientMeasurementUnit(context.Context, *messages.CreateValidIngredientMeasurementUnitRequest) (*messages.CreateValidIngredientMeasurementUnitResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateValidIngredientMeasurementUnit not implemented")
}
func (UnimplementedDinnerDoneBetterServer) CreateValidIngredientPreparation(context.Context, *messages.CreateValidIngredientPreparationRequest) (*messages.CreateValidIngredientPreparationResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateValidIngredientPreparation not implemented")
}
func (UnimplementedDinnerDoneBetterServer) CreateValidIngredientState(context.Context, *messages.CreateValidIngredientStateRequest) (*messages.CreateValidIngredientStateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateValidIngredientState not implemented")
}
func (UnimplementedDinnerDoneBetterServer) CreateValidIngredientStateIngredient(context.Context, *messages.CreateValidIngredientStateIngredientRequest) (*messages.CreateValidIngredientStateIngredientResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateValidIngredientStateIngredient not implemented")
}
func (UnimplementedDinnerDoneBetterServer) CreateValidInstrument(context.Context, *messages.CreateValidInstrumentRequest) (*messages.CreateValidInstrumentResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateValidInstrument not implemented")
}
func (UnimplementedDinnerDoneBetterServer) CreateValidMeasurementUnit(context.Context, *messages.CreateValidMeasurementUnitRequest) (*messages.CreateValidMeasurementUnitResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateValidMeasurementUnit not implemented")
}
func (UnimplementedDinnerDoneBetterServer) CreateValidMeasurementUnitConversion(context.Context, *messages.CreateValidMeasurementUnitConversionRequest) (*messages.CreateValidMeasurementUnitConversionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateValidMeasurementUnitConversion not implemented")
}
func (UnimplementedDinnerDoneBetterServer) CreateValidPreparation(context.Context, *messages.CreateValidPreparationRequest) (*messages.CreateValidPreparationResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateValidPreparation not implemented")
}
func (UnimplementedDinnerDoneBetterServer) CreateValidPreparationInstrument(context.Context, *messages.CreateValidPreparationInstrumentRequest) (*messages.CreateValidPreparationInstrumentResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateValidPreparationInstrument not implemented")
}
func (UnimplementedDinnerDoneBetterServer) CreateValidPreparationVessel(context.Context, *messages.CreateValidPreparationVesselRequest) (*messages.CreateValidPreparationVesselResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateValidPreparationVessel not implemented")
}
func (UnimplementedDinnerDoneBetterServer) CreateValidVessel(context.Context, *messages.CreateValidVesselRequest) (*messages.CreateValidVesselResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateValidVessel not implemented")
}
func (UnimplementedDinnerDoneBetterServer) FinalizeMealPlan(context.Context, *messages.FinalizeMealPlanRequest) (*messages.FinalizeMealPlanResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FinalizeMealPlan not implemented")
}
func (UnimplementedDinnerDoneBetterServer) GetMeal(context.Context, *messages.GetMealRequest) (*messages.GetMealResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetMeal not implemented")
}
func (UnimplementedDinnerDoneBetterServer) GetMealPlan(context.Context, *messages.GetMealPlanRequest) (*messages.GetMealPlanResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetMealPlan not implemented")
}
func (UnimplementedDinnerDoneBetterServer) GetMealPlanEvent(context.Context, *messages.GetMealPlanEventRequest) (*messages.GetMealPlanEventResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetMealPlanEvent not implemented")
}
func (UnimplementedDinnerDoneBetterServer) GetMealPlanEvents(context.Context, *messages.GetMealPlanEventsRequest) (*messages.GetMealPlanEventsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetMealPlanEvents not implemented")
}
func (UnimplementedDinnerDoneBetterServer) GetMealPlanGroceryListItem(context.Context, *messages.GetMealPlanGroceryListItemRequest) (*messages.GetMealPlanGroceryListItemResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetMealPlanGroceryListItem not implemented")
}
func (UnimplementedDinnerDoneBetterServer) GetMealPlanGroceryListItemsForMealPlan(context.Context, *messages.GetMealPlanGroceryListItemsForMealPlanRequest) (*messages.GetMealPlanGroceryListItemsForMealPlanResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetMealPlanGroceryListItemsForMealPlan not implemented")
}
func (UnimplementedDinnerDoneBetterServer) GetMealPlanOption(context.Context, *messages.GetMealPlanOptionRequest) (*messages.GetMealPlanOptionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetMealPlanOption not implemented")
}
func (UnimplementedDinnerDoneBetterServer) GetMealPlanOptionVote(context.Context, *messages.GetMealPlanOptionVoteRequest) (*messages.GetMealPlanOptionVoteResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetMealPlanOptionVote not implemented")
}
func (UnimplementedDinnerDoneBetterServer) GetMealPlanOptionVotes(context.Context, *messages.GetMealPlanOptionVotesRequest) (*messages.GetMealPlanOptionVotesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetMealPlanOptionVotes not implemented")
}
func (UnimplementedDinnerDoneBetterServer) GetMealPlanOptions(context.Context, *messages.GetMealPlanOptionsRequest) (*messages.GetMealPlanOptionsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetMealPlanOptions not implemented")
}
func (UnimplementedDinnerDoneBetterServer) GetMealPlanTask(context.Context, *messages.GetMealPlanTaskRequest) (*messages.GetMealPlanTaskResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetMealPlanTask not implemented")
}
func (UnimplementedDinnerDoneBetterServer) GetMealPlanTasks(context.Context, *messages.GetMealPlanTasksRequest) (*messages.GetMealPlanTasksResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetMealPlanTasks not implemented")
}
func (UnimplementedDinnerDoneBetterServer) GetMealPlansForHousehold(context.Context, *messages.GetMealPlansForHouseholdRequest) (*messages.GetMealPlansForHouseholdResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetMealPlansForHousehold not implemented")
}
func (UnimplementedDinnerDoneBetterServer) GetMeals(context.Context, *messages.GetMealsRequest) (*messages.GetMealsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetMeals not implemented")
}
func (UnimplementedDinnerDoneBetterServer) GetMermaidDiagramForRecipe(context.Context, *messages.GetMermaidDiagramForRecipeRequest) (*messages.GetMermaidDiagramForRecipeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetMermaidDiagramForRecipe not implemented")
}
func (UnimplementedDinnerDoneBetterServer) GetRandomValidIngredient(context.Context, *messages.GetRandomValidIngredientRequest) (*messages.GetRandomValidIngredientResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetRandomValidIngredient not implemented")
}
func (UnimplementedDinnerDoneBetterServer) GetRandomValidInstrument(context.Context, *messages.GetRandomValidInstrumentRequest) (*messages.GetRandomValidInstrumentResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetRandomValidInstrument not implemented")
}
func (UnimplementedDinnerDoneBetterServer) GetRandomValidPreparation(context.Context, *messages.GetRandomValidPreparationRequest) (*messages.GetRandomValidPreparationResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetRandomValidPreparation not implemented")
}
func (UnimplementedDinnerDoneBetterServer) GetRandomValidVessel(context.Context, *messages.GetRandomValidVesselRequest) (*messages.GetRandomValidVesselResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetRandomValidVessel not implemented")
}
func (UnimplementedDinnerDoneBetterServer) GetRecipe(context.Context, *messages.GetRecipeRequest) (*messages.GetRecipeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetRecipe not implemented")
}
func (UnimplementedDinnerDoneBetterServer) GetRecipeMealPlanTasks(context.Context, *messages.GetRecipeMealPlanTasksRequest) (*messages.GetRecipeMealPlanTasksResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetRecipeMealPlanTasks not implemented")
}
func (UnimplementedDinnerDoneBetterServer) GetRecipePrepTask(context.Context, *messages.GetRecipePrepTaskRequest) (*messages.GetRecipePrepTaskResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetRecipePrepTask not implemented")
}
func (UnimplementedDinnerDoneBetterServer) GetRecipePrepTasks(context.Context, *messages.GetRecipePrepTasksRequest) (*messages.GetRecipePrepTasksResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetRecipePrepTasks not implemented")
}
func (UnimplementedDinnerDoneBetterServer) GetRecipeRating(context.Context, *messages.GetRecipeRatingRequest) (*messages.GetRecipeRatingResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetRecipeRating not implemented")
}
func (UnimplementedDinnerDoneBetterServer) GetRecipeRatingsForRecipe(context.Context, *messages.GetRecipeRatingsForRecipeRequest) (*messages.GetRecipeRatingsForRecipeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetRecipeRatingsForRecipe not implemented")
}
func (UnimplementedDinnerDoneBetterServer) GetRecipeStep(context.Context, *messages.GetRecipeStepRequest) (*messages.GetRecipeStepResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetRecipeStep not implemented")
}
func (UnimplementedDinnerDoneBetterServer) GetRecipeStepCompletionCondition(context.Context, *messages.GetRecipeStepCompletionConditionRequest) (*messages.GetRecipeStepCompletionConditionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetRecipeStepCompletionCondition not implemented")
}
func (UnimplementedDinnerDoneBetterServer) GetRecipeStepCompletionConditions(context.Context, *messages.GetRecipeStepCompletionConditionsRequest) (*messages.GetRecipeStepCompletionConditionsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetRecipeStepCompletionConditions not implemented")
}
func (UnimplementedDinnerDoneBetterServer) GetRecipeStepIngredient(context.Context, *messages.GetRecipeStepIngredientRequest) (*messages.GetRecipeStepIngredientResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetRecipeStepIngredient not implemented")
}
func (UnimplementedDinnerDoneBetterServer) GetRecipeStepIngredients(context.Context, *messages.GetRecipeStepIngredientsRequest) (*messages.GetRecipeStepIngredientsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetRecipeStepIngredients not implemented")
}
func (UnimplementedDinnerDoneBetterServer) GetRecipeStepInstrument(context.Context, *messages.GetRecipeStepInstrumentRequest) (*messages.GetRecipeStepInstrumentResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetRecipeStepInstrument not implemented")
}
func (UnimplementedDinnerDoneBetterServer) GetRecipeStepInstruments(context.Context, *messages.GetRecipeStepInstrumentsRequest) (*messages.GetRecipeStepInstrumentsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetRecipeStepInstruments not implemented")
}
func (UnimplementedDinnerDoneBetterServer) GetRecipeStepProduct(context.Context, *messages.GetRecipeStepProductRequest) (*messages.GetRecipeStepProductResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetRecipeStepProduct not implemented")
}
func (UnimplementedDinnerDoneBetterServer) GetRecipeStepProducts(context.Context, *messages.GetRecipeStepProductsRequest) (*messages.GetRecipeStepProductsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetRecipeStepProducts not implemented")
}
func (UnimplementedDinnerDoneBetterServer) GetRecipeStepVessel(context.Context, *messages.GetRecipeStepVesselRequest) (*messages.GetRecipeStepVesselResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetRecipeStepVessel not implemented")
}
func (UnimplementedDinnerDoneBetterServer) GetRecipeStepVessels(context.Context, *messages.GetRecipeStepVesselsRequest) (*messages.GetRecipeStepVesselsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetRecipeStepVessels not implemented")
}
func (UnimplementedDinnerDoneBetterServer) GetRecipeSteps(context.Context, *messages.GetRecipeStepsRequest) (*messages.GetRecipeStepsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetRecipeSteps not implemented")
}
func (UnimplementedDinnerDoneBetterServer) GetRecipes(context.Context, *messages.GetRecipesRequest) (*messages.GetRecipesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetRecipes not implemented")
}
func (UnimplementedDinnerDoneBetterServer) GetValidIngredient(context.Context, *messages.GetValidIngredientRequest) (*messages.GetValidIngredientResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetValidIngredient not implemented")
}
func (UnimplementedDinnerDoneBetterServer) GetValidIngredientGroup(context.Context, *messages.GetValidIngredientGroupRequest) (*messages.GetValidIngredientGroupResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetValidIngredientGroup not implemented")
}
func (UnimplementedDinnerDoneBetterServer) GetValidIngredientGroups(context.Context, *messages.GetValidIngredientGroupsRequest) (*messages.GetValidIngredientGroupsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetValidIngredientGroups not implemented")
}
func (UnimplementedDinnerDoneBetterServer) GetValidIngredientMeasurementUnit(context.Context, *messages.GetValidIngredientMeasurementUnitRequest) (*messages.GetValidIngredientMeasurementUnitResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetValidIngredientMeasurementUnit not implemented")
}
func (UnimplementedDinnerDoneBetterServer) GetValidIngredientMeasurementUnits(context.Context, *messages.GetValidIngredientMeasurementUnitsRequest) (*messages.GetValidIngredientMeasurementUnitsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetValidIngredientMeasurementUnits not implemented")
}
func (UnimplementedDinnerDoneBetterServer) GetValidIngredientMeasurementUnitsByIngredient(context.Context, *messages.GetValidIngredientMeasurementUnitsByIngredientRequest) (*messages.GetValidIngredientMeasurementUnitsByIngredientResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetValidIngredientMeasurementUnitsByIngredient not implemented")
}
func (UnimplementedDinnerDoneBetterServer) GetValidIngredientMeasurementUnitsByMeasurementUnit(context.Context, *messages.GetValidIngredientMeasurementUnitsByMeasurementUnitRequest) (*messages.GetValidIngredientMeasurementUnitsByMeasurementUnitResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetValidIngredientMeasurementUnitsByMeasurementUnit not implemented")
}
func (UnimplementedDinnerDoneBetterServer) GetValidIngredientPreparation(context.Context, *messages.GetValidIngredientPreparationRequest) (*messages.GetValidIngredientPreparationResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetValidIngredientPreparation not implemented")
}
func (UnimplementedDinnerDoneBetterServer) GetValidIngredientPreparations(context.Context, *messages.GetValidIngredientPreparationsRequest) (*messages.GetValidIngredientPreparationsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetValidIngredientPreparations not implemented")
}
func (UnimplementedDinnerDoneBetterServer) GetValidIngredientPreparationsByIngredient(context.Context, *messages.GetValidIngredientPreparationsByIngredientRequest) (*messages.GetValidIngredientPreparationsByIngredientResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetValidIngredientPreparationsByIngredient not implemented")
}
func (UnimplementedDinnerDoneBetterServer) GetValidIngredientPreparationsByPreparation(context.Context, *messages.GetValidIngredientPreparationsByPreparationRequest) (*messages.GetValidIngredientPreparationsByPreparationResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetValidIngredientPreparationsByPreparation not implemented")
}
func (UnimplementedDinnerDoneBetterServer) GetValidIngredientState(context.Context, *messages.GetValidIngredientStateRequest) (*messages.GetValidIngredientStateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetValidIngredientState not implemented")
}
func (UnimplementedDinnerDoneBetterServer) GetValidIngredientStateIngredient(context.Context, *messages.GetValidIngredientStateIngredientRequest) (*messages.GetValidIngredientStateIngredientResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetValidIngredientStateIngredient not implemented")
}
func (UnimplementedDinnerDoneBetterServer) GetValidIngredientStateIngredients(context.Context, *messages.GetValidIngredientStateIngredientsRequest) (*messages.GetValidIngredientStateIngredientsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetValidIngredientStateIngredients not implemented")
}
func (UnimplementedDinnerDoneBetterServer) GetValidIngredientStateIngredientsByIngredient(context.Context, *messages.GetValidIngredientStateIngredientsByIngredientRequest) (*messages.GetValidIngredientStateIngredientsByIngredientResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetValidIngredientStateIngredientsByIngredient not implemented")
}
func (UnimplementedDinnerDoneBetterServer) GetValidIngredientStateIngredientsByIngredientState(context.Context, *messages.GetValidIngredientStateIngredientsByIngredientStateRequest) (*messages.GetValidIngredientStateIngredientsByIngredientStateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetValidIngredientStateIngredientsByIngredientState not implemented")
}
func (UnimplementedDinnerDoneBetterServer) GetValidIngredientStates(context.Context, *messages.GetValidIngredientStatesRequest) (*messages.GetValidIngredientStatesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetValidIngredientStates not implemented")
}
func (UnimplementedDinnerDoneBetterServer) GetValidIngredients(context.Context, *messages.GetValidIngredientsRequest) (*messages.GetValidIngredientsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetValidIngredients not implemented")
}
func (UnimplementedDinnerDoneBetterServer) GetValidInstrument(context.Context, *messages.GetValidInstrumentRequest) (*messages.GetValidInstrumentResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetValidInstrument not implemented")
}
func (UnimplementedDinnerDoneBetterServer) GetValidInstruments(context.Context, *messages.GetValidInstrumentsRequest) (*messages.GetValidInstrumentsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetValidInstruments not implemented")
}
func (UnimplementedDinnerDoneBetterServer) GetValidMeasurementUnit(context.Context, *messages.GetValidMeasurementUnitRequest) (*messages.GetValidMeasurementUnitResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetValidMeasurementUnit not implemented")
}
func (UnimplementedDinnerDoneBetterServer) GetValidMeasurementUnitConversion(context.Context, *messages.GetValidMeasurementUnitConversionRequest) (*messages.GetValidMeasurementUnitConversionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetValidMeasurementUnitConversion not implemented")
}
func (UnimplementedDinnerDoneBetterServer) GetValidMeasurementUnitConversionsFromUnit(context.Context, *messages.GetValidMeasurementUnitConversionsFromUnitRequest) (*messages.GetValidMeasurementUnitConversionsFromUnitResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetValidMeasurementUnitConversionsFromUnit not implemented")
}
func (UnimplementedDinnerDoneBetterServer) GetValidMeasurementUnitConversionsToUnit(context.Context, *messages.GetValidMeasurementUnitConversionsToUnitRequest) (*messages.GetValidMeasurementUnitConversionsToUnitResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetValidMeasurementUnitConversionsToUnit not implemented")
}
func (UnimplementedDinnerDoneBetterServer) GetValidMeasurementUnits(context.Context, *messages.GetValidMeasurementUnitsRequest) (*messages.GetValidMeasurementUnitsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetValidMeasurementUnits not implemented")
}
func (UnimplementedDinnerDoneBetterServer) GetValidPreparation(context.Context, *messages.GetValidPreparationRequest) (*messages.GetValidPreparationResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetValidPreparation not implemented")
}
func (UnimplementedDinnerDoneBetterServer) GetValidPreparationInstrument(context.Context, *messages.GetValidPreparationInstrumentRequest) (*messages.GetValidPreparationInstrumentResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetValidPreparationInstrument not implemented")
}
func (UnimplementedDinnerDoneBetterServer) GetValidPreparationInstruments(context.Context, *messages.GetValidPreparationInstrumentsRequest) (*messages.GetValidPreparationInstrumentsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetValidPreparationInstruments not implemented")
}
func (UnimplementedDinnerDoneBetterServer) GetValidPreparationInstrumentsByInstrument(context.Context, *messages.GetValidPreparationInstrumentsByInstrumentRequest) (*messages.GetValidPreparationInstrumentsByInstrumentResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetValidPreparationInstrumentsByInstrument not implemented")
}
func (UnimplementedDinnerDoneBetterServer) GetValidPreparationInstrumentsByPreparation(context.Context, *messages.GetValidPreparationInstrumentsByPreparationRequest) (*messages.GetValidPreparationInstrumentsByPreparationResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetValidPreparationInstrumentsByPreparation not implemented")
}
func (UnimplementedDinnerDoneBetterServer) GetValidPreparationVessel(context.Context, *messages.GetValidPreparationVesselRequest) (*messages.GetValidPreparationVesselResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetValidPreparationVessel not implemented")
}
func (UnimplementedDinnerDoneBetterServer) GetValidPreparationVessels(context.Context, *messages.GetValidPreparationVesselsRequest) (*messages.GetValidPreparationVesselsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetValidPreparationVessels not implemented")
}
func (UnimplementedDinnerDoneBetterServer) GetValidPreparationVesselsByPreparation(context.Context, *messages.GetValidPreparationVesselsByPreparationRequest) (*messages.GetValidPreparationVesselsByPreparationResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetValidPreparationVesselsByPreparation not implemented")
}
func (UnimplementedDinnerDoneBetterServer) GetValidPreparationVesselsByVessel(context.Context, *messages.GetValidPreparationVesselsByVesselRequest) (*messages.GetValidPreparationVesselsByVesselResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetValidPreparationVesselsByVessel not implemented")
}
func (UnimplementedDinnerDoneBetterServer) GetValidPreparations(context.Context, *messages.GetValidPreparationsRequest) (*messages.GetValidPreparationsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetValidPreparations not implemented")
}
func (UnimplementedDinnerDoneBetterServer) GetValidVessel(context.Context, *messages.GetValidVesselRequest) (*messages.GetValidVesselResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetValidVessel not implemented")
}
func (UnimplementedDinnerDoneBetterServer) GetValidVessels(context.Context, *messages.GetValidVesselsRequest) (*messages.GetValidVesselsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetValidVessels not implemented")
}
func (UnimplementedDinnerDoneBetterServer) RunFinalizeMealPlanWorker(context.Context, *messages.RunFinalizeMealPlanWorkerRequest) (*messages.RunFinalizeMealPlanWorkerResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RunFinalizeMealPlanWorker not implemented")
}
func (UnimplementedDinnerDoneBetterServer) RunMealPlanGroceryListInitializerWorker(context.Context, *messages.RunMealPlanGroceryListInitializerWorkerRequest) (*messages.RunMealPlanGroceryListInitializerWorkerResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RunMealPlanGroceryListInitializerWorker not implemented")
}
func (UnimplementedDinnerDoneBetterServer) RunMealPlanTaskCreatorWorker(context.Context, *messages.RunMealPlanTaskCreatorWorkerRequest) (*messages.RunMealPlanTaskCreatorWorkerResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RunMealPlanTaskCreatorWorker not implemented")
}
func (UnimplementedDinnerDoneBetterServer) SearchForMeals(context.Context, *messages.SearchForMealsRequest) (*messages.SearchForMealsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SearchForMeals not implemented")
}
func (UnimplementedDinnerDoneBetterServer) SearchForRecipes(context.Context, *messages.SearchForRecipesRequest) (*messages.SearchForRecipesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SearchForRecipes not implemented")
}
func (UnimplementedDinnerDoneBetterServer) SearchForValidIngredientGroups(context.Context, *messages.SearchForValidIngredientGroupsRequest) (*messages.SearchForValidIngredientGroupsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SearchForValidIngredientGroups not implemented")
}
func (UnimplementedDinnerDoneBetterServer) SearchForValidIngredientStates(context.Context, *messages.SearchForValidIngredientStatesRequest) (*messages.SearchForValidIngredientStatesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SearchForValidIngredientStates not implemented")
}
func (UnimplementedDinnerDoneBetterServer) SearchForValidIngredients(context.Context, *messages.SearchForValidIngredientsRequest) (*messages.SearchForValidIngredientsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SearchForValidIngredients not implemented")
}
func (UnimplementedDinnerDoneBetterServer) SearchForValidInstruments(context.Context, *messages.SearchForValidInstrumentsRequest) (*messages.SearchForValidInstrumentsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SearchForValidInstruments not implemented")
}
func (UnimplementedDinnerDoneBetterServer) SearchForValidMeasurementUnits(context.Context, *messages.SearchForValidMeasurementUnitsRequest) (*messages.SearchForValidMeasurementUnitsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SearchForValidMeasurementUnits not implemented")
}
func (UnimplementedDinnerDoneBetterServer) SearchForValidPreparations(context.Context, *messages.SearchForValidPreparationsRequest) (*messages.SearchForValidPreparationsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SearchForValidPreparations not implemented")
}
func (UnimplementedDinnerDoneBetterServer) SearchForValidVessels(context.Context, *messages.SearchForValidVesselsRequest) (*messages.SearchForValidVesselsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SearchForValidVessels not implemented")
}
func (UnimplementedDinnerDoneBetterServer) SearchValidIngredientsByPreparation(context.Context, *messages.SearchValidIngredientsByPreparationRequest) (*messages.SearchValidIngredientsByPreparationResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SearchValidIngredientsByPreparation not implemented")
}
func (UnimplementedDinnerDoneBetterServer) SearchValidMeasurementUnitsByIngredient(context.Context, *messages.SearchValidMeasurementUnitsByIngredientRequest) (*messages.SearchValidMeasurementUnitsByIngredientResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SearchValidMeasurementUnitsByIngredient not implemented")
}
func (UnimplementedDinnerDoneBetterServer) UpdateMealPlan(context.Context, *messages.UpdateMealPlanRequest) (*messages.UpdateMealPlanResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateMealPlan not implemented")
}
func (UnimplementedDinnerDoneBetterServer) UpdateMealPlanEvent(context.Context, *messages.UpdateMealPlanEventRequest) (*messages.UpdateMealPlanEventResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateMealPlanEvent not implemented")
}
func (UnimplementedDinnerDoneBetterServer) UpdateMealPlanGroceryListItem(context.Context, *messages.UpdateMealPlanGroceryListItemRequest) (*messages.UpdateMealPlanGroceryListItemResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateMealPlanGroceryListItem not implemented")
}
func (UnimplementedDinnerDoneBetterServer) UpdateMealPlanOption(context.Context, *messages.UpdateMealPlanOptionRequest) (*messages.UpdateMealPlanOptionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateMealPlanOption not implemented")
}
func (UnimplementedDinnerDoneBetterServer) UpdateMealPlanOptionVote(context.Context, *messages.UpdateMealPlanOptionVoteRequest) (*messages.UpdateMealPlanOptionVoteResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateMealPlanOptionVote not implemented")
}
func (UnimplementedDinnerDoneBetterServer) UpdateMealPlanTaskStatus(context.Context, *messages.UpdateMealPlanTaskStatusRequest) (*messages.UpdateMealPlanTaskStatusResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateMealPlanTaskStatus not implemented")
}
func (UnimplementedDinnerDoneBetterServer) UpdateRecipe(context.Context, *messages.UpdateRecipeRequest) (*messages.UpdateRecipeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateRecipe not implemented")
}
func (UnimplementedDinnerDoneBetterServer) UpdateRecipePrepTask(context.Context, *messages.UpdateRecipePrepTaskRequest) (*messages.UpdateRecipePrepTaskResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateRecipePrepTask not implemented")
}
func (UnimplementedDinnerDoneBetterServer) UpdateRecipeRating(context.Context, *messages.UpdateRecipeRatingRequest) (*messages.UpdateRecipeRatingResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateRecipeRating not implemented")
}
func (UnimplementedDinnerDoneBetterServer) UpdateRecipeStep(context.Context, *messages.UpdateRecipeStepRequest) (*messages.UpdateRecipeStepResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateRecipeStep not implemented")
}
func (UnimplementedDinnerDoneBetterServer) UpdateRecipeStepCompletionCondition(context.Context, *messages.UpdateRecipeStepCompletionConditionRequest) (*messages.UpdateRecipeStepCompletionConditionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateRecipeStepCompletionCondition not implemented")
}
func (UnimplementedDinnerDoneBetterServer) UpdateRecipeStepIngredient(context.Context, *messages.UpdateRecipeStepIngredientRequest) (*messages.UpdateRecipeStepIngredientResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateRecipeStepIngredient not implemented")
}
func (UnimplementedDinnerDoneBetterServer) UpdateRecipeStepInstrument(context.Context, *messages.UpdateRecipeStepInstrumentRequest) (*messages.UpdateRecipeStepInstrumentResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateRecipeStepInstrument not implemented")
}
func (UnimplementedDinnerDoneBetterServer) UpdateRecipeStepProduct(context.Context, *messages.UpdateRecipeStepProductRequest) (*messages.UpdateRecipeStepProductResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateRecipeStepProduct not implemented")
}
func (UnimplementedDinnerDoneBetterServer) UpdateRecipeStepVessel(context.Context, *messages.UpdateRecipeStepVesselRequest) (*messages.UpdateRecipeStepVesselResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateRecipeStepVessel not implemented")
}
func (UnimplementedDinnerDoneBetterServer) UpdateValidIngredient(context.Context, *messages.UpdateValidIngredientRequest) (*messages.UpdateValidIngredientResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateValidIngredient not implemented")
}
func (UnimplementedDinnerDoneBetterServer) UpdateValidIngredientGroup(context.Context, *messages.UpdateValidIngredientGroupRequest) (*messages.UpdateValidIngredientGroupResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateValidIngredientGroup not implemented")
}
func (UnimplementedDinnerDoneBetterServer) UpdateValidIngredientMeasurementUnit(context.Context, *messages.UpdateValidIngredientMeasurementUnitRequest) (*messages.UpdateValidIngredientMeasurementUnitResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateValidIngredientMeasurementUnit not implemented")
}
func (UnimplementedDinnerDoneBetterServer) UpdateValidIngredientPreparation(context.Context, *messages.UpdateValidIngredientPreparationRequest) (*messages.UpdateValidIngredientPreparationResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateValidIngredientPreparation not implemented")
}
func (UnimplementedDinnerDoneBetterServer) UpdateValidIngredientState(context.Context, *messages.UpdateValidIngredientStateRequest) (*messages.UpdateValidIngredientStateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateValidIngredientState not implemented")
}
func (UnimplementedDinnerDoneBetterServer) UpdateValidIngredientStateIngredient(context.Context, *messages.UpdateValidIngredientStateIngredientRequest) (*messages.UpdateValidIngredientStateIngredientResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateValidIngredientStateIngredient not implemented")
}
func (UnimplementedDinnerDoneBetterServer) UpdateValidInstrument(context.Context, *messages.UpdateValidInstrumentRequest) (*messages.UpdateValidInstrumentResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateValidInstrument not implemented")
}
func (UnimplementedDinnerDoneBetterServer) UpdateValidMeasurementUnit(context.Context, *messages.UpdateValidMeasurementUnitRequest) (*messages.UpdateValidMeasurementUnitResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateValidMeasurementUnit not implemented")
}
func (UnimplementedDinnerDoneBetterServer) UpdateValidMeasurementUnitConversion(context.Context, *messages.UpdateValidMeasurementUnitConversionRequest) (*messages.UpdateValidMeasurementUnitConversionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateValidMeasurementUnitConversion not implemented")
}
func (UnimplementedDinnerDoneBetterServer) UpdateValidPreparation(context.Context, *messages.UpdateValidPreparationRequest) (*messages.UpdateValidPreparationResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateValidPreparation not implemented")
}
func (UnimplementedDinnerDoneBetterServer) UpdateValidPreparationInstrument(context.Context, *messages.UpdateValidPreparationInstrumentRequest) (*messages.UpdateValidPreparationInstrumentResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateValidPreparationInstrument not implemented")
}
func (UnimplementedDinnerDoneBetterServer) UpdateValidPreparationVessel(context.Context, *messages.UpdateValidPreparationVesselRequest) (*messages.UpdateValidPreparationVesselResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateValidPreparationVessel not implemented")
}
func (UnimplementedDinnerDoneBetterServer) UpdateValidVessel(context.Context, *messages.UpdateValidVesselRequest) (*messages.UpdateValidVesselResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateValidVessel not implemented")
}
func (UnimplementedDinnerDoneBetterServer) ArchiveHouseholdInstrumentOwnership(context.Context, *messages.ArchiveHouseholdInstrumentOwnershipRequest) (*messages.ArchiveHouseholdInstrumentOwnershipResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ArchiveHouseholdInstrumentOwnership not implemented")
}
func (UnimplementedDinnerDoneBetterServer) ArchiveUserIngredientPreference(context.Context, *messages.ArchiveUserIngredientPreferenceRequest) (*messages.ArchiveUserIngredientPreferenceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ArchiveUserIngredientPreference not implemented")
}
func (UnimplementedDinnerDoneBetterServer) CreateHouseholdInstrumentOwnership(context.Context, *messages.CreateHouseholdInstrumentOwnershipRequest) (*messages.CreateHouseholdInstrumentOwnershipResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateHouseholdInstrumentOwnership not implemented")
}
func (UnimplementedDinnerDoneBetterServer) CreateUserIngredientPreference(context.Context, *messages.CreateUserIngredientPreferenceRequest) (*messages.CreateUserIngredientPreferenceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateUserIngredientPreference not implemented")
}
func (UnimplementedDinnerDoneBetterServer) GetHouseholdInstrumentOwnership(context.Context, *messages.GetHouseholdInstrumentOwnershipRequest) (*messages.GetHouseholdInstrumentOwnershipResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetHouseholdInstrumentOwnership not implemented")
}
func (UnimplementedDinnerDoneBetterServer) GetHouseholdInstrumentOwnerships(context.Context, *messages.GetHouseholdInstrumentOwnershipsRequest) (*messages.GetHouseholdInstrumentOwnershipsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetHouseholdInstrumentOwnerships not implemented")
}
func (UnimplementedDinnerDoneBetterServer) GetUserIngredientPreferences(context.Context, *messages.GetUserIngredientPreferencesRequest) (*messages.GetUserIngredientPreferencesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUserIngredientPreferences not implemented")
}
func (UnimplementedDinnerDoneBetterServer) UpdateHouseholdInstrumentOwnership(context.Context, *messages.UpdateHouseholdInstrumentOwnershipRequest) (*messages.UpdateHouseholdInstrumentOwnershipResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateHouseholdInstrumentOwnership not implemented")
}
func (UnimplementedDinnerDoneBetterServer) UpdateUserIngredientPreference(context.Context, *messages.UpdateUserIngredientPreferenceRequest) (*messages.UpdateUserIngredientPreferenceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateUserIngredientPreference not implemented")
}
func (UnimplementedDinnerDoneBetterServer) mustEmbedUnimplementedDinnerDoneBetterServer() {}
func (UnimplementedDinnerDoneBetterServer) testEmbeddedByValue()                          {}

// UnsafeDinnerDoneBetterServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to DinnerDoneBetterServer will
// result in compilation errors.
type UnsafeDinnerDoneBetterServer interface {
	mustEmbedUnimplementedDinnerDoneBetterServer()
}

func RegisterDinnerDoneBetterServer(s grpc.ServiceRegistrar, srv DinnerDoneBetterServer) {
	// If the following call pancis, it indicates UnimplementedDinnerDoneBetterServer was
	// embedded by pointer and is nil.  This will cause panics if an
	// unimplemented method is ever invoked, so we test this at initialization
	// time to prevent it from happening at runtime later due to I/O.
	if t, ok := srv.(interface{ testEmbeddedByValue() }); ok {
		t.testEmbeddedByValue()
	}
	s.RegisterService(&DinnerDoneBetter_ServiceDesc, srv)
}

func _DinnerDoneBetter_Ping_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.PingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).Ping(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_Ping_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).Ping(ctx, req.(*messages.PingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_ExchangeToken_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.ExchangeTokenRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).ExchangeToken(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_ExchangeToken_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).ExchangeToken(ctx, req.(*messages.ExchangeTokenRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_AcceptHouseholdInvitation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.AcceptHouseholdInvitationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).AcceptHouseholdInvitation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_AcceptHouseholdInvitation_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).AcceptHouseholdInvitation(ctx, req.(*messages.AcceptHouseholdInvitationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_AdminLoginForToken_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.AdminLoginForTokenRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).AdminLoginForToken(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_AdminLoginForToken_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).AdminLoginForToken(ctx, req.(*messages.AdminLoginForTokenRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_AdminUpdateUserStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.AdminUpdateUserStatusRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).AdminUpdateUserStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_AdminUpdateUserStatus_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).AdminUpdateUserStatus(ctx, req.(*messages.AdminUpdateUserStatusRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_AggregateUserDataReport_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.AggregateUserDataReportRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).AggregateUserDataReport(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_AggregateUserDataReport_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).AggregateUserDataReport(ctx, req.(*messages.AggregateUserDataReportRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_ArchiveHousehold_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.ArchiveHouseholdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).ArchiveHousehold(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_ArchiveHousehold_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).ArchiveHousehold(ctx, req.(*messages.ArchiveHouseholdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_ArchiveOAuth2Client_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.ArchiveOAuth2ClientRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).ArchiveOAuth2Client(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_ArchiveOAuth2Client_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).ArchiveOAuth2Client(ctx, req.(*messages.ArchiveOAuth2ClientRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_ArchiveServiceSetting_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.ArchiveServiceSettingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).ArchiveServiceSetting(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_ArchiveServiceSetting_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).ArchiveServiceSetting(ctx, req.(*messages.ArchiveServiceSettingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_ArchiveServiceSettingConfiguration_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.ArchiveServiceSettingConfigurationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).ArchiveServiceSettingConfiguration(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_ArchiveServiceSettingConfiguration_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).ArchiveServiceSettingConfiguration(ctx, req.(*messages.ArchiveServiceSettingConfigurationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_ArchiveUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.ArchiveUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).ArchiveUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_ArchiveUser_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).ArchiveUser(ctx, req.(*messages.ArchiveUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_ArchiveUserMembership_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.ArchiveUserMembershipRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).ArchiveUserMembership(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_ArchiveUserMembership_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).ArchiveUserMembership(ctx, req.(*messages.ArchiveUserMembershipRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_ArchiveWebhook_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.ArchiveWebhookRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).ArchiveWebhook(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_ArchiveWebhook_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).ArchiveWebhook(ctx, req.(*messages.ArchiveWebhookRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_ArchiveWebhookTriggerEvent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.ArchiveWebhookTriggerEventRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).ArchiveWebhookTriggerEvent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_ArchiveWebhookTriggerEvent_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).ArchiveWebhookTriggerEvent(ctx, req.(*messages.ArchiveWebhookTriggerEventRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_CancelHouseholdInvitation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.CancelHouseholdInvitationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).CancelHouseholdInvitation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_CancelHouseholdInvitation_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).CancelHouseholdInvitation(ctx, req.(*messages.CancelHouseholdInvitationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_CheckPermissions_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.CheckPermissionsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).CheckPermissions(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_CheckPermissions_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).CheckPermissions(ctx, req.(*messages.CheckPermissionsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_CreateHousehold_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.CreateHouseholdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).CreateHousehold(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_CreateHousehold_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).CreateHousehold(ctx, req.(*messages.CreateHouseholdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_CreateHouseholdInvitation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.CreateHouseholdInvitationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).CreateHouseholdInvitation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_CreateHouseholdInvitation_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).CreateHouseholdInvitation(ctx, req.(*messages.CreateHouseholdInvitationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_CreateOAuth2Client_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.CreateOAuth2ClientRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).CreateOAuth2Client(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_CreateOAuth2Client_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).CreateOAuth2Client(ctx, req.(*messages.CreateOAuth2ClientRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_CreateServiceSetting_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.CreateServiceSettingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).CreateServiceSetting(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_CreateServiceSetting_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).CreateServiceSetting(ctx, req.(*messages.CreateServiceSettingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_CreateServiceSettingConfiguration_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.CreateServiceSettingConfigurationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).CreateServiceSettingConfiguration(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_CreateServiceSettingConfiguration_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).CreateServiceSettingConfiguration(ctx, req.(*messages.CreateServiceSettingConfigurationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_CreateUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.CreateUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).CreateUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_CreateUser_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).CreateUser(ctx, req.(*messages.CreateUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_CreateUserNotification_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.CreateUserNotificationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).CreateUserNotification(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_CreateUserNotification_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).CreateUserNotification(ctx, req.(*messages.CreateUserNotificationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_CreateWebhook_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.CreateWebhookRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).CreateWebhook(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_CreateWebhook_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).CreateWebhook(ctx, req.(*messages.CreateWebhookRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_CreateWebhookTriggerEvent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.CreateWebhookTriggerEventRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).CreateWebhookTriggerEvent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_CreateWebhookTriggerEvent_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).CreateWebhookTriggerEvent(ctx, req.(*messages.CreateWebhookTriggerEventRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_DestroyAllUserData_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.DestroyAllUserDataRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).DestroyAllUserData(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_DestroyAllUserData_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).DestroyAllUserData(ctx, req.(*messages.DestroyAllUserDataRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_FetchUserDataReport_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.FetchUserDataReportRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).FetchUserDataReport(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_FetchUserDataReport_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).FetchUserDataReport(ctx, req.(*messages.FetchUserDataReportRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_GetActiveHousehold_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.GetActiveHouseholdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).GetActiveHousehold(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_GetActiveHousehold_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).GetActiveHousehold(ctx, req.(*messages.GetActiveHouseholdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_GetAuditLogEntriesForHousehold_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.GetAuditLogEntriesForHouseholdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).GetAuditLogEntriesForHousehold(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_GetAuditLogEntriesForHousehold_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).GetAuditLogEntriesForHousehold(ctx, req.(*messages.GetAuditLogEntriesForHouseholdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_GetAuditLogEntriesForUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.GetAuditLogEntriesForUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).GetAuditLogEntriesForUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_GetAuditLogEntriesForUser_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).GetAuditLogEntriesForUser(ctx, req.(*messages.GetAuditLogEntriesForUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_GetAuditLogEntryByID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.GetAuditLogEntryByIDRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).GetAuditLogEntryByID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_GetAuditLogEntryByID_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).GetAuditLogEntryByID(ctx, req.(*messages.GetAuditLogEntryByIDRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_GetAuthStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.GetAuthStatusRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).GetAuthStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_GetAuthStatus_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).GetAuthStatus(ctx, req.(*messages.GetAuthStatusRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_GetHousehold_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.GetHouseholdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).GetHousehold(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_GetHousehold_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).GetHousehold(ctx, req.(*messages.GetHouseholdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_GetHouseholdInvitation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.GetHouseholdInvitationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).GetHouseholdInvitation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_GetHouseholdInvitation_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).GetHouseholdInvitation(ctx, req.(*messages.GetHouseholdInvitationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_GetHouseholdInvitationByID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.GetHouseholdInvitationByIDRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).GetHouseholdInvitationByID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_GetHouseholdInvitationByID_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).GetHouseholdInvitationByID(ctx, req.(*messages.GetHouseholdInvitationByIDRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_GetHouseholds_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.GetHouseholdsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).GetHouseholds(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_GetHouseholds_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).GetHouseholds(ctx, req.(*messages.GetHouseholdsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_GetOAuth2Client_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.GetOAuth2ClientRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).GetOAuth2Client(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_GetOAuth2Client_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).GetOAuth2Client(ctx, req.(*messages.GetOAuth2ClientRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_GetOAuth2Clients_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.GetOAuth2ClientsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).GetOAuth2Clients(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_GetOAuth2Clients_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).GetOAuth2Clients(ctx, req.(*messages.GetOAuth2ClientsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_GetReceivedHouseholdInvitations_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.GetReceivedHouseholdInvitationsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).GetReceivedHouseholdInvitations(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_GetReceivedHouseholdInvitations_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).GetReceivedHouseholdInvitations(ctx, req.(*messages.GetReceivedHouseholdInvitationsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_GetSelf_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.GetSelfRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).GetSelf(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_GetSelf_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).GetSelf(ctx, req.(*messages.GetSelfRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_GetSentHouseholdInvitations_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.GetSentHouseholdInvitationsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).GetSentHouseholdInvitations(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_GetSentHouseholdInvitations_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).GetSentHouseholdInvitations(ctx, req.(*messages.GetSentHouseholdInvitationsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_GetServiceSetting_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.GetServiceSettingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).GetServiceSetting(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_GetServiceSetting_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).GetServiceSetting(ctx, req.(*messages.GetServiceSettingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_GetServiceSettingConfigurationByName_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.GetServiceSettingConfigurationByNameRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).GetServiceSettingConfigurationByName(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_GetServiceSettingConfigurationByName_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).GetServiceSettingConfigurationByName(ctx, req.(*messages.GetServiceSettingConfigurationByNameRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_GetServiceSettingConfigurationsForHousehold_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.GetServiceSettingConfigurationsForHouseholdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).GetServiceSettingConfigurationsForHousehold(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_GetServiceSettingConfigurationsForHousehold_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).GetServiceSettingConfigurationsForHousehold(ctx, req.(*messages.GetServiceSettingConfigurationsForHouseholdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_GetServiceSettingConfigurationsForUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.GetServiceSettingConfigurationsForUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).GetServiceSettingConfigurationsForUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_GetServiceSettingConfigurationsForUser_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).GetServiceSettingConfigurationsForUser(ctx, req.(*messages.GetServiceSettingConfigurationsForUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_GetServiceSettings_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.GetServiceSettingsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).GetServiceSettings(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_GetServiceSettings_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).GetServiceSettings(ctx, req.(*messages.GetServiceSettingsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_GetUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.GetUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).GetUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_GetUser_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).GetUser(ctx, req.(*messages.GetUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_GetUserNotification_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.GetUserNotificationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).GetUserNotification(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_GetUserNotification_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).GetUserNotification(ctx, req.(*messages.GetUserNotificationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_GetUserNotifications_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.GetUserNotificationsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).GetUserNotifications(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_GetUserNotifications_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).GetUserNotifications(ctx, req.(*messages.GetUserNotificationsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_GetUsers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.GetUsersRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).GetUsers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_GetUsers_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).GetUsers(ctx, req.(*messages.GetUsersRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_GetWebhook_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.GetWebhookRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).GetWebhook(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_GetWebhook_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).GetWebhook(ctx, req.(*messages.GetWebhookRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_GetWebhooks_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.GetWebhooksRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).GetWebhooks(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_GetWebhooks_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).GetWebhooks(ctx, req.(*messages.GetWebhooksRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_LoginForToken_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.LoginForTokenRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).LoginForToken(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_LoginForToken_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).LoginForToken(ctx, req.(*messages.LoginForTokenRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_PublishArbitraryQueueMessage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.PublishArbitraryQueueMessageRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).PublishArbitraryQueueMessage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_PublishArbitraryQueueMessage_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).PublishArbitraryQueueMessage(ctx, req.(*messages.PublishArbitraryQueueMessageRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_RedeemPasswordResetToken_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.RedeemPasswordResetTokenRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).RedeemPasswordResetToken(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_RedeemPasswordResetToken_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).RedeemPasswordResetToken(ctx, req.(*messages.RedeemPasswordResetTokenRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_RefreshTOTPSecret_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.RefreshTOTPSecretRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).RefreshTOTPSecret(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_RefreshTOTPSecret_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).RefreshTOTPSecret(ctx, req.(*messages.RefreshTOTPSecretRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_RejectHouseholdInvitation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.RejectHouseholdInvitationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).RejectHouseholdInvitation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_RejectHouseholdInvitation_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).RejectHouseholdInvitation(ctx, req.(*messages.RejectHouseholdInvitationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_RequestEmailVerificationEmail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.RequestEmailVerificationEmailRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).RequestEmailVerificationEmail(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_RequestEmailVerificationEmail_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).RequestEmailVerificationEmail(ctx, req.(*messages.RequestEmailVerificationEmailRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_RequestPasswordResetToken_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.RequestPasswordResetTokenRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).RequestPasswordResetToken(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_RequestPasswordResetToken_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).RequestPasswordResetToken(ctx, req.(*messages.RequestPasswordResetTokenRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_RequestUsernameReminder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.RequestUsernameReminderRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).RequestUsernameReminder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_RequestUsernameReminder_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).RequestUsernameReminder(ctx, req.(*messages.RequestUsernameReminderRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_SearchForServiceSettings_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.SearchForServiceSettingsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).SearchForServiceSettings(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_SearchForServiceSettings_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).SearchForServiceSettings(ctx, req.(*messages.SearchForServiceSettingsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_SearchForUsers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.SearchForUsersRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).SearchForUsers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_SearchForUsers_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).SearchForUsers(ctx, req.(*messages.SearchForUsersRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_SetDefaultHousehold_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.SetDefaultHouseholdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).SetDefaultHousehold(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_SetDefaultHousehold_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).SetDefaultHousehold(ctx, req.(*messages.SetDefaultHouseholdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_TransferHouseholdOwnership_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.TransferHouseholdOwnershipRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).TransferHouseholdOwnership(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_TransferHouseholdOwnership_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).TransferHouseholdOwnership(ctx, req.(*messages.TransferHouseholdOwnershipRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_UpdateHousehold_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.UpdateHouseholdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).UpdateHousehold(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_UpdateHousehold_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).UpdateHousehold(ctx, req.(*messages.UpdateHouseholdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_UpdateHouseholdMemberPermissions_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.UpdateHouseholdMemberPermissionsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).UpdateHouseholdMemberPermissions(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_UpdateHouseholdMemberPermissions_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).UpdateHouseholdMemberPermissions(ctx, req.(*messages.UpdateHouseholdMemberPermissionsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_UpdatePassword_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.UpdatePasswordRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).UpdatePassword(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_UpdatePassword_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).UpdatePassword(ctx, req.(*messages.UpdatePasswordRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_UpdateServiceSettingConfiguration_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.UpdateServiceSettingConfigurationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).UpdateServiceSettingConfiguration(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_UpdateServiceSettingConfiguration_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).UpdateServiceSettingConfiguration(ctx, req.(*messages.UpdateServiceSettingConfigurationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_UpdateUserDetails_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.UpdateUserDetailsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).UpdateUserDetails(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_UpdateUserDetails_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).UpdateUserDetails(ctx, req.(*messages.UpdateUserDetailsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_UpdateUserEmailAddress_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.UpdateUserEmailAddressRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).UpdateUserEmailAddress(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_UpdateUserEmailAddress_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).UpdateUserEmailAddress(ctx, req.(*messages.UpdateUserEmailAddressRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_UpdateUserNotification_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.UpdateUserNotificationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).UpdateUserNotification(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_UpdateUserNotification_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).UpdateUserNotification(ctx, req.(*messages.UpdateUserNotificationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_UpdateUserUsername_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.UpdateUserUsernameRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).UpdateUserUsername(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_UpdateUserUsername_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).UpdateUserUsername(ctx, req.(*messages.UpdateUserUsernameRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_UploadUserAvatar_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.UploadUserAvatarRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).UploadUserAvatar(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_UploadUserAvatar_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).UploadUserAvatar(ctx, req.(*messages.UploadUserAvatarRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_VerifyEmailAddress_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.VerifyEmailAddressRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).VerifyEmailAddress(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_VerifyEmailAddress_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).VerifyEmailAddress(ctx, req.(*messages.VerifyEmailAddressRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_VerifyTOTPSecret_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.VerifyTOTPSecretRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).VerifyTOTPSecret(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_VerifyTOTPSecret_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).VerifyTOTPSecret(ctx, req.(*messages.VerifyTOTPSecretRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_ArchiveMeal_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.ArchiveMealRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).ArchiveMeal(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_ArchiveMeal_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).ArchiveMeal(ctx, req.(*messages.ArchiveMealRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_ArchiveMealPlan_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.ArchiveMealPlanRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).ArchiveMealPlan(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_ArchiveMealPlan_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).ArchiveMealPlan(ctx, req.(*messages.ArchiveMealPlanRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_ArchiveMealPlanEvent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.ArchiveMealPlanEventRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).ArchiveMealPlanEvent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_ArchiveMealPlanEvent_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).ArchiveMealPlanEvent(ctx, req.(*messages.ArchiveMealPlanEventRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_ArchiveMealPlanGroceryListItem_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.ArchiveMealPlanGroceryListItemRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).ArchiveMealPlanGroceryListItem(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_ArchiveMealPlanGroceryListItem_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).ArchiveMealPlanGroceryListItem(ctx, req.(*messages.ArchiveMealPlanGroceryListItemRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_ArchiveMealPlanOption_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.ArchiveMealPlanOptionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).ArchiveMealPlanOption(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_ArchiveMealPlanOption_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).ArchiveMealPlanOption(ctx, req.(*messages.ArchiveMealPlanOptionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_ArchiveMealPlanOptionVote_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.ArchiveMealPlanOptionVoteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).ArchiveMealPlanOptionVote(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_ArchiveMealPlanOptionVote_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).ArchiveMealPlanOptionVote(ctx, req.(*messages.ArchiveMealPlanOptionVoteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_ArchiveRecipe_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.ArchiveRecipeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).ArchiveRecipe(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_ArchiveRecipe_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).ArchiveRecipe(ctx, req.(*messages.ArchiveRecipeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_ArchiveRecipePrepTask_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.ArchiveRecipePrepTaskRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).ArchiveRecipePrepTask(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_ArchiveRecipePrepTask_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).ArchiveRecipePrepTask(ctx, req.(*messages.ArchiveRecipePrepTaskRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_ArchiveRecipeRating_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.ArchiveRecipeRatingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).ArchiveRecipeRating(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_ArchiveRecipeRating_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).ArchiveRecipeRating(ctx, req.(*messages.ArchiveRecipeRatingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_ArchiveRecipeStep_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.ArchiveRecipeStepRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).ArchiveRecipeStep(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_ArchiveRecipeStep_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).ArchiveRecipeStep(ctx, req.(*messages.ArchiveRecipeStepRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_ArchiveRecipeStepCompletionCondition_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.ArchiveRecipeStepCompletionConditionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).ArchiveRecipeStepCompletionCondition(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_ArchiveRecipeStepCompletionCondition_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).ArchiveRecipeStepCompletionCondition(ctx, req.(*messages.ArchiveRecipeStepCompletionConditionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_ArchiveRecipeStepIngredient_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.ArchiveRecipeStepIngredientRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).ArchiveRecipeStepIngredient(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_ArchiveRecipeStepIngredient_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).ArchiveRecipeStepIngredient(ctx, req.(*messages.ArchiveRecipeStepIngredientRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_ArchiveRecipeStepInstrument_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.ArchiveRecipeStepInstrumentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).ArchiveRecipeStepInstrument(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_ArchiveRecipeStepInstrument_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).ArchiveRecipeStepInstrument(ctx, req.(*messages.ArchiveRecipeStepInstrumentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_ArchiveRecipeStepProduct_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.ArchiveRecipeStepProductRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).ArchiveRecipeStepProduct(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_ArchiveRecipeStepProduct_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).ArchiveRecipeStepProduct(ctx, req.(*messages.ArchiveRecipeStepProductRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_ArchiveRecipeStepVessel_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.ArchiveRecipeStepVesselRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).ArchiveRecipeStepVessel(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_ArchiveRecipeStepVessel_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).ArchiveRecipeStepVessel(ctx, req.(*messages.ArchiveRecipeStepVesselRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_ArchiveValidIngredient_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.ArchiveValidIngredientRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).ArchiveValidIngredient(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_ArchiveValidIngredient_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).ArchiveValidIngredient(ctx, req.(*messages.ArchiveValidIngredientRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_ArchiveValidIngredientGroup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.ArchiveValidIngredientGroupRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).ArchiveValidIngredientGroup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_ArchiveValidIngredientGroup_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).ArchiveValidIngredientGroup(ctx, req.(*messages.ArchiveValidIngredientGroupRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_ArchiveValidIngredientMeasurementUnit_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.ArchiveValidIngredientMeasurementUnitRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).ArchiveValidIngredientMeasurementUnit(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_ArchiveValidIngredientMeasurementUnit_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).ArchiveValidIngredientMeasurementUnit(ctx, req.(*messages.ArchiveValidIngredientMeasurementUnitRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_ArchiveValidIngredientPreparation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.ArchiveValidIngredientPreparationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).ArchiveValidIngredientPreparation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_ArchiveValidIngredientPreparation_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).ArchiveValidIngredientPreparation(ctx, req.(*messages.ArchiveValidIngredientPreparationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_ArchiveValidIngredientState_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.ArchiveValidIngredientStateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).ArchiveValidIngredientState(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_ArchiveValidIngredientState_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).ArchiveValidIngredientState(ctx, req.(*messages.ArchiveValidIngredientStateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_ArchiveValidIngredientStateIngredient_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.ArchiveValidIngredientStateIngredientRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).ArchiveValidIngredientStateIngredient(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_ArchiveValidIngredientStateIngredient_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).ArchiveValidIngredientStateIngredient(ctx, req.(*messages.ArchiveValidIngredientStateIngredientRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_ArchiveValidInstrument_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.ArchiveValidInstrumentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).ArchiveValidInstrument(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_ArchiveValidInstrument_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).ArchiveValidInstrument(ctx, req.(*messages.ArchiveValidInstrumentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_ArchiveValidMeasurementUnit_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.ArchiveValidMeasurementUnitRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).ArchiveValidMeasurementUnit(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_ArchiveValidMeasurementUnit_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).ArchiveValidMeasurementUnit(ctx, req.(*messages.ArchiveValidMeasurementUnitRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_ArchiveValidMeasurementUnitConversion_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.ArchiveValidMeasurementUnitConversionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).ArchiveValidMeasurementUnitConversion(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_ArchiveValidMeasurementUnitConversion_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).ArchiveValidMeasurementUnitConversion(ctx, req.(*messages.ArchiveValidMeasurementUnitConversionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_ArchiveValidPreparation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.ArchiveValidPreparationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).ArchiveValidPreparation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_ArchiveValidPreparation_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).ArchiveValidPreparation(ctx, req.(*messages.ArchiveValidPreparationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_ArchiveValidPreparationInstrument_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.ArchiveValidPreparationInstrumentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).ArchiveValidPreparationInstrument(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_ArchiveValidPreparationInstrument_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).ArchiveValidPreparationInstrument(ctx, req.(*messages.ArchiveValidPreparationInstrumentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_ArchiveValidPreparationVessel_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.ArchiveValidPreparationVesselRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).ArchiveValidPreparationVessel(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_ArchiveValidPreparationVessel_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).ArchiveValidPreparationVessel(ctx, req.(*messages.ArchiveValidPreparationVesselRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_ArchiveValidVessel_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.ArchiveValidVesselRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).ArchiveValidVessel(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_ArchiveValidVessel_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).ArchiveValidVessel(ctx, req.(*messages.ArchiveValidVesselRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_CloneRecipe_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.CloneRecipeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).CloneRecipe(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_CloneRecipe_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).CloneRecipe(ctx, req.(*messages.CloneRecipeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_CreateMeal_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.CreateMealRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).CreateMeal(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_CreateMeal_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).CreateMeal(ctx, req.(*messages.CreateMealRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_CreateMealPlan_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.CreateMealPlanRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).CreateMealPlan(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_CreateMealPlan_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).CreateMealPlan(ctx, req.(*messages.CreateMealPlanRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_CreateMealPlanEvent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.CreateMealPlanEventRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).CreateMealPlanEvent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_CreateMealPlanEvent_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).CreateMealPlanEvent(ctx, req.(*messages.CreateMealPlanEventRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_CreateMealPlanGroceryListItem_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.CreateMealPlanGroceryListItemRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).CreateMealPlanGroceryListItem(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_CreateMealPlanGroceryListItem_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).CreateMealPlanGroceryListItem(ctx, req.(*messages.CreateMealPlanGroceryListItemRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_CreateMealPlanOption_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.CreateMealPlanOptionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).CreateMealPlanOption(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_CreateMealPlanOption_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).CreateMealPlanOption(ctx, req.(*messages.CreateMealPlanOptionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_CreateMealPlanOptionVote_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.CreateMealPlanOptionVoteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).CreateMealPlanOptionVote(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_CreateMealPlanOptionVote_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).CreateMealPlanOptionVote(ctx, req.(*messages.CreateMealPlanOptionVoteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_CreateMealPlanTask_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.CreateMealPlanTaskRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).CreateMealPlanTask(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_CreateMealPlanTask_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).CreateMealPlanTask(ctx, req.(*messages.CreateMealPlanTaskRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_CreateRecipe_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.CreateRecipeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).CreateRecipe(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_CreateRecipe_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).CreateRecipe(ctx, req.(*messages.CreateRecipeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_CreateRecipePrepTask_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.CreateRecipePrepTaskRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).CreateRecipePrepTask(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_CreateRecipePrepTask_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).CreateRecipePrepTask(ctx, req.(*messages.CreateRecipePrepTaskRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_CreateRecipeRating_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.CreateRecipeRatingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).CreateRecipeRating(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_CreateRecipeRating_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).CreateRecipeRating(ctx, req.(*messages.CreateRecipeRatingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_CreateRecipeStep_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.CreateRecipeStepRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).CreateRecipeStep(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_CreateRecipeStep_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).CreateRecipeStep(ctx, req.(*messages.CreateRecipeStepRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_CreateRecipeStepCompletionCondition_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.CreateRecipeStepCompletionConditionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).CreateRecipeStepCompletionCondition(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_CreateRecipeStepCompletionCondition_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).CreateRecipeStepCompletionCondition(ctx, req.(*messages.CreateRecipeStepCompletionConditionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_CreateRecipeStepIngredient_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.CreateRecipeStepIngredientRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).CreateRecipeStepIngredient(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_CreateRecipeStepIngredient_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).CreateRecipeStepIngredient(ctx, req.(*messages.CreateRecipeStepIngredientRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_CreateRecipeStepInstrument_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.CreateRecipeStepInstrumentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).CreateRecipeStepInstrument(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_CreateRecipeStepInstrument_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).CreateRecipeStepInstrument(ctx, req.(*messages.CreateRecipeStepInstrumentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_CreateRecipeStepProduct_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.CreateRecipeStepProductRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).CreateRecipeStepProduct(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_CreateRecipeStepProduct_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).CreateRecipeStepProduct(ctx, req.(*messages.CreateRecipeStepProductRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_CreateRecipeStepVessel_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.CreateRecipeStepVesselRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).CreateRecipeStepVessel(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_CreateRecipeStepVessel_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).CreateRecipeStepVessel(ctx, req.(*messages.CreateRecipeStepVesselRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_CreateValidIngredient_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.CreateValidIngredientRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).CreateValidIngredient(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_CreateValidIngredient_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).CreateValidIngredient(ctx, req.(*messages.CreateValidIngredientRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_CreateValidIngredientGroup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.CreateValidIngredientGroupRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).CreateValidIngredientGroup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_CreateValidIngredientGroup_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).CreateValidIngredientGroup(ctx, req.(*messages.CreateValidIngredientGroupRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_CreateValidIngredientMeasurementUnit_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.CreateValidIngredientMeasurementUnitRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).CreateValidIngredientMeasurementUnit(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_CreateValidIngredientMeasurementUnit_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).CreateValidIngredientMeasurementUnit(ctx, req.(*messages.CreateValidIngredientMeasurementUnitRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_CreateValidIngredientPreparation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.CreateValidIngredientPreparationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).CreateValidIngredientPreparation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_CreateValidIngredientPreparation_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).CreateValidIngredientPreparation(ctx, req.(*messages.CreateValidIngredientPreparationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_CreateValidIngredientState_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.CreateValidIngredientStateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).CreateValidIngredientState(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_CreateValidIngredientState_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).CreateValidIngredientState(ctx, req.(*messages.CreateValidIngredientStateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_CreateValidIngredientStateIngredient_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.CreateValidIngredientStateIngredientRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).CreateValidIngredientStateIngredient(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_CreateValidIngredientStateIngredient_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).CreateValidIngredientStateIngredient(ctx, req.(*messages.CreateValidIngredientStateIngredientRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_CreateValidInstrument_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.CreateValidInstrumentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).CreateValidInstrument(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_CreateValidInstrument_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).CreateValidInstrument(ctx, req.(*messages.CreateValidInstrumentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_CreateValidMeasurementUnit_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.CreateValidMeasurementUnitRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).CreateValidMeasurementUnit(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_CreateValidMeasurementUnit_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).CreateValidMeasurementUnit(ctx, req.(*messages.CreateValidMeasurementUnitRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_CreateValidMeasurementUnitConversion_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.CreateValidMeasurementUnitConversionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).CreateValidMeasurementUnitConversion(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_CreateValidMeasurementUnitConversion_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).CreateValidMeasurementUnitConversion(ctx, req.(*messages.CreateValidMeasurementUnitConversionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_CreateValidPreparation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.CreateValidPreparationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).CreateValidPreparation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_CreateValidPreparation_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).CreateValidPreparation(ctx, req.(*messages.CreateValidPreparationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_CreateValidPreparationInstrument_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.CreateValidPreparationInstrumentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).CreateValidPreparationInstrument(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_CreateValidPreparationInstrument_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).CreateValidPreparationInstrument(ctx, req.(*messages.CreateValidPreparationInstrumentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_CreateValidPreparationVessel_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.CreateValidPreparationVesselRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).CreateValidPreparationVessel(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_CreateValidPreparationVessel_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).CreateValidPreparationVessel(ctx, req.(*messages.CreateValidPreparationVesselRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_CreateValidVessel_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.CreateValidVesselRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).CreateValidVessel(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_CreateValidVessel_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).CreateValidVessel(ctx, req.(*messages.CreateValidVesselRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_FinalizeMealPlan_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.FinalizeMealPlanRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).FinalizeMealPlan(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_FinalizeMealPlan_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).FinalizeMealPlan(ctx, req.(*messages.FinalizeMealPlanRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_GetMeal_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.GetMealRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).GetMeal(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_GetMeal_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).GetMeal(ctx, req.(*messages.GetMealRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_GetMealPlan_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.GetMealPlanRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).GetMealPlan(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_GetMealPlan_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).GetMealPlan(ctx, req.(*messages.GetMealPlanRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_GetMealPlanEvent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.GetMealPlanEventRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).GetMealPlanEvent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_GetMealPlanEvent_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).GetMealPlanEvent(ctx, req.(*messages.GetMealPlanEventRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_GetMealPlanEvents_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.GetMealPlanEventsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).GetMealPlanEvents(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_GetMealPlanEvents_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).GetMealPlanEvents(ctx, req.(*messages.GetMealPlanEventsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_GetMealPlanGroceryListItem_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.GetMealPlanGroceryListItemRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).GetMealPlanGroceryListItem(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_GetMealPlanGroceryListItem_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).GetMealPlanGroceryListItem(ctx, req.(*messages.GetMealPlanGroceryListItemRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_GetMealPlanGroceryListItemsForMealPlan_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.GetMealPlanGroceryListItemsForMealPlanRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).GetMealPlanGroceryListItemsForMealPlan(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_GetMealPlanGroceryListItemsForMealPlan_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).GetMealPlanGroceryListItemsForMealPlan(ctx, req.(*messages.GetMealPlanGroceryListItemsForMealPlanRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_GetMealPlanOption_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.GetMealPlanOptionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).GetMealPlanOption(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_GetMealPlanOption_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).GetMealPlanOption(ctx, req.(*messages.GetMealPlanOptionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_GetMealPlanOptionVote_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.GetMealPlanOptionVoteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).GetMealPlanOptionVote(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_GetMealPlanOptionVote_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).GetMealPlanOptionVote(ctx, req.(*messages.GetMealPlanOptionVoteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_GetMealPlanOptionVotes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.GetMealPlanOptionVotesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).GetMealPlanOptionVotes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_GetMealPlanOptionVotes_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).GetMealPlanOptionVotes(ctx, req.(*messages.GetMealPlanOptionVotesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_GetMealPlanOptions_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.GetMealPlanOptionsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).GetMealPlanOptions(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_GetMealPlanOptions_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).GetMealPlanOptions(ctx, req.(*messages.GetMealPlanOptionsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_GetMealPlanTask_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.GetMealPlanTaskRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).GetMealPlanTask(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_GetMealPlanTask_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).GetMealPlanTask(ctx, req.(*messages.GetMealPlanTaskRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_GetMealPlanTasks_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.GetMealPlanTasksRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).GetMealPlanTasks(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_GetMealPlanTasks_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).GetMealPlanTasks(ctx, req.(*messages.GetMealPlanTasksRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_GetMealPlansForHousehold_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.GetMealPlansForHouseholdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).GetMealPlansForHousehold(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_GetMealPlansForHousehold_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).GetMealPlansForHousehold(ctx, req.(*messages.GetMealPlansForHouseholdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_GetMeals_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.GetMealsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).GetMeals(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_GetMeals_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).GetMeals(ctx, req.(*messages.GetMealsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_GetMermaidDiagramForRecipe_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.GetMermaidDiagramForRecipeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).GetMermaidDiagramForRecipe(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_GetMermaidDiagramForRecipe_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).GetMermaidDiagramForRecipe(ctx, req.(*messages.GetMermaidDiagramForRecipeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_GetRandomValidIngredient_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.GetRandomValidIngredientRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).GetRandomValidIngredient(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_GetRandomValidIngredient_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).GetRandomValidIngredient(ctx, req.(*messages.GetRandomValidIngredientRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_GetRandomValidInstrument_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.GetRandomValidInstrumentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).GetRandomValidInstrument(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_GetRandomValidInstrument_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).GetRandomValidInstrument(ctx, req.(*messages.GetRandomValidInstrumentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_GetRandomValidPreparation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.GetRandomValidPreparationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).GetRandomValidPreparation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_GetRandomValidPreparation_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).GetRandomValidPreparation(ctx, req.(*messages.GetRandomValidPreparationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_GetRandomValidVessel_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.GetRandomValidVesselRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).GetRandomValidVessel(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_GetRandomValidVessel_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).GetRandomValidVessel(ctx, req.(*messages.GetRandomValidVesselRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_GetRecipe_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.GetRecipeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).GetRecipe(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_GetRecipe_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).GetRecipe(ctx, req.(*messages.GetRecipeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_GetRecipeMealPlanTasks_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.GetRecipeMealPlanTasksRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).GetRecipeMealPlanTasks(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_GetRecipeMealPlanTasks_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).GetRecipeMealPlanTasks(ctx, req.(*messages.GetRecipeMealPlanTasksRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_GetRecipePrepTask_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.GetRecipePrepTaskRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).GetRecipePrepTask(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_GetRecipePrepTask_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).GetRecipePrepTask(ctx, req.(*messages.GetRecipePrepTaskRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_GetRecipePrepTasks_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.GetRecipePrepTasksRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).GetRecipePrepTasks(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_GetRecipePrepTasks_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).GetRecipePrepTasks(ctx, req.(*messages.GetRecipePrepTasksRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_GetRecipeRating_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.GetRecipeRatingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).GetRecipeRating(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_GetRecipeRating_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).GetRecipeRating(ctx, req.(*messages.GetRecipeRatingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_GetRecipeRatingsForRecipe_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.GetRecipeRatingsForRecipeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).GetRecipeRatingsForRecipe(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_GetRecipeRatingsForRecipe_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).GetRecipeRatingsForRecipe(ctx, req.(*messages.GetRecipeRatingsForRecipeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_GetRecipeStep_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.GetRecipeStepRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).GetRecipeStep(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_GetRecipeStep_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).GetRecipeStep(ctx, req.(*messages.GetRecipeStepRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_GetRecipeStepCompletionCondition_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.GetRecipeStepCompletionConditionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).GetRecipeStepCompletionCondition(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_GetRecipeStepCompletionCondition_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).GetRecipeStepCompletionCondition(ctx, req.(*messages.GetRecipeStepCompletionConditionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_GetRecipeStepCompletionConditions_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.GetRecipeStepCompletionConditionsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).GetRecipeStepCompletionConditions(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_GetRecipeStepCompletionConditions_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).GetRecipeStepCompletionConditions(ctx, req.(*messages.GetRecipeStepCompletionConditionsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_GetRecipeStepIngredient_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.GetRecipeStepIngredientRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).GetRecipeStepIngredient(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_GetRecipeStepIngredient_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).GetRecipeStepIngredient(ctx, req.(*messages.GetRecipeStepIngredientRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_GetRecipeStepIngredients_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.GetRecipeStepIngredientsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).GetRecipeStepIngredients(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_GetRecipeStepIngredients_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).GetRecipeStepIngredients(ctx, req.(*messages.GetRecipeStepIngredientsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_GetRecipeStepInstrument_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.GetRecipeStepInstrumentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).GetRecipeStepInstrument(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_GetRecipeStepInstrument_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).GetRecipeStepInstrument(ctx, req.(*messages.GetRecipeStepInstrumentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_GetRecipeStepInstruments_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.GetRecipeStepInstrumentsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).GetRecipeStepInstruments(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_GetRecipeStepInstruments_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).GetRecipeStepInstruments(ctx, req.(*messages.GetRecipeStepInstrumentsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_GetRecipeStepProduct_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.GetRecipeStepProductRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).GetRecipeStepProduct(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_GetRecipeStepProduct_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).GetRecipeStepProduct(ctx, req.(*messages.GetRecipeStepProductRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_GetRecipeStepProducts_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.GetRecipeStepProductsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).GetRecipeStepProducts(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_GetRecipeStepProducts_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).GetRecipeStepProducts(ctx, req.(*messages.GetRecipeStepProductsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_GetRecipeStepVessel_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.GetRecipeStepVesselRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).GetRecipeStepVessel(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_GetRecipeStepVessel_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).GetRecipeStepVessel(ctx, req.(*messages.GetRecipeStepVesselRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_GetRecipeStepVessels_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.GetRecipeStepVesselsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).GetRecipeStepVessels(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_GetRecipeStepVessels_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).GetRecipeStepVessels(ctx, req.(*messages.GetRecipeStepVesselsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_GetRecipeSteps_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.GetRecipeStepsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).GetRecipeSteps(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_GetRecipeSteps_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).GetRecipeSteps(ctx, req.(*messages.GetRecipeStepsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_GetRecipes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.GetRecipesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).GetRecipes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_GetRecipes_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).GetRecipes(ctx, req.(*messages.GetRecipesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_GetValidIngredient_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.GetValidIngredientRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).GetValidIngredient(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_GetValidIngredient_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).GetValidIngredient(ctx, req.(*messages.GetValidIngredientRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_GetValidIngredientGroup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.GetValidIngredientGroupRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).GetValidIngredientGroup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_GetValidIngredientGroup_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).GetValidIngredientGroup(ctx, req.(*messages.GetValidIngredientGroupRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_GetValidIngredientGroups_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.GetValidIngredientGroupsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).GetValidIngredientGroups(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_GetValidIngredientGroups_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).GetValidIngredientGroups(ctx, req.(*messages.GetValidIngredientGroupsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_GetValidIngredientMeasurementUnit_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.GetValidIngredientMeasurementUnitRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).GetValidIngredientMeasurementUnit(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_GetValidIngredientMeasurementUnit_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).GetValidIngredientMeasurementUnit(ctx, req.(*messages.GetValidIngredientMeasurementUnitRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_GetValidIngredientMeasurementUnits_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.GetValidIngredientMeasurementUnitsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).GetValidIngredientMeasurementUnits(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_GetValidIngredientMeasurementUnits_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).GetValidIngredientMeasurementUnits(ctx, req.(*messages.GetValidIngredientMeasurementUnitsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_GetValidIngredientMeasurementUnitsByIngredient_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.GetValidIngredientMeasurementUnitsByIngredientRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).GetValidIngredientMeasurementUnitsByIngredient(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_GetValidIngredientMeasurementUnitsByIngredient_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).GetValidIngredientMeasurementUnitsByIngredient(ctx, req.(*messages.GetValidIngredientMeasurementUnitsByIngredientRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_GetValidIngredientMeasurementUnitsByMeasurementUnit_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.GetValidIngredientMeasurementUnitsByMeasurementUnitRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).GetValidIngredientMeasurementUnitsByMeasurementUnit(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_GetValidIngredientMeasurementUnitsByMeasurementUnit_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).GetValidIngredientMeasurementUnitsByMeasurementUnit(ctx, req.(*messages.GetValidIngredientMeasurementUnitsByMeasurementUnitRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_GetValidIngredientPreparation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.GetValidIngredientPreparationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).GetValidIngredientPreparation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_GetValidIngredientPreparation_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).GetValidIngredientPreparation(ctx, req.(*messages.GetValidIngredientPreparationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_GetValidIngredientPreparations_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.GetValidIngredientPreparationsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).GetValidIngredientPreparations(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_GetValidIngredientPreparations_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).GetValidIngredientPreparations(ctx, req.(*messages.GetValidIngredientPreparationsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_GetValidIngredientPreparationsByIngredient_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.GetValidIngredientPreparationsByIngredientRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).GetValidIngredientPreparationsByIngredient(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_GetValidIngredientPreparationsByIngredient_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).GetValidIngredientPreparationsByIngredient(ctx, req.(*messages.GetValidIngredientPreparationsByIngredientRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_GetValidIngredientPreparationsByPreparation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.GetValidIngredientPreparationsByPreparationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).GetValidIngredientPreparationsByPreparation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_GetValidIngredientPreparationsByPreparation_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).GetValidIngredientPreparationsByPreparation(ctx, req.(*messages.GetValidIngredientPreparationsByPreparationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_GetValidIngredientState_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.GetValidIngredientStateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).GetValidIngredientState(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_GetValidIngredientState_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).GetValidIngredientState(ctx, req.(*messages.GetValidIngredientStateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_GetValidIngredientStateIngredient_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.GetValidIngredientStateIngredientRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).GetValidIngredientStateIngredient(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_GetValidIngredientStateIngredient_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).GetValidIngredientStateIngredient(ctx, req.(*messages.GetValidIngredientStateIngredientRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_GetValidIngredientStateIngredients_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.GetValidIngredientStateIngredientsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).GetValidIngredientStateIngredients(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_GetValidIngredientStateIngredients_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).GetValidIngredientStateIngredients(ctx, req.(*messages.GetValidIngredientStateIngredientsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_GetValidIngredientStateIngredientsByIngredient_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.GetValidIngredientStateIngredientsByIngredientRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).GetValidIngredientStateIngredientsByIngredient(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_GetValidIngredientStateIngredientsByIngredient_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).GetValidIngredientStateIngredientsByIngredient(ctx, req.(*messages.GetValidIngredientStateIngredientsByIngredientRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_GetValidIngredientStateIngredientsByIngredientState_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.GetValidIngredientStateIngredientsByIngredientStateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).GetValidIngredientStateIngredientsByIngredientState(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_GetValidIngredientStateIngredientsByIngredientState_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).GetValidIngredientStateIngredientsByIngredientState(ctx, req.(*messages.GetValidIngredientStateIngredientsByIngredientStateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_GetValidIngredientStates_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.GetValidIngredientStatesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).GetValidIngredientStates(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_GetValidIngredientStates_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).GetValidIngredientStates(ctx, req.(*messages.GetValidIngredientStatesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_GetValidIngredients_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.GetValidIngredientsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).GetValidIngredients(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_GetValidIngredients_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).GetValidIngredients(ctx, req.(*messages.GetValidIngredientsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_GetValidInstrument_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.GetValidInstrumentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).GetValidInstrument(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_GetValidInstrument_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).GetValidInstrument(ctx, req.(*messages.GetValidInstrumentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_GetValidInstruments_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.GetValidInstrumentsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).GetValidInstruments(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_GetValidInstruments_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).GetValidInstruments(ctx, req.(*messages.GetValidInstrumentsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_GetValidMeasurementUnit_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.GetValidMeasurementUnitRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).GetValidMeasurementUnit(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_GetValidMeasurementUnit_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).GetValidMeasurementUnit(ctx, req.(*messages.GetValidMeasurementUnitRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_GetValidMeasurementUnitConversion_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.GetValidMeasurementUnitConversionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).GetValidMeasurementUnitConversion(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_GetValidMeasurementUnitConversion_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).GetValidMeasurementUnitConversion(ctx, req.(*messages.GetValidMeasurementUnitConversionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_GetValidMeasurementUnitConversionsFromUnit_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.GetValidMeasurementUnitConversionsFromUnitRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).GetValidMeasurementUnitConversionsFromUnit(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_GetValidMeasurementUnitConversionsFromUnit_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).GetValidMeasurementUnitConversionsFromUnit(ctx, req.(*messages.GetValidMeasurementUnitConversionsFromUnitRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_GetValidMeasurementUnitConversionsToUnit_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.GetValidMeasurementUnitConversionsToUnitRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).GetValidMeasurementUnitConversionsToUnit(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_GetValidMeasurementUnitConversionsToUnit_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).GetValidMeasurementUnitConversionsToUnit(ctx, req.(*messages.GetValidMeasurementUnitConversionsToUnitRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_GetValidMeasurementUnits_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.GetValidMeasurementUnitsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).GetValidMeasurementUnits(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_GetValidMeasurementUnits_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).GetValidMeasurementUnits(ctx, req.(*messages.GetValidMeasurementUnitsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_GetValidPreparation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.GetValidPreparationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).GetValidPreparation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_GetValidPreparation_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).GetValidPreparation(ctx, req.(*messages.GetValidPreparationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_GetValidPreparationInstrument_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.GetValidPreparationInstrumentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).GetValidPreparationInstrument(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_GetValidPreparationInstrument_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).GetValidPreparationInstrument(ctx, req.(*messages.GetValidPreparationInstrumentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_GetValidPreparationInstruments_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.GetValidPreparationInstrumentsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).GetValidPreparationInstruments(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_GetValidPreparationInstruments_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).GetValidPreparationInstruments(ctx, req.(*messages.GetValidPreparationInstrumentsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_GetValidPreparationInstrumentsByInstrument_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.GetValidPreparationInstrumentsByInstrumentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).GetValidPreparationInstrumentsByInstrument(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_GetValidPreparationInstrumentsByInstrument_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).GetValidPreparationInstrumentsByInstrument(ctx, req.(*messages.GetValidPreparationInstrumentsByInstrumentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_GetValidPreparationInstrumentsByPreparation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.GetValidPreparationInstrumentsByPreparationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).GetValidPreparationInstrumentsByPreparation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_GetValidPreparationInstrumentsByPreparation_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).GetValidPreparationInstrumentsByPreparation(ctx, req.(*messages.GetValidPreparationInstrumentsByPreparationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_GetValidPreparationVessel_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.GetValidPreparationVesselRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).GetValidPreparationVessel(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_GetValidPreparationVessel_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).GetValidPreparationVessel(ctx, req.(*messages.GetValidPreparationVesselRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_GetValidPreparationVessels_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.GetValidPreparationVesselsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).GetValidPreparationVessels(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_GetValidPreparationVessels_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).GetValidPreparationVessels(ctx, req.(*messages.GetValidPreparationVesselsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_GetValidPreparationVesselsByPreparation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.GetValidPreparationVesselsByPreparationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).GetValidPreparationVesselsByPreparation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_GetValidPreparationVesselsByPreparation_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).GetValidPreparationVesselsByPreparation(ctx, req.(*messages.GetValidPreparationVesselsByPreparationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_GetValidPreparationVesselsByVessel_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.GetValidPreparationVesselsByVesselRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).GetValidPreparationVesselsByVessel(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_GetValidPreparationVesselsByVessel_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).GetValidPreparationVesselsByVessel(ctx, req.(*messages.GetValidPreparationVesselsByVesselRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_GetValidPreparations_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.GetValidPreparationsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).GetValidPreparations(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_GetValidPreparations_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).GetValidPreparations(ctx, req.(*messages.GetValidPreparationsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_GetValidVessel_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.GetValidVesselRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).GetValidVessel(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_GetValidVessel_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).GetValidVessel(ctx, req.(*messages.GetValidVesselRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_GetValidVessels_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.GetValidVesselsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).GetValidVessels(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_GetValidVessels_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).GetValidVessels(ctx, req.(*messages.GetValidVesselsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_RunFinalizeMealPlanWorker_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.RunFinalizeMealPlanWorkerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).RunFinalizeMealPlanWorker(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_RunFinalizeMealPlanWorker_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).RunFinalizeMealPlanWorker(ctx, req.(*messages.RunFinalizeMealPlanWorkerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_RunMealPlanGroceryListInitializerWorker_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.RunMealPlanGroceryListInitializerWorkerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).RunMealPlanGroceryListInitializerWorker(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_RunMealPlanGroceryListInitializerWorker_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).RunMealPlanGroceryListInitializerWorker(ctx, req.(*messages.RunMealPlanGroceryListInitializerWorkerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_RunMealPlanTaskCreatorWorker_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.RunMealPlanTaskCreatorWorkerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).RunMealPlanTaskCreatorWorker(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_RunMealPlanTaskCreatorWorker_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).RunMealPlanTaskCreatorWorker(ctx, req.(*messages.RunMealPlanTaskCreatorWorkerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_SearchForMeals_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.SearchForMealsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).SearchForMeals(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_SearchForMeals_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).SearchForMeals(ctx, req.(*messages.SearchForMealsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_SearchForRecipes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.SearchForRecipesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).SearchForRecipes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_SearchForRecipes_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).SearchForRecipes(ctx, req.(*messages.SearchForRecipesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_SearchForValidIngredientGroups_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.SearchForValidIngredientGroupsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).SearchForValidIngredientGroups(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_SearchForValidIngredientGroups_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).SearchForValidIngredientGroups(ctx, req.(*messages.SearchForValidIngredientGroupsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_SearchForValidIngredientStates_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.SearchForValidIngredientStatesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).SearchForValidIngredientStates(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_SearchForValidIngredientStates_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).SearchForValidIngredientStates(ctx, req.(*messages.SearchForValidIngredientStatesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_SearchForValidIngredients_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.SearchForValidIngredientsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).SearchForValidIngredients(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_SearchForValidIngredients_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).SearchForValidIngredients(ctx, req.(*messages.SearchForValidIngredientsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_SearchForValidInstruments_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.SearchForValidInstrumentsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).SearchForValidInstruments(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_SearchForValidInstruments_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).SearchForValidInstruments(ctx, req.(*messages.SearchForValidInstrumentsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_SearchForValidMeasurementUnits_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.SearchForValidMeasurementUnitsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).SearchForValidMeasurementUnits(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_SearchForValidMeasurementUnits_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).SearchForValidMeasurementUnits(ctx, req.(*messages.SearchForValidMeasurementUnitsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_SearchForValidPreparations_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.SearchForValidPreparationsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).SearchForValidPreparations(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_SearchForValidPreparations_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).SearchForValidPreparations(ctx, req.(*messages.SearchForValidPreparationsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_SearchForValidVessels_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.SearchForValidVesselsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).SearchForValidVessels(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_SearchForValidVessels_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).SearchForValidVessels(ctx, req.(*messages.SearchForValidVesselsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_SearchValidIngredientsByPreparation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.SearchValidIngredientsByPreparationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).SearchValidIngredientsByPreparation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_SearchValidIngredientsByPreparation_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).SearchValidIngredientsByPreparation(ctx, req.(*messages.SearchValidIngredientsByPreparationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_SearchValidMeasurementUnitsByIngredient_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.SearchValidMeasurementUnitsByIngredientRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).SearchValidMeasurementUnitsByIngredient(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_SearchValidMeasurementUnitsByIngredient_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).SearchValidMeasurementUnitsByIngredient(ctx, req.(*messages.SearchValidMeasurementUnitsByIngredientRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_UpdateMealPlan_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.UpdateMealPlanRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).UpdateMealPlan(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_UpdateMealPlan_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).UpdateMealPlan(ctx, req.(*messages.UpdateMealPlanRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_UpdateMealPlanEvent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.UpdateMealPlanEventRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).UpdateMealPlanEvent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_UpdateMealPlanEvent_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).UpdateMealPlanEvent(ctx, req.(*messages.UpdateMealPlanEventRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_UpdateMealPlanGroceryListItem_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.UpdateMealPlanGroceryListItemRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).UpdateMealPlanGroceryListItem(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_UpdateMealPlanGroceryListItem_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).UpdateMealPlanGroceryListItem(ctx, req.(*messages.UpdateMealPlanGroceryListItemRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_UpdateMealPlanOption_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.UpdateMealPlanOptionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).UpdateMealPlanOption(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_UpdateMealPlanOption_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).UpdateMealPlanOption(ctx, req.(*messages.UpdateMealPlanOptionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_UpdateMealPlanOptionVote_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.UpdateMealPlanOptionVoteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).UpdateMealPlanOptionVote(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_UpdateMealPlanOptionVote_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).UpdateMealPlanOptionVote(ctx, req.(*messages.UpdateMealPlanOptionVoteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_UpdateMealPlanTaskStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.UpdateMealPlanTaskStatusRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).UpdateMealPlanTaskStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_UpdateMealPlanTaskStatus_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).UpdateMealPlanTaskStatus(ctx, req.(*messages.UpdateMealPlanTaskStatusRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_UpdateRecipe_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.UpdateRecipeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).UpdateRecipe(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_UpdateRecipe_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).UpdateRecipe(ctx, req.(*messages.UpdateRecipeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_UpdateRecipePrepTask_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.UpdateRecipePrepTaskRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).UpdateRecipePrepTask(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_UpdateRecipePrepTask_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).UpdateRecipePrepTask(ctx, req.(*messages.UpdateRecipePrepTaskRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_UpdateRecipeRating_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.UpdateRecipeRatingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).UpdateRecipeRating(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_UpdateRecipeRating_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).UpdateRecipeRating(ctx, req.(*messages.UpdateRecipeRatingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_UpdateRecipeStep_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.UpdateRecipeStepRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).UpdateRecipeStep(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_UpdateRecipeStep_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).UpdateRecipeStep(ctx, req.(*messages.UpdateRecipeStepRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_UpdateRecipeStepCompletionCondition_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.UpdateRecipeStepCompletionConditionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).UpdateRecipeStepCompletionCondition(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_UpdateRecipeStepCompletionCondition_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).UpdateRecipeStepCompletionCondition(ctx, req.(*messages.UpdateRecipeStepCompletionConditionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_UpdateRecipeStepIngredient_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.UpdateRecipeStepIngredientRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).UpdateRecipeStepIngredient(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_UpdateRecipeStepIngredient_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).UpdateRecipeStepIngredient(ctx, req.(*messages.UpdateRecipeStepIngredientRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_UpdateRecipeStepInstrument_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.UpdateRecipeStepInstrumentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).UpdateRecipeStepInstrument(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_UpdateRecipeStepInstrument_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).UpdateRecipeStepInstrument(ctx, req.(*messages.UpdateRecipeStepInstrumentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_UpdateRecipeStepProduct_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.UpdateRecipeStepProductRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).UpdateRecipeStepProduct(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_UpdateRecipeStepProduct_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).UpdateRecipeStepProduct(ctx, req.(*messages.UpdateRecipeStepProductRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_UpdateRecipeStepVessel_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.UpdateRecipeStepVesselRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).UpdateRecipeStepVessel(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_UpdateRecipeStepVessel_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).UpdateRecipeStepVessel(ctx, req.(*messages.UpdateRecipeStepVesselRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_UpdateValidIngredient_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.UpdateValidIngredientRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).UpdateValidIngredient(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_UpdateValidIngredient_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).UpdateValidIngredient(ctx, req.(*messages.UpdateValidIngredientRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_UpdateValidIngredientGroup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.UpdateValidIngredientGroupRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).UpdateValidIngredientGroup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_UpdateValidIngredientGroup_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).UpdateValidIngredientGroup(ctx, req.(*messages.UpdateValidIngredientGroupRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_UpdateValidIngredientMeasurementUnit_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.UpdateValidIngredientMeasurementUnitRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).UpdateValidIngredientMeasurementUnit(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_UpdateValidIngredientMeasurementUnit_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).UpdateValidIngredientMeasurementUnit(ctx, req.(*messages.UpdateValidIngredientMeasurementUnitRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_UpdateValidIngredientPreparation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.UpdateValidIngredientPreparationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).UpdateValidIngredientPreparation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_UpdateValidIngredientPreparation_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).UpdateValidIngredientPreparation(ctx, req.(*messages.UpdateValidIngredientPreparationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_UpdateValidIngredientState_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.UpdateValidIngredientStateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).UpdateValidIngredientState(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_UpdateValidIngredientState_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).UpdateValidIngredientState(ctx, req.(*messages.UpdateValidIngredientStateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_UpdateValidIngredientStateIngredient_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.UpdateValidIngredientStateIngredientRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).UpdateValidIngredientStateIngredient(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_UpdateValidIngredientStateIngredient_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).UpdateValidIngredientStateIngredient(ctx, req.(*messages.UpdateValidIngredientStateIngredientRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_UpdateValidInstrument_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.UpdateValidInstrumentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).UpdateValidInstrument(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_UpdateValidInstrument_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).UpdateValidInstrument(ctx, req.(*messages.UpdateValidInstrumentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_UpdateValidMeasurementUnit_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.UpdateValidMeasurementUnitRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).UpdateValidMeasurementUnit(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_UpdateValidMeasurementUnit_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).UpdateValidMeasurementUnit(ctx, req.(*messages.UpdateValidMeasurementUnitRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_UpdateValidMeasurementUnitConversion_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.UpdateValidMeasurementUnitConversionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).UpdateValidMeasurementUnitConversion(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_UpdateValidMeasurementUnitConversion_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).UpdateValidMeasurementUnitConversion(ctx, req.(*messages.UpdateValidMeasurementUnitConversionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_UpdateValidPreparation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.UpdateValidPreparationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).UpdateValidPreparation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_UpdateValidPreparation_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).UpdateValidPreparation(ctx, req.(*messages.UpdateValidPreparationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_UpdateValidPreparationInstrument_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.UpdateValidPreparationInstrumentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).UpdateValidPreparationInstrument(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_UpdateValidPreparationInstrument_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).UpdateValidPreparationInstrument(ctx, req.(*messages.UpdateValidPreparationInstrumentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_UpdateValidPreparationVessel_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.UpdateValidPreparationVesselRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).UpdateValidPreparationVessel(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_UpdateValidPreparationVessel_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).UpdateValidPreparationVessel(ctx, req.(*messages.UpdateValidPreparationVesselRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_UpdateValidVessel_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.UpdateValidVesselRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).UpdateValidVessel(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_UpdateValidVessel_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).UpdateValidVessel(ctx, req.(*messages.UpdateValidVesselRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_ArchiveHouseholdInstrumentOwnership_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.ArchiveHouseholdInstrumentOwnershipRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).ArchiveHouseholdInstrumentOwnership(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_ArchiveHouseholdInstrumentOwnership_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).ArchiveHouseholdInstrumentOwnership(ctx, req.(*messages.ArchiveHouseholdInstrumentOwnershipRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_ArchiveUserIngredientPreference_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.ArchiveUserIngredientPreferenceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).ArchiveUserIngredientPreference(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_ArchiveUserIngredientPreference_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).ArchiveUserIngredientPreference(ctx, req.(*messages.ArchiveUserIngredientPreferenceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_CreateHouseholdInstrumentOwnership_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.CreateHouseholdInstrumentOwnershipRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).CreateHouseholdInstrumentOwnership(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_CreateHouseholdInstrumentOwnership_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).CreateHouseholdInstrumentOwnership(ctx, req.(*messages.CreateHouseholdInstrumentOwnershipRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_CreateUserIngredientPreference_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.CreateUserIngredientPreferenceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).CreateUserIngredientPreference(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_CreateUserIngredientPreference_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).CreateUserIngredientPreference(ctx, req.(*messages.CreateUserIngredientPreferenceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_GetHouseholdInstrumentOwnership_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.GetHouseholdInstrumentOwnershipRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).GetHouseholdInstrumentOwnership(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_GetHouseholdInstrumentOwnership_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).GetHouseholdInstrumentOwnership(ctx, req.(*messages.GetHouseholdInstrumentOwnershipRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_GetHouseholdInstrumentOwnerships_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.GetHouseholdInstrumentOwnershipsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).GetHouseholdInstrumentOwnerships(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_GetHouseholdInstrumentOwnerships_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).GetHouseholdInstrumentOwnerships(ctx, req.(*messages.GetHouseholdInstrumentOwnershipsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_GetUserIngredientPreferences_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.GetUserIngredientPreferencesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).GetUserIngredientPreferences(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_GetUserIngredientPreferences_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).GetUserIngredientPreferences(ctx, req.(*messages.GetUserIngredientPreferencesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_UpdateHouseholdInstrumentOwnership_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.UpdateHouseholdInstrumentOwnershipRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).UpdateHouseholdInstrumentOwnership(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_UpdateHouseholdInstrumentOwnership_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).UpdateHouseholdInstrumentOwnership(ctx, req.(*messages.UpdateHouseholdInstrumentOwnershipRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinnerDoneBetter_UpdateUserIngredientPreference_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(messages.UpdateUserIngredientPreferenceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).UpdateUserIngredientPreference(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DinnerDoneBetter_UpdateUserIngredientPreference_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).UpdateUserIngredientPreference(ctx, req.(*messages.UpdateUserIngredientPreferenceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// DinnerDoneBetter_ServiceDesc is the grpc.ServiceDesc for DinnerDoneBetter service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var DinnerDoneBetter_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "eating.DinnerDoneBetter",
	HandlerType: (*DinnerDoneBetterServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Ping",
			Handler:    _DinnerDoneBetter_Ping_Handler,
		},
		{
			MethodName: "ExchangeToken",
			Handler:    _DinnerDoneBetter_ExchangeToken_Handler,
		},
		{
			MethodName: "AcceptHouseholdInvitation",
			Handler:    _DinnerDoneBetter_AcceptHouseholdInvitation_Handler,
		},
		{
			MethodName: "AdminLoginForToken",
			Handler:    _DinnerDoneBetter_AdminLoginForToken_Handler,
		},
		{
			MethodName: "AdminUpdateUserStatus",
			Handler:    _DinnerDoneBetter_AdminUpdateUserStatus_Handler,
		},
		{
			MethodName: "AggregateUserDataReport",
			Handler:    _DinnerDoneBetter_AggregateUserDataReport_Handler,
		},
		{
			MethodName: "ArchiveHousehold",
			Handler:    _DinnerDoneBetter_ArchiveHousehold_Handler,
		},
		{
			MethodName: "ArchiveOAuth2Client",
			Handler:    _DinnerDoneBetter_ArchiveOAuth2Client_Handler,
		},
		{
			MethodName: "ArchiveServiceSetting",
			Handler:    _DinnerDoneBetter_ArchiveServiceSetting_Handler,
		},
		{
			MethodName: "ArchiveServiceSettingConfiguration",
			Handler:    _DinnerDoneBetter_ArchiveServiceSettingConfiguration_Handler,
		},
		{
			MethodName: "ArchiveUser",
			Handler:    _DinnerDoneBetter_ArchiveUser_Handler,
		},
		{
			MethodName: "ArchiveUserMembership",
			Handler:    _DinnerDoneBetter_ArchiveUserMembership_Handler,
		},
		{
			MethodName: "ArchiveWebhook",
			Handler:    _DinnerDoneBetter_ArchiveWebhook_Handler,
		},
		{
			MethodName: "ArchiveWebhookTriggerEvent",
			Handler:    _DinnerDoneBetter_ArchiveWebhookTriggerEvent_Handler,
		},
		{
			MethodName: "CancelHouseholdInvitation",
			Handler:    _DinnerDoneBetter_CancelHouseholdInvitation_Handler,
		},
		{
			MethodName: "CheckPermissions",
			Handler:    _DinnerDoneBetter_CheckPermissions_Handler,
		},
		{
			MethodName: "CreateHousehold",
			Handler:    _DinnerDoneBetter_CreateHousehold_Handler,
		},
		{
			MethodName: "CreateHouseholdInvitation",
			Handler:    _DinnerDoneBetter_CreateHouseholdInvitation_Handler,
		},
		{
			MethodName: "CreateOAuth2Client",
			Handler:    _DinnerDoneBetter_CreateOAuth2Client_Handler,
		},
		{
			MethodName: "CreateServiceSetting",
			Handler:    _DinnerDoneBetter_CreateServiceSetting_Handler,
		},
		{
			MethodName: "CreateServiceSettingConfiguration",
			Handler:    _DinnerDoneBetter_CreateServiceSettingConfiguration_Handler,
		},
		{
			MethodName: "CreateUser",
			Handler:    _DinnerDoneBetter_CreateUser_Handler,
		},
		{
			MethodName: "CreateUserNotification",
			Handler:    _DinnerDoneBetter_CreateUserNotification_Handler,
		},
		{
			MethodName: "CreateWebhook",
			Handler:    _DinnerDoneBetter_CreateWebhook_Handler,
		},
		{
			MethodName: "CreateWebhookTriggerEvent",
			Handler:    _DinnerDoneBetter_CreateWebhookTriggerEvent_Handler,
		},
		{
			MethodName: "DestroyAllUserData",
			Handler:    _DinnerDoneBetter_DestroyAllUserData_Handler,
		},
		{
			MethodName: "FetchUserDataReport",
			Handler:    _DinnerDoneBetter_FetchUserDataReport_Handler,
		},
		{
			MethodName: "GetActiveHousehold",
			Handler:    _DinnerDoneBetter_GetActiveHousehold_Handler,
		},
		{
			MethodName: "GetAuditLogEntriesForHousehold",
			Handler:    _DinnerDoneBetter_GetAuditLogEntriesForHousehold_Handler,
		},
		{
			MethodName: "GetAuditLogEntriesForUser",
			Handler:    _DinnerDoneBetter_GetAuditLogEntriesForUser_Handler,
		},
		{
			MethodName: "GetAuditLogEntryByID",
			Handler:    _DinnerDoneBetter_GetAuditLogEntryByID_Handler,
		},
		{
			MethodName: "GetAuthStatus",
			Handler:    _DinnerDoneBetter_GetAuthStatus_Handler,
		},
		{
			MethodName: "GetHousehold",
			Handler:    _DinnerDoneBetter_GetHousehold_Handler,
		},
		{
			MethodName: "GetHouseholdInvitation",
			Handler:    _DinnerDoneBetter_GetHouseholdInvitation_Handler,
		},
		{
			MethodName: "GetHouseholdInvitationByID",
			Handler:    _DinnerDoneBetter_GetHouseholdInvitationByID_Handler,
		},
		{
			MethodName: "GetHouseholds",
			Handler:    _DinnerDoneBetter_GetHouseholds_Handler,
		},
		{
			MethodName: "GetOAuth2Client",
			Handler:    _DinnerDoneBetter_GetOAuth2Client_Handler,
		},
		{
			MethodName: "GetOAuth2Clients",
			Handler:    _DinnerDoneBetter_GetOAuth2Clients_Handler,
		},
		{
			MethodName: "GetReceivedHouseholdInvitations",
			Handler:    _DinnerDoneBetter_GetReceivedHouseholdInvitations_Handler,
		},
		{
			MethodName: "GetSelf",
			Handler:    _DinnerDoneBetter_GetSelf_Handler,
		},
		{
			MethodName: "GetSentHouseholdInvitations",
			Handler:    _DinnerDoneBetter_GetSentHouseholdInvitations_Handler,
		},
		{
			MethodName: "GetServiceSetting",
			Handler:    _DinnerDoneBetter_GetServiceSetting_Handler,
		},
		{
			MethodName: "GetServiceSettingConfigurationByName",
			Handler:    _DinnerDoneBetter_GetServiceSettingConfigurationByName_Handler,
		},
		{
			MethodName: "GetServiceSettingConfigurationsForHousehold",
			Handler:    _DinnerDoneBetter_GetServiceSettingConfigurationsForHousehold_Handler,
		},
		{
			MethodName: "GetServiceSettingConfigurationsForUser",
			Handler:    _DinnerDoneBetter_GetServiceSettingConfigurationsForUser_Handler,
		},
		{
			MethodName: "GetServiceSettings",
			Handler:    _DinnerDoneBetter_GetServiceSettings_Handler,
		},
		{
			MethodName: "GetUser",
			Handler:    _DinnerDoneBetter_GetUser_Handler,
		},
		{
			MethodName: "GetUserNotification",
			Handler:    _DinnerDoneBetter_GetUserNotification_Handler,
		},
		{
			MethodName: "GetUserNotifications",
			Handler:    _DinnerDoneBetter_GetUserNotifications_Handler,
		},
		{
			MethodName: "GetUsers",
			Handler:    _DinnerDoneBetter_GetUsers_Handler,
		},
		{
			MethodName: "GetWebhook",
			Handler:    _DinnerDoneBetter_GetWebhook_Handler,
		},
		{
			MethodName: "GetWebhooks",
			Handler:    _DinnerDoneBetter_GetWebhooks_Handler,
		},
		{
			MethodName: "LoginForToken",
			Handler:    _DinnerDoneBetter_LoginForToken_Handler,
		},
		{
			MethodName: "PublishArbitraryQueueMessage",
			Handler:    _DinnerDoneBetter_PublishArbitraryQueueMessage_Handler,
		},
		{
			MethodName: "RedeemPasswordResetToken",
			Handler:    _DinnerDoneBetter_RedeemPasswordResetToken_Handler,
		},
		{
			MethodName: "RefreshTOTPSecret",
			Handler:    _DinnerDoneBetter_RefreshTOTPSecret_Handler,
		},
		{
			MethodName: "RejectHouseholdInvitation",
			Handler:    _DinnerDoneBetter_RejectHouseholdInvitation_Handler,
		},
		{
			MethodName: "RequestEmailVerificationEmail",
			Handler:    _DinnerDoneBetter_RequestEmailVerificationEmail_Handler,
		},
		{
			MethodName: "RequestPasswordResetToken",
			Handler:    _DinnerDoneBetter_RequestPasswordResetToken_Handler,
		},
		{
			MethodName: "RequestUsernameReminder",
			Handler:    _DinnerDoneBetter_RequestUsernameReminder_Handler,
		},
		{
			MethodName: "SearchForServiceSettings",
			Handler:    _DinnerDoneBetter_SearchForServiceSettings_Handler,
		},
		{
			MethodName: "SearchForUsers",
			Handler:    _DinnerDoneBetter_SearchForUsers_Handler,
		},
		{
			MethodName: "SetDefaultHousehold",
			Handler:    _DinnerDoneBetter_SetDefaultHousehold_Handler,
		},
		{
			MethodName: "TransferHouseholdOwnership",
			Handler:    _DinnerDoneBetter_TransferHouseholdOwnership_Handler,
		},
		{
			MethodName: "UpdateHousehold",
			Handler:    _DinnerDoneBetter_UpdateHousehold_Handler,
		},
		{
			MethodName: "UpdateHouseholdMemberPermissions",
			Handler:    _DinnerDoneBetter_UpdateHouseholdMemberPermissions_Handler,
		},
		{
			MethodName: "UpdatePassword",
			Handler:    _DinnerDoneBetter_UpdatePassword_Handler,
		},
		{
			MethodName: "UpdateServiceSettingConfiguration",
			Handler:    _DinnerDoneBetter_UpdateServiceSettingConfiguration_Handler,
		},
		{
			MethodName: "UpdateUserDetails",
			Handler:    _DinnerDoneBetter_UpdateUserDetails_Handler,
		},
		{
			MethodName: "UpdateUserEmailAddress",
			Handler:    _DinnerDoneBetter_UpdateUserEmailAddress_Handler,
		},
		{
			MethodName: "UpdateUserNotification",
			Handler:    _DinnerDoneBetter_UpdateUserNotification_Handler,
		},
		{
			MethodName: "UpdateUserUsername",
			Handler:    _DinnerDoneBetter_UpdateUserUsername_Handler,
		},
		{
			MethodName: "UploadUserAvatar",
			Handler:    _DinnerDoneBetter_UploadUserAvatar_Handler,
		},
		{
			MethodName: "VerifyEmailAddress",
			Handler:    _DinnerDoneBetter_VerifyEmailAddress_Handler,
		},
		{
			MethodName: "VerifyTOTPSecret",
			Handler:    _DinnerDoneBetter_VerifyTOTPSecret_Handler,
		},
		{
			MethodName: "ArchiveMeal",
			Handler:    _DinnerDoneBetter_ArchiveMeal_Handler,
		},
		{
			MethodName: "ArchiveMealPlan",
			Handler:    _DinnerDoneBetter_ArchiveMealPlan_Handler,
		},
		{
			MethodName: "ArchiveMealPlanEvent",
			Handler:    _DinnerDoneBetter_ArchiveMealPlanEvent_Handler,
		},
		{
			MethodName: "ArchiveMealPlanGroceryListItem",
			Handler:    _DinnerDoneBetter_ArchiveMealPlanGroceryListItem_Handler,
		},
		{
			MethodName: "ArchiveMealPlanOption",
			Handler:    _DinnerDoneBetter_ArchiveMealPlanOption_Handler,
		},
		{
			MethodName: "ArchiveMealPlanOptionVote",
			Handler:    _DinnerDoneBetter_ArchiveMealPlanOptionVote_Handler,
		},
		{
			MethodName: "ArchiveRecipe",
			Handler:    _DinnerDoneBetter_ArchiveRecipe_Handler,
		},
		{
			MethodName: "ArchiveRecipePrepTask",
			Handler:    _DinnerDoneBetter_ArchiveRecipePrepTask_Handler,
		},
		{
			MethodName: "ArchiveRecipeRating",
			Handler:    _DinnerDoneBetter_ArchiveRecipeRating_Handler,
		},
		{
			MethodName: "ArchiveRecipeStep",
			Handler:    _DinnerDoneBetter_ArchiveRecipeStep_Handler,
		},
		{
			MethodName: "ArchiveRecipeStepCompletionCondition",
			Handler:    _DinnerDoneBetter_ArchiveRecipeStepCompletionCondition_Handler,
		},
		{
			MethodName: "ArchiveRecipeStepIngredient",
			Handler:    _DinnerDoneBetter_ArchiveRecipeStepIngredient_Handler,
		},
		{
			MethodName: "ArchiveRecipeStepInstrument",
			Handler:    _DinnerDoneBetter_ArchiveRecipeStepInstrument_Handler,
		},
		{
			MethodName: "ArchiveRecipeStepProduct",
			Handler:    _DinnerDoneBetter_ArchiveRecipeStepProduct_Handler,
		},
		{
			MethodName: "ArchiveRecipeStepVessel",
			Handler:    _DinnerDoneBetter_ArchiveRecipeStepVessel_Handler,
		},
		{
			MethodName: "ArchiveValidIngredient",
			Handler:    _DinnerDoneBetter_ArchiveValidIngredient_Handler,
		},
		{
			MethodName: "ArchiveValidIngredientGroup",
			Handler:    _DinnerDoneBetter_ArchiveValidIngredientGroup_Handler,
		},
		{
			MethodName: "ArchiveValidIngredientMeasurementUnit",
			Handler:    _DinnerDoneBetter_ArchiveValidIngredientMeasurementUnit_Handler,
		},
		{
			MethodName: "ArchiveValidIngredientPreparation",
			Handler:    _DinnerDoneBetter_ArchiveValidIngredientPreparation_Handler,
		},
		{
			MethodName: "ArchiveValidIngredientState",
			Handler:    _DinnerDoneBetter_ArchiveValidIngredientState_Handler,
		},
		{
			MethodName: "ArchiveValidIngredientStateIngredient",
			Handler:    _DinnerDoneBetter_ArchiveValidIngredientStateIngredient_Handler,
		},
		{
			MethodName: "ArchiveValidInstrument",
			Handler:    _DinnerDoneBetter_ArchiveValidInstrument_Handler,
		},
		{
			MethodName: "ArchiveValidMeasurementUnit",
			Handler:    _DinnerDoneBetter_ArchiveValidMeasurementUnit_Handler,
		},
		{
			MethodName: "ArchiveValidMeasurementUnitConversion",
			Handler:    _DinnerDoneBetter_ArchiveValidMeasurementUnitConversion_Handler,
		},
		{
			MethodName: "ArchiveValidPreparation",
			Handler:    _DinnerDoneBetter_ArchiveValidPreparation_Handler,
		},
		{
			MethodName: "ArchiveValidPreparationInstrument",
			Handler:    _DinnerDoneBetter_ArchiveValidPreparationInstrument_Handler,
		},
		{
			MethodName: "ArchiveValidPreparationVessel",
			Handler:    _DinnerDoneBetter_ArchiveValidPreparationVessel_Handler,
		},
		{
			MethodName: "ArchiveValidVessel",
			Handler:    _DinnerDoneBetter_ArchiveValidVessel_Handler,
		},
		{
			MethodName: "CloneRecipe",
			Handler:    _DinnerDoneBetter_CloneRecipe_Handler,
		},
		{
			MethodName: "CreateMeal",
			Handler:    _DinnerDoneBetter_CreateMeal_Handler,
		},
		{
			MethodName: "CreateMealPlan",
			Handler:    _DinnerDoneBetter_CreateMealPlan_Handler,
		},
		{
			MethodName: "CreateMealPlanEvent",
			Handler:    _DinnerDoneBetter_CreateMealPlanEvent_Handler,
		},
		{
			MethodName: "CreateMealPlanGroceryListItem",
			Handler:    _DinnerDoneBetter_CreateMealPlanGroceryListItem_Handler,
		},
		{
			MethodName: "CreateMealPlanOption",
			Handler:    _DinnerDoneBetter_CreateMealPlanOption_Handler,
		},
		{
			MethodName: "CreateMealPlanOptionVote",
			Handler:    _DinnerDoneBetter_CreateMealPlanOptionVote_Handler,
		},
		{
			MethodName: "CreateMealPlanTask",
			Handler:    _DinnerDoneBetter_CreateMealPlanTask_Handler,
		},
		{
			MethodName: "CreateRecipe",
			Handler:    _DinnerDoneBetter_CreateRecipe_Handler,
		},
		{
			MethodName: "CreateRecipePrepTask",
			Handler:    _DinnerDoneBetter_CreateRecipePrepTask_Handler,
		},
		{
			MethodName: "CreateRecipeRating",
			Handler:    _DinnerDoneBetter_CreateRecipeRating_Handler,
		},
		{
			MethodName: "CreateRecipeStep",
			Handler:    _DinnerDoneBetter_CreateRecipeStep_Handler,
		},
		{
			MethodName: "CreateRecipeStepCompletionCondition",
			Handler:    _DinnerDoneBetter_CreateRecipeStepCompletionCondition_Handler,
		},
		{
			MethodName: "CreateRecipeStepIngredient",
			Handler:    _DinnerDoneBetter_CreateRecipeStepIngredient_Handler,
		},
		{
			MethodName: "CreateRecipeStepInstrument",
			Handler:    _DinnerDoneBetter_CreateRecipeStepInstrument_Handler,
		},
		{
			MethodName: "CreateRecipeStepProduct",
			Handler:    _DinnerDoneBetter_CreateRecipeStepProduct_Handler,
		},
		{
			MethodName: "CreateRecipeStepVessel",
			Handler:    _DinnerDoneBetter_CreateRecipeStepVessel_Handler,
		},
		{
			MethodName: "CreateValidIngredient",
			Handler:    _DinnerDoneBetter_CreateValidIngredient_Handler,
		},
		{
			MethodName: "CreateValidIngredientGroup",
			Handler:    _DinnerDoneBetter_CreateValidIngredientGroup_Handler,
		},
		{
			MethodName: "CreateValidIngredientMeasurementUnit",
			Handler:    _DinnerDoneBetter_CreateValidIngredientMeasurementUnit_Handler,
		},
		{
			MethodName: "CreateValidIngredientPreparation",
			Handler:    _DinnerDoneBetter_CreateValidIngredientPreparation_Handler,
		},
		{
			MethodName: "CreateValidIngredientState",
			Handler:    _DinnerDoneBetter_CreateValidIngredientState_Handler,
		},
		{
			MethodName: "CreateValidIngredientStateIngredient",
			Handler:    _DinnerDoneBetter_CreateValidIngredientStateIngredient_Handler,
		},
		{
			MethodName: "CreateValidInstrument",
			Handler:    _DinnerDoneBetter_CreateValidInstrument_Handler,
		},
		{
			MethodName: "CreateValidMeasurementUnit",
			Handler:    _DinnerDoneBetter_CreateValidMeasurementUnit_Handler,
		},
		{
			MethodName: "CreateValidMeasurementUnitConversion",
			Handler:    _DinnerDoneBetter_CreateValidMeasurementUnitConversion_Handler,
		},
		{
			MethodName: "CreateValidPreparation",
			Handler:    _DinnerDoneBetter_CreateValidPreparation_Handler,
		},
		{
			MethodName: "CreateValidPreparationInstrument",
			Handler:    _DinnerDoneBetter_CreateValidPreparationInstrument_Handler,
		},
		{
			MethodName: "CreateValidPreparationVessel",
			Handler:    _DinnerDoneBetter_CreateValidPreparationVessel_Handler,
		},
		{
			MethodName: "CreateValidVessel",
			Handler:    _DinnerDoneBetter_CreateValidVessel_Handler,
		},
		{
			MethodName: "FinalizeMealPlan",
			Handler:    _DinnerDoneBetter_FinalizeMealPlan_Handler,
		},
		{
			MethodName: "GetMeal",
			Handler:    _DinnerDoneBetter_GetMeal_Handler,
		},
		{
			MethodName: "GetMealPlan",
			Handler:    _DinnerDoneBetter_GetMealPlan_Handler,
		},
		{
			MethodName: "GetMealPlanEvent",
			Handler:    _DinnerDoneBetter_GetMealPlanEvent_Handler,
		},
		{
			MethodName: "GetMealPlanEvents",
			Handler:    _DinnerDoneBetter_GetMealPlanEvents_Handler,
		},
		{
			MethodName: "GetMealPlanGroceryListItem",
			Handler:    _DinnerDoneBetter_GetMealPlanGroceryListItem_Handler,
		},
		{
			MethodName: "GetMealPlanGroceryListItemsForMealPlan",
			Handler:    _DinnerDoneBetter_GetMealPlanGroceryListItemsForMealPlan_Handler,
		},
		{
			MethodName: "GetMealPlanOption",
			Handler:    _DinnerDoneBetter_GetMealPlanOption_Handler,
		},
		{
			MethodName: "GetMealPlanOptionVote",
			Handler:    _DinnerDoneBetter_GetMealPlanOptionVote_Handler,
		},
		{
			MethodName: "GetMealPlanOptionVotes",
			Handler:    _DinnerDoneBetter_GetMealPlanOptionVotes_Handler,
		},
		{
			MethodName: "GetMealPlanOptions",
			Handler:    _DinnerDoneBetter_GetMealPlanOptions_Handler,
		},
		{
			MethodName: "GetMealPlanTask",
			Handler:    _DinnerDoneBetter_GetMealPlanTask_Handler,
		},
		{
			MethodName: "GetMealPlanTasks",
			Handler:    _DinnerDoneBetter_GetMealPlanTasks_Handler,
		},
		{
			MethodName: "GetMealPlansForHousehold",
			Handler:    _DinnerDoneBetter_GetMealPlansForHousehold_Handler,
		},
		{
			MethodName: "GetMeals",
			Handler:    _DinnerDoneBetter_GetMeals_Handler,
		},
		{
			MethodName: "GetMermaidDiagramForRecipe",
			Handler:    _DinnerDoneBetter_GetMermaidDiagramForRecipe_Handler,
		},
		{
			MethodName: "GetRandomValidIngredient",
			Handler:    _DinnerDoneBetter_GetRandomValidIngredient_Handler,
		},
		{
			MethodName: "GetRandomValidInstrument",
			Handler:    _DinnerDoneBetter_GetRandomValidInstrument_Handler,
		},
		{
			MethodName: "GetRandomValidPreparation",
			Handler:    _DinnerDoneBetter_GetRandomValidPreparation_Handler,
		},
		{
			MethodName: "GetRandomValidVessel",
			Handler:    _DinnerDoneBetter_GetRandomValidVessel_Handler,
		},
		{
			MethodName: "GetRecipe",
			Handler:    _DinnerDoneBetter_GetRecipe_Handler,
		},
		{
			MethodName: "GetRecipeMealPlanTasks",
			Handler:    _DinnerDoneBetter_GetRecipeMealPlanTasks_Handler,
		},
		{
			MethodName: "GetRecipePrepTask",
			Handler:    _DinnerDoneBetter_GetRecipePrepTask_Handler,
		},
		{
			MethodName: "GetRecipePrepTasks",
			Handler:    _DinnerDoneBetter_GetRecipePrepTasks_Handler,
		},
		{
			MethodName: "GetRecipeRating",
			Handler:    _DinnerDoneBetter_GetRecipeRating_Handler,
		},
		{
			MethodName: "GetRecipeRatingsForRecipe",
			Handler:    _DinnerDoneBetter_GetRecipeRatingsForRecipe_Handler,
		},
		{
			MethodName: "GetRecipeStep",
			Handler:    _DinnerDoneBetter_GetRecipeStep_Handler,
		},
		{
			MethodName: "GetRecipeStepCompletionCondition",
			Handler:    _DinnerDoneBetter_GetRecipeStepCompletionCondition_Handler,
		},
		{
			MethodName: "GetRecipeStepCompletionConditions",
			Handler:    _DinnerDoneBetter_GetRecipeStepCompletionConditions_Handler,
		},
		{
			MethodName: "GetRecipeStepIngredient",
			Handler:    _DinnerDoneBetter_GetRecipeStepIngredient_Handler,
		},
		{
			MethodName: "GetRecipeStepIngredients",
			Handler:    _DinnerDoneBetter_GetRecipeStepIngredients_Handler,
		},
		{
			MethodName: "GetRecipeStepInstrument",
			Handler:    _DinnerDoneBetter_GetRecipeStepInstrument_Handler,
		},
		{
			MethodName: "GetRecipeStepInstruments",
			Handler:    _DinnerDoneBetter_GetRecipeStepInstruments_Handler,
		},
		{
			MethodName: "GetRecipeStepProduct",
			Handler:    _DinnerDoneBetter_GetRecipeStepProduct_Handler,
		},
		{
			MethodName: "GetRecipeStepProducts",
			Handler:    _DinnerDoneBetter_GetRecipeStepProducts_Handler,
		},
		{
			MethodName: "GetRecipeStepVessel",
			Handler:    _DinnerDoneBetter_GetRecipeStepVessel_Handler,
		},
		{
			MethodName: "GetRecipeStepVessels",
			Handler:    _DinnerDoneBetter_GetRecipeStepVessels_Handler,
		},
		{
			MethodName: "GetRecipeSteps",
			Handler:    _DinnerDoneBetter_GetRecipeSteps_Handler,
		},
		{
			MethodName: "GetRecipes",
			Handler:    _DinnerDoneBetter_GetRecipes_Handler,
		},
		{
			MethodName: "GetValidIngredient",
			Handler:    _DinnerDoneBetter_GetValidIngredient_Handler,
		},
		{
			MethodName: "GetValidIngredientGroup",
			Handler:    _DinnerDoneBetter_GetValidIngredientGroup_Handler,
		},
		{
			MethodName: "GetValidIngredientGroups",
			Handler:    _DinnerDoneBetter_GetValidIngredientGroups_Handler,
		},
		{
			MethodName: "GetValidIngredientMeasurementUnit",
			Handler:    _DinnerDoneBetter_GetValidIngredientMeasurementUnit_Handler,
		},
		{
			MethodName: "GetValidIngredientMeasurementUnits",
			Handler:    _DinnerDoneBetter_GetValidIngredientMeasurementUnits_Handler,
		},
		{
			MethodName: "GetValidIngredientMeasurementUnitsByIngredient",
			Handler:    _DinnerDoneBetter_GetValidIngredientMeasurementUnitsByIngredient_Handler,
		},
		{
			MethodName: "GetValidIngredientMeasurementUnitsByMeasurementUnit",
			Handler:    _DinnerDoneBetter_GetValidIngredientMeasurementUnitsByMeasurementUnit_Handler,
		},
		{
			MethodName: "GetValidIngredientPreparation",
			Handler:    _DinnerDoneBetter_GetValidIngredientPreparation_Handler,
		},
		{
			MethodName: "GetValidIngredientPreparations",
			Handler:    _DinnerDoneBetter_GetValidIngredientPreparations_Handler,
		},
		{
			MethodName: "GetValidIngredientPreparationsByIngredient",
			Handler:    _DinnerDoneBetter_GetValidIngredientPreparationsByIngredient_Handler,
		},
		{
			MethodName: "GetValidIngredientPreparationsByPreparation",
			Handler:    _DinnerDoneBetter_GetValidIngredientPreparationsByPreparation_Handler,
		},
		{
			MethodName: "GetValidIngredientState",
			Handler:    _DinnerDoneBetter_GetValidIngredientState_Handler,
		},
		{
			MethodName: "GetValidIngredientStateIngredient",
			Handler:    _DinnerDoneBetter_GetValidIngredientStateIngredient_Handler,
		},
		{
			MethodName: "GetValidIngredientStateIngredients",
			Handler:    _DinnerDoneBetter_GetValidIngredientStateIngredients_Handler,
		},
		{
			MethodName: "GetValidIngredientStateIngredientsByIngredient",
			Handler:    _DinnerDoneBetter_GetValidIngredientStateIngredientsByIngredient_Handler,
		},
		{
			MethodName: "GetValidIngredientStateIngredientsByIngredientState",
			Handler:    _DinnerDoneBetter_GetValidIngredientStateIngredientsByIngredientState_Handler,
		},
		{
			MethodName: "GetValidIngredientStates",
			Handler:    _DinnerDoneBetter_GetValidIngredientStates_Handler,
		},
		{
			MethodName: "GetValidIngredients",
			Handler:    _DinnerDoneBetter_GetValidIngredients_Handler,
		},
		{
			MethodName: "GetValidInstrument",
			Handler:    _DinnerDoneBetter_GetValidInstrument_Handler,
		},
		{
			MethodName: "GetValidInstruments",
			Handler:    _DinnerDoneBetter_GetValidInstruments_Handler,
		},
		{
			MethodName: "GetValidMeasurementUnit",
			Handler:    _DinnerDoneBetter_GetValidMeasurementUnit_Handler,
		},
		{
			MethodName: "GetValidMeasurementUnitConversion",
			Handler:    _DinnerDoneBetter_GetValidMeasurementUnitConversion_Handler,
		},
		{
			MethodName: "GetValidMeasurementUnitConversionsFromUnit",
			Handler:    _DinnerDoneBetter_GetValidMeasurementUnitConversionsFromUnit_Handler,
		},
		{
			MethodName: "GetValidMeasurementUnitConversionsToUnit",
			Handler:    _DinnerDoneBetter_GetValidMeasurementUnitConversionsToUnit_Handler,
		},
		{
			MethodName: "GetValidMeasurementUnits",
			Handler:    _DinnerDoneBetter_GetValidMeasurementUnits_Handler,
		},
		{
			MethodName: "GetValidPreparation",
			Handler:    _DinnerDoneBetter_GetValidPreparation_Handler,
		},
		{
			MethodName: "GetValidPreparationInstrument",
			Handler:    _DinnerDoneBetter_GetValidPreparationInstrument_Handler,
		},
		{
			MethodName: "GetValidPreparationInstruments",
			Handler:    _DinnerDoneBetter_GetValidPreparationInstruments_Handler,
		},
		{
			MethodName: "GetValidPreparationInstrumentsByInstrument",
			Handler:    _DinnerDoneBetter_GetValidPreparationInstrumentsByInstrument_Handler,
		},
		{
			MethodName: "GetValidPreparationInstrumentsByPreparation",
			Handler:    _DinnerDoneBetter_GetValidPreparationInstrumentsByPreparation_Handler,
		},
		{
			MethodName: "GetValidPreparationVessel",
			Handler:    _DinnerDoneBetter_GetValidPreparationVessel_Handler,
		},
		{
			MethodName: "GetValidPreparationVessels",
			Handler:    _DinnerDoneBetter_GetValidPreparationVessels_Handler,
		},
		{
			MethodName: "GetValidPreparationVesselsByPreparation",
			Handler:    _DinnerDoneBetter_GetValidPreparationVesselsByPreparation_Handler,
		},
		{
			MethodName: "GetValidPreparationVesselsByVessel",
			Handler:    _DinnerDoneBetter_GetValidPreparationVesselsByVessel_Handler,
		},
		{
			MethodName: "GetValidPreparations",
			Handler:    _DinnerDoneBetter_GetValidPreparations_Handler,
		},
		{
			MethodName: "GetValidVessel",
			Handler:    _DinnerDoneBetter_GetValidVessel_Handler,
		},
		{
			MethodName: "GetValidVessels",
			Handler:    _DinnerDoneBetter_GetValidVessels_Handler,
		},
		{
			MethodName: "RunFinalizeMealPlanWorker",
			Handler:    _DinnerDoneBetter_RunFinalizeMealPlanWorker_Handler,
		},
		{
			MethodName: "RunMealPlanGroceryListInitializerWorker",
			Handler:    _DinnerDoneBetter_RunMealPlanGroceryListInitializerWorker_Handler,
		},
		{
			MethodName: "RunMealPlanTaskCreatorWorker",
			Handler:    _DinnerDoneBetter_RunMealPlanTaskCreatorWorker_Handler,
		},
		{
			MethodName: "SearchForMeals",
			Handler:    _DinnerDoneBetter_SearchForMeals_Handler,
		},
		{
			MethodName: "SearchForRecipes",
			Handler:    _DinnerDoneBetter_SearchForRecipes_Handler,
		},
		{
			MethodName: "SearchForValidIngredientGroups",
			Handler:    _DinnerDoneBetter_SearchForValidIngredientGroups_Handler,
		},
		{
			MethodName: "SearchForValidIngredientStates",
			Handler:    _DinnerDoneBetter_SearchForValidIngredientStates_Handler,
		},
		{
			MethodName: "SearchForValidIngredients",
			Handler:    _DinnerDoneBetter_SearchForValidIngredients_Handler,
		},
		{
			MethodName: "SearchForValidInstruments",
			Handler:    _DinnerDoneBetter_SearchForValidInstruments_Handler,
		},
		{
			MethodName: "SearchForValidMeasurementUnits",
			Handler:    _DinnerDoneBetter_SearchForValidMeasurementUnits_Handler,
		},
		{
			MethodName: "SearchForValidPreparations",
			Handler:    _DinnerDoneBetter_SearchForValidPreparations_Handler,
		},
		{
			MethodName: "SearchForValidVessels",
			Handler:    _DinnerDoneBetter_SearchForValidVessels_Handler,
		},
		{
			MethodName: "SearchValidIngredientsByPreparation",
			Handler:    _DinnerDoneBetter_SearchValidIngredientsByPreparation_Handler,
		},
		{
			MethodName: "SearchValidMeasurementUnitsByIngredient",
			Handler:    _DinnerDoneBetter_SearchValidMeasurementUnitsByIngredient_Handler,
		},
		{
			MethodName: "UpdateMealPlan",
			Handler:    _DinnerDoneBetter_UpdateMealPlan_Handler,
		},
		{
			MethodName: "UpdateMealPlanEvent",
			Handler:    _DinnerDoneBetter_UpdateMealPlanEvent_Handler,
		},
		{
			MethodName: "UpdateMealPlanGroceryListItem",
			Handler:    _DinnerDoneBetter_UpdateMealPlanGroceryListItem_Handler,
		},
		{
			MethodName: "UpdateMealPlanOption",
			Handler:    _DinnerDoneBetter_UpdateMealPlanOption_Handler,
		},
		{
			MethodName: "UpdateMealPlanOptionVote",
			Handler:    _DinnerDoneBetter_UpdateMealPlanOptionVote_Handler,
		},
		{
			MethodName: "UpdateMealPlanTaskStatus",
			Handler:    _DinnerDoneBetter_UpdateMealPlanTaskStatus_Handler,
		},
		{
			MethodName: "UpdateRecipe",
			Handler:    _DinnerDoneBetter_UpdateRecipe_Handler,
		},
		{
			MethodName: "UpdateRecipePrepTask",
			Handler:    _DinnerDoneBetter_UpdateRecipePrepTask_Handler,
		},
		{
			MethodName: "UpdateRecipeRating",
			Handler:    _DinnerDoneBetter_UpdateRecipeRating_Handler,
		},
		{
			MethodName: "UpdateRecipeStep",
			Handler:    _DinnerDoneBetter_UpdateRecipeStep_Handler,
		},
		{
			MethodName: "UpdateRecipeStepCompletionCondition",
			Handler:    _DinnerDoneBetter_UpdateRecipeStepCompletionCondition_Handler,
		},
		{
			MethodName: "UpdateRecipeStepIngredient",
			Handler:    _DinnerDoneBetter_UpdateRecipeStepIngredient_Handler,
		},
		{
			MethodName: "UpdateRecipeStepInstrument",
			Handler:    _DinnerDoneBetter_UpdateRecipeStepInstrument_Handler,
		},
		{
			MethodName: "UpdateRecipeStepProduct",
			Handler:    _DinnerDoneBetter_UpdateRecipeStepProduct_Handler,
		},
		{
			MethodName: "UpdateRecipeStepVessel",
			Handler:    _DinnerDoneBetter_UpdateRecipeStepVessel_Handler,
		},
		{
			MethodName: "UpdateValidIngredient",
			Handler:    _DinnerDoneBetter_UpdateValidIngredient_Handler,
		},
		{
			MethodName: "UpdateValidIngredientGroup",
			Handler:    _DinnerDoneBetter_UpdateValidIngredientGroup_Handler,
		},
		{
			MethodName: "UpdateValidIngredientMeasurementUnit",
			Handler:    _DinnerDoneBetter_UpdateValidIngredientMeasurementUnit_Handler,
		},
		{
			MethodName: "UpdateValidIngredientPreparation",
			Handler:    _DinnerDoneBetter_UpdateValidIngredientPreparation_Handler,
		},
		{
			MethodName: "UpdateValidIngredientState",
			Handler:    _DinnerDoneBetter_UpdateValidIngredientState_Handler,
		},
		{
			MethodName: "UpdateValidIngredientStateIngredient",
			Handler:    _DinnerDoneBetter_UpdateValidIngredientStateIngredient_Handler,
		},
		{
			MethodName: "UpdateValidInstrument",
			Handler:    _DinnerDoneBetter_UpdateValidInstrument_Handler,
		},
		{
			MethodName: "UpdateValidMeasurementUnit",
			Handler:    _DinnerDoneBetter_UpdateValidMeasurementUnit_Handler,
		},
		{
			MethodName: "UpdateValidMeasurementUnitConversion",
			Handler:    _DinnerDoneBetter_UpdateValidMeasurementUnitConversion_Handler,
		},
		{
			MethodName: "UpdateValidPreparation",
			Handler:    _DinnerDoneBetter_UpdateValidPreparation_Handler,
		},
		{
			MethodName: "UpdateValidPreparationInstrument",
			Handler:    _DinnerDoneBetter_UpdateValidPreparationInstrument_Handler,
		},
		{
			MethodName: "UpdateValidPreparationVessel",
			Handler:    _DinnerDoneBetter_UpdateValidPreparationVessel_Handler,
		},
		{
			MethodName: "UpdateValidVessel",
			Handler:    _DinnerDoneBetter_UpdateValidVessel_Handler,
		},
		{
			MethodName: "ArchiveHouseholdInstrumentOwnership",
			Handler:    _DinnerDoneBetter_ArchiveHouseholdInstrumentOwnership_Handler,
		},
		{
			MethodName: "ArchiveUserIngredientPreference",
			Handler:    _DinnerDoneBetter_ArchiveUserIngredientPreference_Handler,
		},
		{
			MethodName: "CreateHouseholdInstrumentOwnership",
			Handler:    _DinnerDoneBetter_CreateHouseholdInstrumentOwnership_Handler,
		},
		{
			MethodName: "CreateUserIngredientPreference",
			Handler:    _DinnerDoneBetter_CreateUserIngredientPreference_Handler,
		},
		{
			MethodName: "GetHouseholdInstrumentOwnership",
			Handler:    _DinnerDoneBetter_GetHouseholdInstrumentOwnership_Handler,
		},
		{
			MethodName: "GetHouseholdInstrumentOwnerships",
			Handler:    _DinnerDoneBetter_GetHouseholdInstrumentOwnerships_Handler,
		},
		{
			MethodName: "GetUserIngredientPreferences",
			Handler:    _DinnerDoneBetter_GetUserIngredientPreferences_Handler,
		},
		{
			MethodName: "UpdateHouseholdInstrumentOwnership",
			Handler:    _DinnerDoneBetter_UpdateHouseholdInstrumentOwnership_Handler,
		},
		{
			MethodName: "UpdateUserIngredientPreference",
			Handler:    _DinnerDoneBetter_UpdateUserIngredientPreference_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "service.proto",
}
