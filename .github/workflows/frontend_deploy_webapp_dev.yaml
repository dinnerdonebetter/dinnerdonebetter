concurrency:
  group: ${{ github.ref }}-deploy-webapp

on: # [pull_request]
  push:
    branches:
      - dev
    paths:
      - frontend/apps/web/**
      - frontend/packages/**
      - frontend/deploy/environments/dev/webapp/**

name: frontend - deploy webapp to dev
jobs:
  baseline-infrastructure:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - id: auth
        uses: google-github-actions/auth@v2
        with:
          credentials_json: '${{ secrets.DEV_GOOGLE_CLOUD_CREDENTIALS }}'

      # Setup gcloud CLI
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.9.5
          cli_config_credentials_token: ${{ secrets.TERRAFORM_CLOUD_API_TOKEN  }}

      - name: Terraform Init
        working-directory: deploy/environments/dev/webapp/terraform
        id: init
        run: terraform init

      - name: Terraform Validate
        working-directory: deploy/environments/dev/terraform
        id: validate
        run: terraform validate -no-color

      - name: Terraform Apply
        run: terraform apply -auto-approve
        working-directory: deploy/environments/dev/terraform


  app-infrastructure:
    needs: [baseline-infrastructure]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        configs:
          - gcp-region: 'us-central1'
            gcp-project: 'dinner-done-better-dev'
            container-name: 'webapp_server'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - id: auth
        uses: google-github-actions/auth@v2
        with:
          credentials_json: '${{ secrets.DEV_GOOGLE_CLOUD_CREDENTIALS }}'

      # Setup gcloud CLI
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Authorize Docker push
        run: gcloud auth configure-docker us-central1-docker.pkg.dev

      - name: get GKE credentials
        uses: 'google-github-actions/get-gke-credentials@v2'
        with:
          cluster_name: 'dev'
          context_name: 'dev_context'
          location: 'us-central1'

      - name: Build Container
        working-directory: frontend
        run: |
          docker build --tag ${{ matrix.configs.gcp-region }}-docker.pkg.dev/${{ matrix.configs.gcp-project }}/containers/${{ matrix.configs.container-name }}:${{ github.sha }} --build-arg SEGMENT_API_TOKEN=${{ secrets.DEV_SEGMENT_API_TOKEN }} --file apps/web/Dockerfile .
          docker build --tag ${{ matrix.configs.gcp-region }}-docker.pkg.dev/${{ matrix.configs.gcp-project }}/containers/${{ matrix.configs.container-name }}:latest --build-arg SEGMENT_API_TOKEN=${{ secrets.DEV_SEGMENT_API_TOKEN }} --file apps/web/Dockerfile .

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.9.5
          cli_config_credentials_token: ${{ secrets.TERRAFORM_CLOUD_API_TOKEN  }}

      - name: Terraform Init
        working-directory: frontend/deploy/environments/dev/webapp/terraform
        id: init
        run: terraform init

      - name: Terraform Format
        working-directory: frontend/deploy/environments/dev/webapp/terraform
        id: fmt
        run: terraform fmt -check

      - name: Terraform Validate
        working-directory: frontend/deploy/environments/dev/webapp/terraform
        id: validate
        run: terraform validate -no-color

      - name: Terraform Apply
        run: terraform apply -auto-approve
        working-directory: frontend/deploy/environments/dev/webapp/terraform

      - name: Push Container
        working-directory: frontend
        run: |
          docker push ${{ matrix.configs.gcp-region }}-docker.pkg.dev/${{ matrix.configs.gcp-project }}/containers/${{ matrix.configs.container-name }}:${{  github.sha }}
          docker push ${{ matrix.configs.gcp-region }}-docker.pkg.dev/${{ matrix.configs.gcp-project }}/containers/${{ matrix.configs.container-name }}:latest
