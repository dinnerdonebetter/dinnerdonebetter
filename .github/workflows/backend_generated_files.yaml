on:
  pull_request:
    paths:
      - backend/cmd/**
      - backend/pkg/**
      - backend/internal/**

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

name: backend - generated files
jobs:
  queries:
    timeout-minutes: 10
    strategy:
      matrix:
        go-version: [ '1.23.x' ]
    runs-on: ubuntu-latest
    steps:
      - name: Install Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ matrix.go-version }}

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Ensure queries and querier can be generated
        working-directory: backend
        run: make queries sqlc_struct_check # querier

      - name: Check for changes
        run: git diff --exit-code

  configs:
    timeout-minutes: 10
    strategy:
      matrix:
        go-version: [ '1.23.x' ]
    runs-on: ubuntu-latest
    steps:
      - name: Install Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ matrix.go-version }}

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Ensure configs can be generated
        working-directory: backend
        run: make configs

      - name: Check for changes
        run: git diff --exit-code

  dependency_injection:
    timeout-minutes: 10
    strategy:
     matrix:
       go-version: [ '1.23.x' ]
    runs-on: ubuntu-latest
    steps:
      - name: Install Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ matrix.go-version }}

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install wire
        run: go install github.com/google/wire/cmd/wire@latest

      - name: Ensure dependency injection code can be generated
        working-directory: backend
        run: make rewire

      - name: Check for changes
        run: git diff --exit-code

  typescript:
    timeout-minutes: 10
    strategy:
     matrix:
       go-version: [ '1.23.x' ]
    runs-on: ubuntu-latest
    steps:
      - name: Install Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ matrix.go-version }}

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup node
        uses: actions/setup-node@v3

      - run: npm install -g yarn
        working-directory: frontend

      - name: Ensure typescript models can be generated
        working-directory: backend
        run: make typescript

      - name: format files
        working-directory: frontend
        run: make format

      - name: Check for changes
        run: git diff --exit-code


  openapi:
    timeout-minutes: 10
    strategy:
     matrix:
       go-version: [ '1.23.x' ]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Ensure openapi spec can be generated
        run: make openapi

      - name: Check for changes
        run: git diff --exit-code
