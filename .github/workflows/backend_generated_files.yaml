---
on: # [gollum]
 pull_request:
   paths:
     - backend/cmd/**
     - backend/pkg/**
     - backend/internal/**

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

name: backend - generated files
jobs:
  queries:
    timeout-minutes: 10
    strategy:
      matrix:
        go-version: ['1.23.x']
    runs-on: ubuntu-latest
    steps:
      - name: Install Go
        uses: actions/setup-go@v5
        with:
          go-version: '${{ matrix.go-version }}'

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Ensure queries and querier can be generated
        working-directory: backend
        run: make queries sqlc_struct_check format_golang

      - name: Check for changes
        run: git diff --exit-code

  configs:
    timeout-minutes: 10
    strategy:
      matrix:
        go-version: ['1.23.x']
    runs-on: ubuntu-latest
    steps:
      - name: Install Go
        uses: actions/setup-go@v5
        with:
          go-version: '${{ matrix.go-version }}'

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Ensure configs can be generated
        working-directory: backend
        run: make configs

      - name: Check for changes
        run: git diff --exit-code

  dependency_injection:
    timeout-minutes: 10
    strategy:
      matrix:
        go-version: ['1.23.x']
    runs-on: ubuntu-latest
    steps:
      - name: Install Go
        uses: actions/setup-go@v5
        with:
          go-version: '${{ matrix.go-version }}'

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install wire
        run: go install github.com/google/wire/cmd/wire@latest

      - name: Ensure dependency injection code can be generated
        working-directory: backend
        run: make rewire format_golang

      - name: Check for changes
        run: git diff --exit-code

  typescript-api-client:
    timeout-minutes: 10
    strategy:
      matrix:
        go-version: ['1.23.x']
    runs-on: ubuntu-latest
    steps:
      - name: Install Go
        uses: actions/setup-go@v5
        with:
          go-version: '${{ matrix.go-version }}'

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup node
        uses: actions/setup-node@v4

      - run: npm install -g yarn
        working-directory: frontend

      - run: yarn install
        working-directory: frontend

      - name: Ensure code can be generated
        working-directory: backend
        run: make codegen-ts

      - name: format files
        working-directory: frontend
        run: make format

      - name: Check for changes
        run: git diff --exit-code

  golang-api-client:
    timeout-minutes: 10
    strategy:
      matrix:
        go-version: ['1.23.x']
    runs-on: ubuntu-latest
    steps:
      - name: Install Go
        uses: actions/setup-go@v5
        with:
          go-version: '${{ matrix.go-version }}'

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Ensure code can be generated
        working-directory: backend
        run: make codegen-go format_golang

      - name: Check for changes
        run: git diff --exit-code

  openapi:
    timeout-minutes: 10
    strategy:
      matrix:
        go-version: ['1.23.x']
    runs-on: ubuntu-latest
    steps:
      - name: Checkout codeformat
        uses: actions/checkout@v4

      - name: Ensure openapi spec can be generated
        working-directory: backend
        run: make openapi

      - name: Check for changes
        run: git diff --exit-code

  openapi_client:
    timeout-minutes: 10
    strategy:
      matrix:
        go-version: ['1.23.x']
    runs-on: ubuntu-latest
    steps:
      - name: Install Go
        uses: actions/setup-go@v5
        with:
          go-version: '${{ matrix.go-version }}'

      - name: Checkout code
        uses: actions/checkout@v4

      - name: generate client
        working-directory: backend
        run: make codegen-go format_golang

      - name: Check for changes
        run: git diff --exit-code

  env_vars_file:
    timeout-minutes: 10
    strategy:
      matrix:
        go-version: ['1.23.x']
    runs-on: ubuntu-latest
    steps:
      - name: Install Go
        uses: actions/setup-go@v5
        with:
          go-version: '${{ matrix.go-version }}'

      - name: Checkout code
        uses: actions/checkout@v4

      - name: generate client
        working-directory: backend
        run: make envvars

      - name: Check for changes
        run: git diff --exit-code
