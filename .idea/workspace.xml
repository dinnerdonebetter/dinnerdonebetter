<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="ALL" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="28f5aa2b-266f-4815-830b-9b4317d46b1e" name="Changes" comment="">
      <change afterPath="$PROJECT_DIR$/.github/workflows/frontend_build_admin.yaml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.github/workflows/frontend_build_landing.yaml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.github/workflows/frontend_build_webapp.yaml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.github/workflows/frontend_deploy_admin_app_dev.yaml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.github/workflows/frontend_deploy_landing_dev.yaml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.github/workflows/frontend_deploy_webapp_dev.yaml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.github/workflows/frontend_ensure_precise_versions.yaml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.github/workflows/frontend_formatting.yaml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.github/workflows/frontend_lint_admin_app_terraform.yaml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.github/workflows/frontend_lint_landing_app_terraform.yaml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.github/workflows/frontend_lint_typescript.yaml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.github/workflows/frontend_lint_webapp_terraform.yaml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.github/workflows/frontend_test.yaml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.github/workflows/build.yaml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/.github/workflows/deploy_dev.yaml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/.github/workflows/generated_files.yaml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/.github/workflows/golang_formatting.yaml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/.github/workflows/integration_tests.yaml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/.github/workflows/lint.yaml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/.github/workflows/lint_terraform.yaml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/.github/workflows/unit_tests.yaml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/.gitignore" beforeDir="false" afterPath="$PROJECT_DIR$/.gitignore" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/vcs.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/vcs.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Go File" />
      </list>
    </option>
  </component>
  <component name="GOROOT" url="file:///usr/local/go" />
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="GitHubPullRequestSearchHistory">{
  &quot;lastFilter&quot;: {
    &quot;state&quot;: &quot;OPEN&quot;,
    &quot;assignee&quot;: &quot;verygoodsoftwarenotvirus&quot;
  }
}</component>
  <component name="GithubPullRequestsUISettings">{
  &quot;selectedUrlAndAccountId&quot;: {
    &quot;url&quot;: &quot;git@github.com:dinnerdonebetter/backend&quot;,
    &quot;accountId&quot;: &quot;0402caa0-a531-47a1-af11-2e94b14ce166&quot;
  }
}</component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProjectColorInfo">{
  &quot;customColor&quot;: &quot;&quot;,
  &quot;associatedIndex&quot;: 0
}</component>
  <component name="ProjectId" id="2ec7dMNyEHuZCTNbsFHyq1b5yNt" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">{
  &quot;keyToString&quot;: {
    &quot;DefaultGoTemplateProperty&quot;: &quot;Go File&quot;,
    &quot;Go Build.go build github.com/dinnerdonebetter/backend/cmd/tools/gen_queries.executor&quot;: &quot;Debug&quot;,
    &quot;Go Test.TestChoresWorker_FinalizeExpiredMealPlansWithoutReturningCount/standard in github.com/dinnerdonebetter/backend/internal/workers.executor&quot;: &quot;Run&quot;,
    &quot;Go Test.TestConfig_ValidateWithContext/standard in github.com/dinnerdonebetter/backend/internal/featureflags/config.executor&quot;: &quot;Run&quot;,
    &quot;Go Test.TestGetAPIServerConfigFromGoogleCloudRunEnvironment/standard in github.com/dinnerdonebetter/backend/internal/config.executor&quot;: &quot;Run&quot;,
    &quot;Go Test.TestMealPlanGroceryListInitializer_HandleMessage/standard in github.com/dinnerdonebetter/backend/internal/workers.executor&quot;: &quot;Run&quot;,
    &quot;Go Test.TestOAuth2ClientsService_CreateHandler/with_error_generating_client_secret in github.com/dinnerdonebetter/backend/internal/services/oauth2clients.executor&quot;: &quot;Run&quot;,
    &quot;Go Test.TestParseURL in github.com/dinnerdonebetter/backend/pkg/apiclient.executor&quot;: &quot;Run&quot;,
    &quot;Go Test.TestProvideUsersService/standard in github.com/dinnerdonebetter/backend/internal/services/users.executor&quot;: &quot;Run&quot;,
    &quot;Go Test.TestQuerier_CreateValidIngredientMeasurementUnit/with_invalid_input in github.com/dinnerdonebetter/backend/internal/database/postgres.executor&quot;: &quot;Run&quot;,
    &quot;Go Test.TestRenderToJSON/with_invalid_structure in github.com/dinnerdonebetter/backend/pkg/apiclient/requests.executor&quot;: &quot;Run&quot;,
    &quot;Go Test.Test_addNumbers_table in github.com/dinnerdonebetter/backend/pkg/numbers.executor&quot;: &quot;Debug&quot;,
    &quot;Go Test.go test featureflags.executor&quot;: &quot;Run&quot;,
    &quot;Go Test.go test internal.executor&quot;: &quot;Run&quot;,
    &quot;Go Test.go test oauth2clients.executor&quot;: &quot;Run&quot;,
    &quot;Go Test.go test postgres.executor&quot;: &quot;Run&quot;,
    &quot;Go Test.http_routes_test.go.executor&quot;: &quot;Run&quot;,
    &quot;Go Test.service_test.go.executor&quot;: &quot;Run&quot;,
    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.go.formatter.settings.were.checked&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.go.migrated.go.modules.settings&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.go.modules.automatic.dependencies.download&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.go.modules.go.list.on.any.changes.was.set&quot;: &quot;true&quot;,
    &quot;git-widget-placeholder&quot;: &quot;#811 on circuitbreaker&quot;,
    &quot;go.import.settings.migrated&quot;: &quot;true&quot;,
    &quot;go.sdk.automatically.set&quot;: &quot;true&quot;,
    &quot;last_opened_file_path&quot;: &quot;/home/vgsnv/src/github.com/dinnerdonebetter/backend/frontend/.github&quot;,
    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
    &quot;nodejs_package_manager_path&quot;: &quot;yarn&quot;,
    &quot;settings.editor.selected.configurable&quot;: &quot;preferences.pluginManager&quot;
  }
}</component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/frontend/.github" />
      <recent name="$PROJECT_DIR$" />
      <recent name="$PROJECT_DIR$/internal/featureflags" />
      <recent name="$PROJECT_DIR$/internal/pkg/circuitbreaking" />
      <recent name="$PROJECT_DIR$/.github/workflows" />
    </key>
    <key name="MoveFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/.github/workflows" />
      <recent name="$PROJECT_DIR$/backend" />
      <recent name="$PROJECT_DIR$/internal/uploads" />
      <recent name="$PROJECT_DIR$/internal/pkg" />
    </key>
  </component>
  <component name="RunManager" selected="Go Test.go test featureflags">
    <configuration name="TestChoresWorker_FinalizeExpiredMealPlansWithoutReturningCount/standard in github.com/dinnerdonebetter/backend/internal/workers" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="backend" />
      <working_directory value="$PROJECT_DIR$/internal/workers" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="github.com/dinnerdonebetter/backend/internal/workers" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestChoresWorker_FinalizeExpiredMealPlansWithoutReturningCount\E$/^\Qstandard\E$" />
      <method v="2" />
    </configuration>
    <configuration name="TestMealPlanGroceryListInitializer_HandleMessage/standard in github.com/dinnerdonebetter/backend/internal/workers" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="backend" />
      <working_directory value="$PROJECT_DIR$/internal/workers" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="github.com/dinnerdonebetter/backend/internal/workers" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestMealPlanGroceryListInitializer_HandleMessage\E$/^\Qstandard\E$" />
      <method v="2" />
    </configuration>
    <configuration name="TestOAuth2ClientsService_CreateHandler/with_error_generating_client_secret in github.com/dinnerdonebetter/backend/internal/services/oauth2clients" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="backend" />
      <working_directory value="$PROJECT_DIR$/internal/services/oauth2clients" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="github.com/dinnerdonebetter/backend/internal/services/oauth2clients" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestOAuth2ClientsService_CreateHandler\E$/^\Qwith_error_generating_client_secret\E$" />
      <method v="2" />
    </configuration>
    <configuration name="go test featureflags" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="backend" />
      <working_directory value="$PROJECT_DIR$/internal/featureflags" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="DIRECTORY" />
      <directory value="$PROJECT_DIR$/internal/featureflags" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <method v="2" />
    </configuration>
    <configuration name="go test internal" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="backend" />
      <working_directory value="$PROJECT_DIR$/internal" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="DIRECTORY" />
      <package value="github.com/dinnerdonebetter/backend/internal" />
      <directory value="$PROJECT_DIR$/internal" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Go Test.go test featureflags" />
        <item itemvalue="Go Test.TestMealPlanGroceryListInitializer_HandleMessage/standard in github.com/dinnerdonebetter/backend/internal/workers" />
        <item itemvalue="Go Test.TestChoresWorker_FinalizeExpiredMealPlansWithoutReturningCount/standard in github.com/dinnerdonebetter/backend/internal/workers" />
        <item itemvalue="Go Test.TestOAuth2ClientsService_CreateHandler/with_error_generating_client_secret in github.com/dinnerdonebetter/backend/internal/services/oauth2clients" />
        <item itemvalue="Go Test.go test internal" />
      </list>
    </recent_temporary>
  </component>
  <component name="SharedIndexes">
    <attachedChunks>
      <set>
        <option value="bundled-gosdk-33c477a475b1-e0158606a674-org.jetbrains.plugins.go.sharedIndexes.bundled-GO-241.18034.61" />
        <option value="bundled-js-predefined-1d06a55b98c1-0b3e54e931b4-JavaScript-GO-241.18034.61" />
      </set>
    </attachedChunks>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VgoProject">
    <settings-migrated>true</settings-migrated>
  </component>
  <component name="XDebuggerManager">
    <breakpoint-manager>
      <breakpoints>
        <line-breakpoint enabled="true" type="DlvLineBreakpoint">
          <url>file://$PROJECT_DIR$/backend/cmd/tools/gen_queries/main.go</url>
          <line>30</line>
          <option name="timeStamp" value="3" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="DlvLineBreakpoint">
          <url>file://$PROJECT_DIR$/backend/cmd/tools/gen_queries/admin.go</url>
          <line>7</line>
          <option name="timeStamp" value="4" />
        </line-breakpoint>
      </breakpoints>
    </breakpoint-manager>
  </component>
</project>