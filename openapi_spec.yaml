openapi: 3.1.0
info:
  contact:
    email: support@dinnerdonebetter.dev
  description: This is the spec for the Dinner Done Better API.
  title: Dinner Done Better API
  version: 1.0.0
paths:
  /api/v1/admin/cycle_cookie_secret:
    post:
      security:
      - oauth2:
        - service_admin
      - cookieAuth: []
      tags:
      - admin
  /api/v1/admin/users/status:
    post:
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/UserStatusResponse'
                      type: object
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/UserStatusResponse'
                      type: object
                  type: object
          description: ""
      security:
      - oauth2:
        - service_admin
      - cookieAuth: []
      tags:
      - admin
      - users
  /api/v1/audit_log_entries/{auditLogEntryID}:
    get:
      parameters:
      - in: path
        name: auditLogEntryID
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/AuditLogEntry'
                      type: object
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/AuditLogEntry'
                      type: object
                  type: object
          description: ""
      security:
      - oauth2:
        - household_member
      - cookieAuth: []
      tags:
      - audit_log_entries
  /api/v1/audit_log_entries/for_household:
    get:
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/AuditLogEntry'
                      type: object
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/AuditLogEntry'
                      type: object
                  type: object
          description: ""
      security:
      - oauth2:
        - household_admin
      - cookieAuth: []
      tags:
      - audit_log_entries
  /api/v1/audit_log_entries/for_user:
    get:
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/AuditLogEntry'
                      type: object
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/AuditLogEntry'
                      type: object
                  type: object
          description: ""
      security:
      - oauth2:
        - household_member
      - cookieAuth: []
      tags:
      - audit_log_entries
  /api/v1/household_invitations/{householdInvitationID}/:
    get:
      parameters:
      - in: path
        name: householdInvitationID
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/HouseholdInvitation'
                      type: object
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/HouseholdInvitation'
                      type: object
                  type: object
          description: ""
      security:
      - oauth2:
        - household_member
      - cookieAuth: []
      tags:
      - household_invitations
  /api/v1/household_invitations/{householdInvitationID}/accept:
    put:
      parameters:
      - in: path
        name: householdInvitationID
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HouseholdInvitationUpdateRequestInput'
          application/xml:
            schema:
              $ref: '#/components/schemas/HouseholdInvitationUpdateRequestInput'
        required: true
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/HouseholdInvitation'
                      type: object
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/HouseholdInvitation'
                      type: object
                  type: object
          description: ""
      security:
      - oauth2:
        - household_member
      - cookieAuth: []
      tags:
      - household_invitations
  /api/v1/household_invitations/{householdInvitationID}/cancel:
    put:
      parameters:
      - in: path
        name: householdInvitationID
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HouseholdInvitationUpdateRequestInput'
          application/xml:
            schema:
              $ref: '#/components/schemas/HouseholdInvitationUpdateRequestInput'
        required: true
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/HouseholdInvitation'
                      type: object
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/HouseholdInvitation'
                      type: object
                  type: object
          description: ""
      security:
      - oauth2:
        - household_member
      - cookieAuth: []
      tags:
      - household_invitations
  /api/v1/household_invitations/{householdInvitationID}/reject:
    put:
      parameters:
      - in: path
        name: householdInvitationID
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HouseholdInvitationUpdateRequestInput'
          application/xml:
            schema:
              $ref: '#/components/schemas/HouseholdInvitationUpdateRequestInput'
        required: true
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/HouseholdInvitation'
                      type: object
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/HouseholdInvitation'
                      type: object
                  type: object
          description: ""
      security:
      - oauth2:
        - household_member
      - cookieAuth: []
      tags:
      - household_invitations
  /api/v1/household_invitations/received:
    get:
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/HouseholdInvitation'
                      type: object
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/HouseholdInvitation'
                      type: object
                  type: object
          description: ""
      security:
      - oauth2:
        - household_member
      - cookieAuth: []
      tags:
      - household_invitations
  /api/v1/household_invitations/sent:
    get:
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/HouseholdInvitation'
                      type: object
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/HouseholdInvitation'
                      type: object
                  type: object
          description: ""
      security:
      - oauth2:
        - household_member
      - cookieAuth: []
      tags:
      - household_invitations
  /api/v1/households/:
    get:
      parameters:
      - in: query
        name: page
        required: true
        schema:
          type: integer
      - in: query
        name: createdBefore
        required: true
        schema:
          type: string
      - in: query
        name: createdAfter
        required: true
        schema:
          type: string
      - in: query
        name: updatedBefore
        required: true
        schema:
          type: string
      - in: query
        name: updatedAfter
        required: true
        schema:
          type: string
      - in: query
        name: includeArchived
        required: true
        schema:
          enum:
          - "true"
          - "false"
          type: string
      - in: query
        name: sortBy
        required: true
        schema:
          enum:
          - asc
          - desc
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      items:
                        $ref: '#/components/schemas/Household'
                      type: array
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      items:
                        $ref: '#/components/schemas/Household'
                      type: array
                  type: object
          description: ""
      security:
      - oauth2:
        - household_member
      - cookieAuth: []
      tags:
      - households
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HouseholdCreationRequestInput'
          application/xml:
            schema:
              $ref: '#/components/schemas/HouseholdCreationRequestInput'
        required: true
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/Household'
                      type: object
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/Household'
                      type: object
                  type: object
          description: ""
      security:
      - oauth2:
        - household_member
      - cookieAuth: []
      tags:
      - households
  /api/v1/households/{householdID}/:
    delete:
      parameters:
      - in: path
        name: householdID
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/Household'
                      type: object
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/Household'
                      type: object
                  type: object
          description: ""
      security:
      - oauth2:
        - household_admin
      - cookieAuth: []
      tags:
      - households
    get:
      parameters:
      - in: path
        name: householdID
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/Household'
                      type: object
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/Household'
                      type: object
                  type: object
          description: ""
      security:
      - oauth2:
        - household_member
      - cookieAuth: []
      tags:
      - households
    put:
      parameters:
      - in: path
        name: householdID
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HouseholdCreationRequestInput'
          application/xml:
            schema:
              $ref: '#/components/schemas/HouseholdCreationRequestInput'
        required: true
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/Household'
                      type: object
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/Household'
                      type: object
                  type: object
          description: ""
      security:
      - oauth2:
        - household_admin
      - cookieAuth: []
      tags:
      - households
  /api/v1/households/{householdID}/default:
    post:
      parameters:
      - in: path
        name: householdID
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/Household'
                      type: object
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/Household'
                      type: object
                  type: object
          description: ""
      security:
      - oauth2:
        - household_member
      - cookieAuth: []
      tags:
      - households
  /api/v1/households/{householdID}/invitations/:
    post:
      parameters:
      - in: path
        name: householdID
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HouseholdInvitationCreationRequestInput'
          application/xml:
            schema:
              $ref: '#/components/schemas/HouseholdInvitationCreationRequestInput'
        required: true
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/HouseholdInvitation'
                      type: object
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/HouseholdInvitation'
                      type: object
                  type: object
          description: ""
      security:
      - oauth2:
        - household_admin
      - cookieAuth: []
      tags:
      - households
      - invitations
  /api/v1/households/{householdID}/invitations/{householdInvitationID}/:
    get:
      parameters:
      - in: path
        name: householdID
        required: true
        schema:
          type: string
      - in: path
        name: householdInvitationID
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/HouseholdInvitation'
                      type: object
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/HouseholdInvitation'
                      type: object
                  type: object
          description: ""
      security:
      - oauth2:
        - household_member
      - cookieAuth: []
      tags:
      - households
      - invitations
  /api/v1/households/{householdID}/invite:
    post:
      parameters:
      - in: path
        name: householdID
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HouseholdInvitationCreationRequestInput'
          application/xml:
            schema:
              $ref: '#/components/schemas/HouseholdInvitationCreationRequestInput'
        required: true
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/HouseholdInvitation'
                      type: object
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/HouseholdInvitation'
                      type: object
                  type: object
          description: ""
      security:
      - oauth2:
        - household_admin
      - cookieAuth: []
      tags:
      - households
  /api/v1/households/{householdID}/members/{userID}:
    delete:
      parameters:
      - in: path
        name: householdID
        required: true
        schema:
          type: string
      - in: path
        name: userID
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/HouseholdUserMembership'
                      type: object
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/HouseholdUserMembership'
                      type: object
                  type: object
          description: ""
      security:
      - oauth2:
        - household_admin
      - cookieAuth: []
      tags:
      - households
      - household_members
  /api/v1/households/{householdID}/members/{userID}/permissions: {}
  /api/v1/households/{householdID}/transfer:
    post:
      parameters:
      - in: path
        name: householdID
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HouseholdOwnershipTransferInput'
          application/xml:
            schema:
              $ref: '#/components/schemas/HouseholdOwnershipTransferInput'
        required: true
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/Household'
                      type: object
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/Household'
                      type: object
                  type: object
          description: ""
      security:
      - oauth2:
        - household_admin
      - cookieAuth: []
      tags:
      - households
  /api/v1/households/current:
    get:
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/Household'
                      type: object
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/Household'
                      type: object
                  type: object
          description: ""
      security:
      - oauth2:
        - household_member
      - cookieAuth: []
      tags:
      - households
  /api/v1/households/instruments/:
    get:
      parameters:
      - in: query
        name: page
        required: true
        schema:
          type: integer
      - in: query
        name: createdBefore
        required: true
        schema:
          type: string
      - in: query
        name: createdAfter
        required: true
        schema:
          type: string
      - in: query
        name: updatedBefore
        required: true
        schema:
          type: string
      - in: query
        name: updatedAfter
        required: true
        schema:
          type: string
      - in: query
        name: includeArchived
        required: true
        schema:
          enum:
          - "true"
          - "false"
          type: string
      - in: query
        name: sortBy
        required: true
        schema:
          enum:
          - asc
          - desc
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      items:
                        $ref: '#/components/schemas/HouseholdInstrumentOwnership'
                      type: array
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      items:
                        $ref: '#/components/schemas/HouseholdInstrumentOwnership'
                      type: array
                  type: object
          description: ""
      security:
      - oauth2:
        - household_member
      - cookieAuth: []
      tags:
      - households
      - household_instrument_ownerships
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HouseholdInstrumentOwnershipCreationRequestInput'
          application/xml:
            schema:
              $ref: '#/components/schemas/HouseholdInstrumentOwnershipCreationRequestInput'
        required: true
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/HouseholdInstrumentOwnership'
                      type: object
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/HouseholdInstrumentOwnership'
                      type: object
                  type: object
          description: ""
      security:
      - oauth2:
        - household_admin
      - cookieAuth: []
      tags:
      - households
      - household_instrument_ownerships
  /api/v1/households/instruments/{householdInstrumentOwnershipID}/:
    delete:
      parameters:
      - in: path
        name: householdInstrumentOwnershipID
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/HouseholdInstrumentOwnership'
                      type: object
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/HouseholdInstrumentOwnership'
                      type: object
                  type: object
          description: ""
      security:
      - oauth2:
        - household_admin
      - cookieAuth: []
      tags:
      - households
      - household_instrument_ownerships
    get:
      parameters:
      - in: path
        name: householdInstrumentOwnershipID
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/HouseholdInstrumentOwnership'
                      type: object
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/HouseholdInstrumentOwnership'
                      type: object
                  type: object
          description: ""
      security:
      - oauth2:
        - household_member
      - cookieAuth: []
      tags:
      - households
      - household_instrument_ownerships
    put:
      parameters:
      - in: path
        name: householdInstrumentOwnershipID
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HouseholdInstrumentOwnershipUpdateRequestInput'
          application/xml:
            schema:
              $ref: '#/components/schemas/HouseholdInstrumentOwnershipUpdateRequestInput'
        required: true
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/HouseholdInstrumentOwnership'
                      type: object
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/HouseholdInstrumentOwnership'
                      type: object
                  type: object
          description: ""
      security:
      - oauth2:
        - household_admin
      - cookieAuth: []
      tags:
      - households
      - household_instrument_ownerships
  /api/v1/meal_plans/:
    get:
      parameters:
      - in: query
        name: page
        required: true
        schema:
          type: integer
      - in: query
        name: createdBefore
        required: true
        schema:
          type: string
      - in: query
        name: createdAfter
        required: true
        schema:
          type: string
      - in: query
        name: updatedBefore
        required: true
        schema:
          type: string
      - in: query
        name: updatedAfter
        required: true
        schema:
          type: string
      - in: query
        name: includeArchived
        required: true
        schema:
          enum:
          - "true"
          - "false"
          type: string
      - in: query
        name: sortBy
        required: true
        schema:
          enum:
          - asc
          - desc
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      items:
                        $ref: '#/components/schemas/MealPlan'
                      type: array
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      items:
                        $ref: '#/components/schemas/MealPlan'
                      type: array
                  type: object
          description: ""
      security:
      - oauth2:
        - household_member
      - cookieAuth: []
      tags:
      - meal_plans
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MealPlanCreationRequestInput'
          application/xml:
            schema:
              $ref: '#/components/schemas/MealPlanCreationRequestInput'
        required: true
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/MealPlan'
                      type: object
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/MealPlan'
                      type: object
                  type: object
          description: ""
      security:
      - oauth2:
        - household_admin
      - cookieAuth: []
      tags:
      - meal_plans
  /api/v1/meal_plans/{mealPlanID}/:
    delete:
      parameters:
      - in: path
        name: mealPlanID
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/MealPlan'
                      type: object
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/MealPlan'
                      type: object
                  type: object
          description: ""
      security:
      - oauth2:
        - household_admin
      - cookieAuth: []
      tags:
      - meal_plans
    get:
      parameters:
      - in: path
        name: mealPlanID
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/MealPlan'
                      type: object
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/MealPlan'
                      type: object
                  type: object
          description: ""
      security:
      - oauth2:
        - household_member
      - cookieAuth: []
      tags:
      - meal_plans
    put:
      parameters:
      - in: path
        name: mealPlanID
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MealPlanUpdateRequestInput'
          application/xml:
            schema:
              $ref: '#/components/schemas/MealPlanUpdateRequestInput'
        required: true
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/MealPlan'
                      type: object
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/MealPlan'
                      type: object
                  type: object
          description: ""
      security:
      - oauth2:
        - household_admin
      - cookieAuth: []
      tags:
      - meal_plans
  /api/v1/meal_plans/{mealPlanID}/events/:
    get:
      parameters:
      - in: query
        name: page
        required: true
        schema:
          type: integer
      - in: query
        name: createdBefore
        required: true
        schema:
          type: string
      - in: query
        name: createdAfter
        required: true
        schema:
          type: string
      - in: query
        name: updatedBefore
        required: true
        schema:
          type: string
      - in: query
        name: updatedAfter
        required: true
        schema:
          type: string
      - in: query
        name: includeArchived
        required: true
        schema:
          enum:
          - "true"
          - "false"
          type: string
      - in: query
        name: sortBy
        required: true
        schema:
          enum:
          - asc
          - desc
          type: string
      - in: path
        name: mealPlanID
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      items:
                        $ref: '#/components/schemas/MealPlanEvent'
                      type: array
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      items:
                        $ref: '#/components/schemas/MealPlanEvent'
                      type: array
                  type: object
          description: ""
      security:
      - oauth2:
        - household_member
      - cookieAuth: []
      tags:
      - meal_plans
      - meal_plan_events
    post:
      parameters:
      - in: path
        name: mealPlanID
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MealPlanEventCreationRequestInput'
          application/xml:
            schema:
              $ref: '#/components/schemas/MealPlanEventCreationRequestInput'
        required: true
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/MealPlanEvent'
                      type: object
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/MealPlanEvent'
                      type: object
                  type: object
          description: ""
      security:
      - oauth2:
        - household_admin
      - cookieAuth: []
      tags:
      - meal_plans
      - meal_plan_events
  /api/v1/meal_plans/{mealPlanID}/events/{mealPlanEventID}/:
    delete:
      parameters:
      - in: path
        name: mealPlanID
        required: true
        schema:
          type: string
      - in: path
        name: mealPlanEventID
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/MealPlanEvent'
                      type: object
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/MealPlanEvent'
                      type: object
                  type: object
          description: ""
      security:
      - oauth2:
        - household_admin
      - cookieAuth: []
      tags:
      - meal_plans
      - meal_plan_events
    get:
      parameters:
      - in: path
        name: mealPlanID
        required: true
        schema:
          type: string
      - in: path
        name: mealPlanEventID
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/MealPlanEvent'
                      type: object
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/MealPlanEvent'
                      type: object
                  type: object
          description: ""
      security:
      - oauth2:
        - household_member
      - cookieAuth: []
      tags:
      - meal_plans
      - meal_plan_events
    put:
      parameters:
      - in: path
        name: mealPlanID
        required: true
        schema:
          type: string
      - in: path
        name: mealPlanEventID
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MealPlanEventUpdateRequestInput'
          application/xml:
            schema:
              $ref: '#/components/schemas/MealPlanEventUpdateRequestInput'
        required: true
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/MealPlanEvent'
                      type: object
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/MealPlanEvent'
                      type: object
                  type: object
          description: ""
      security:
      - oauth2:
        - household_admin
      - cookieAuth: []
      tags:
      - meal_plans
      - meal_plan_events
  /api/v1/meal_plans/{mealPlanID}/events/{mealPlanEventID}/options/:
    get:
      parameters:
      - in: query
        name: page
        required: true
        schema:
          type: integer
      - in: query
        name: createdBefore
        required: true
        schema:
          type: string
      - in: query
        name: createdAfter
        required: true
        schema:
          type: string
      - in: query
        name: updatedBefore
        required: true
        schema:
          type: string
      - in: query
        name: updatedAfter
        required: true
        schema:
          type: string
      - in: query
        name: includeArchived
        required: true
        schema:
          enum:
          - "true"
          - "false"
          type: string
      - in: query
        name: sortBy
        required: true
        schema:
          enum:
          - asc
          - desc
          type: string
      - in: path
        name: mealPlanID
        required: true
        schema:
          type: string
      - in: path
        name: mealPlanEventID
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      items:
                        $ref: '#/components/schemas/MealPlanOption'
                      type: array
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      items:
                        $ref: '#/components/schemas/MealPlanOption'
                      type: array
                  type: object
          description: ""
      security:
      - oauth2:
        - household_member
      - cookieAuth: []
      tags:
      - meal_plans
      - meal_plan_events
      - meal_plan_options
    post:
      parameters:
      - in: path
        name: mealPlanID
        required: true
        schema:
          type: string
      - in: path
        name: mealPlanEventID
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MealPlanOptionCreationRequestInput'
          application/xml:
            schema:
              $ref: '#/components/schemas/MealPlanOptionCreationRequestInput'
        required: true
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/MealPlanOption'
                      type: object
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/MealPlanOption'
                      type: object
                  type: object
          description: ""
      security:
      - oauth2:
        - household_admin
      - cookieAuth: []
      tags:
      - meal_plans
      - meal_plan_events
      - meal_plan_options
  /api/v1/meal_plans/{mealPlanID}/events/{mealPlanEventID}/options/{mealPlanOptionID}/:
    delete:
      parameters:
      - in: path
        name: mealPlanID
        required: true
        schema:
          type: string
      - in: path
        name: mealPlanEventID
        required: true
        schema:
          type: string
      - in: path
        name: mealPlanOptionID
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/MealPlanOption'
                      type: object
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/MealPlanOption'
                      type: object
                  type: object
          description: ""
      security:
      - oauth2:
        - household_admin
      - cookieAuth: []
      tags:
      - meal_plans
      - meal_plan_events
      - meal_plan_options
    get:
      parameters:
      - in: path
        name: mealPlanID
        required: true
        schema:
          type: string
      - in: path
        name: mealPlanEventID
        required: true
        schema:
          type: string
      - in: path
        name: mealPlanOptionID
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/MealPlanOption'
                      type: object
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/MealPlanOption'
                      type: object
                  type: object
          description: ""
      security:
      - oauth2:
        - household_member
      - cookieAuth: []
      tags:
      - meal_plans
      - meal_plan_events
      - meal_plan_options
    put:
      parameters:
      - in: path
        name: mealPlanID
        required: true
        schema:
          type: string
      - in: path
        name: mealPlanEventID
        required: true
        schema:
          type: string
      - in: path
        name: mealPlanOptionID
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MealPlanOptionUpdateRequestInput'
          application/xml:
            schema:
              $ref: '#/components/schemas/MealPlanOptionUpdateRequestInput'
        required: true
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/MealPlanOption'
                      type: object
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/MealPlanOption'
                      type: object
                  type: object
          description: ""
      security:
      - oauth2:
        - household_admin
      - cookieAuth: []
      tags:
      - meal_plans
      - meal_plan_events
      - meal_plan_options
  /api/v1/meal_plans/{mealPlanID}/events/{mealPlanEventID}/options/{mealPlanOptionID}/votes/:
    get:
      parameters:
      - in: query
        name: page
        required: true
        schema:
          type: integer
      - in: query
        name: createdBefore
        required: true
        schema:
          type: string
      - in: query
        name: createdAfter
        required: true
        schema:
          type: string
      - in: query
        name: updatedBefore
        required: true
        schema:
          type: string
      - in: query
        name: updatedAfter
        required: true
        schema:
          type: string
      - in: query
        name: includeArchived
        required: true
        schema:
          enum:
          - "true"
          - "false"
          type: string
      - in: query
        name: sortBy
        required: true
        schema:
          enum:
          - asc
          - desc
          type: string
      - in: path
        name: mealPlanID
        required: true
        schema:
          type: string
      - in: path
        name: mealPlanEventID
        required: true
        schema:
          type: string
      - in: path
        name: mealPlanOptionID
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      items:
                        $ref: '#/components/schemas/MealPlanOptionVote'
                      type: array
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      items:
                        $ref: '#/components/schemas/MealPlanOptionVote'
                      type: array
                  type: object
          description: ""
      security:
      - oauth2:
        - household_member
      - cookieAuth: []
      tags:
      - meal_plans
      - meal_plan_events
      - meal_plan_options
      - meal_plan_option_votes
  /api/v1/meal_plans/{mealPlanID}/events/{mealPlanEventID}/options/{mealPlanOptionID}/votes/{mealPlanOptionVoteID}/:
    delete:
      parameters:
      - in: path
        name: mealPlanID
        required: true
        schema:
          type: string
      - in: path
        name: mealPlanEventID
        required: true
        schema:
          type: string
      - in: path
        name: mealPlanOptionID
        required: true
        schema:
          type: string
      - in: path
        name: mealPlanOptionVoteID
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/MealPlanOptionVote'
                      type: object
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/MealPlanOptionVote'
                      type: object
                  type: object
          description: ""
      security:
      - oauth2:
        - household_member
      - cookieAuth: []
      tags:
      - meal_plans
      - meal_plan_events
      - meal_plan_options
      - meal_plan_option_votes
    get:
      parameters:
      - in: path
        name: mealPlanID
        required: true
        schema:
          type: string
      - in: path
        name: mealPlanEventID
        required: true
        schema:
          type: string
      - in: path
        name: mealPlanOptionID
        required: true
        schema:
          type: string
      - in: path
        name: mealPlanOptionVoteID
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/MealPlanOptionVote'
                      type: object
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/MealPlanOptionVote'
                      type: object
                  type: object
          description: ""
      security:
      - oauth2:
        - household_member
      - cookieAuth: []
      tags:
      - meal_plans
      - meal_plan_events
      - meal_plan_options
      - meal_plan_option_votes
    put:
      parameters:
      - in: path
        name: mealPlanID
        required: true
        schema:
          type: string
      - in: path
        name: mealPlanEventID
        required: true
        schema:
          type: string
      - in: path
        name: mealPlanOptionID
        required: true
        schema:
          type: string
      - in: path
        name: mealPlanOptionVoteID
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MealPlanOptionVoteUpdateRequestInput'
          application/xml:
            schema:
              $ref: '#/components/schemas/MealPlanOptionVoteUpdateRequestInput'
        required: true
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/MealPlanOptionVote'
                      type: object
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/MealPlanOptionVote'
                      type: object
                  type: object
          description: ""
      security:
      - oauth2:
        - household_member
      - cookieAuth: []
      tags:
      - meal_plans
      - meal_plan_events
      - meal_plan_options
      - meal_plan_option_votes
  /api/v1/meal_plans/{mealPlanID}/events/{mealPlanEventID}/vote:
    post:
      parameters:
      - in: path
        name: mealPlanID
        required: true
        schema:
          type: string
      - in: path
        name: mealPlanEventID
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MealPlanOptionVoteCreationRequestInput'
          application/xml:
            schema:
              $ref: '#/components/schemas/MealPlanOptionVoteCreationRequestInput'
        required: true
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/MealPlanOptionVote'
                      type: object
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/MealPlanOptionVote'
                      type: object
                  type: object
          description: ""
      security:
      - oauth2:
        - household_member
      - cookieAuth: []
      tags:
      - meal_plans
      - meal_plan_events
  /api/v1/meal_plans/{mealPlanID}/finalize:
    post:
      parameters:
      - in: path
        name: mealPlanID
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/MealPlan'
                      type: object
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/MealPlan'
                      type: object
                  type: object
          description: ""
      security:
      - oauth2:
        - household_admin
      - cookieAuth: []
      tags:
      - meal_plans
  /api/v1/meal_plans/{mealPlanID}/grocery_list_items/:
    get:
      parameters:
      - in: query
        name: page
        required: true
        schema:
          type: integer
      - in: query
        name: createdBefore
        required: true
        schema:
          type: string
      - in: query
        name: createdAfter
        required: true
        schema:
          type: string
      - in: query
        name: updatedBefore
        required: true
        schema:
          type: string
      - in: query
        name: updatedAfter
        required: true
        schema:
          type: string
      - in: query
        name: includeArchived
        required: true
        schema:
          enum:
          - "true"
          - "false"
          type: string
      - in: query
        name: sortBy
        required: true
        schema:
          enum:
          - asc
          - desc
          type: string
      - in: path
        name: mealPlanID
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      items:
                        $ref: '#/components/schemas/MealPlanGroceryListItem'
                      type: array
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      items:
                        $ref: '#/components/schemas/MealPlanGroceryListItem'
                      type: array
                  type: object
          description: ""
      security:
      - oauth2:
        - household_member
      - cookieAuth: []
      tags:
      - meal_plans
      - grocery_list_items
    post:
      parameters:
      - in: path
        name: mealPlanID
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MealPlanGroceryListItemCreationRequestInput'
          application/xml:
            schema:
              $ref: '#/components/schemas/MealPlanGroceryListItemCreationRequestInput'
        required: true
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/MealPlanGroceryListItem'
                      type: object
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/MealPlanGroceryListItem'
                      type: object
                  type: object
          description: ""
      security:
      - oauth2:
        - service_admin
      - cookieAuth: []
      tags:
      - meal_plans
      - grocery_list_items
  /api/v1/meal_plans/{mealPlanID}/grocery_list_items/{mealPlanGroceryListItemID}/:
    delete:
      parameters:
      - in: path
        name: mealPlanID
        required: true
        schema:
          type: string
      - in: path
        name: mealPlanGroceryListItemID
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/MealPlanGroceryListItem'
                      type: object
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/MealPlanGroceryListItem'
                      type: object
                  type: object
          description: ""
      security:
      - oauth2:
        - household_member
      - cookieAuth: []
      tags:
      - meal_plans
      - grocery_list_items
    get:
      parameters:
      - in: path
        name: mealPlanID
        required: true
        schema:
          type: string
      - in: path
        name: mealPlanGroceryListItemID
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/MealPlanGroceryListItem'
                      type: object
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/MealPlanGroceryListItem'
                      type: object
                  type: object
          description: ""
      security:
      - oauth2:
        - household_member
      - cookieAuth: []
      tags:
      - meal_plans
      - grocery_list_items
    put:
      parameters:
      - in: path
        name: mealPlanID
        required: true
        schema:
          type: string
      - in: path
        name: mealPlanGroceryListItemID
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MealPlanGroceryListItemUpdateRequestInput'
          application/xml:
            schema:
              $ref: '#/components/schemas/MealPlanGroceryListItemUpdateRequestInput'
        required: true
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/MealPlanGroceryListItem'
                      type: object
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/MealPlanGroceryListItem'
                      type: object
                  type: object
          description: ""
      security:
      - oauth2:
        - household_member
      - cookieAuth: []
      tags:
      - meal_plans
      - grocery_list_items
  /api/v1/meal_plans/{mealPlanID}/tasks/:
    get:
      parameters:
      - in: query
        name: page
        required: true
        schema:
          type: integer
      - in: query
        name: createdBefore
        required: true
        schema:
          type: string
      - in: query
        name: createdAfter
        required: true
        schema:
          type: string
      - in: query
        name: updatedBefore
        required: true
        schema:
          type: string
      - in: query
        name: updatedAfter
        required: true
        schema:
          type: string
      - in: query
        name: includeArchived
        required: true
        schema:
          enum:
          - "true"
          - "false"
          type: string
      - in: query
        name: sortBy
        required: true
        schema:
          enum:
          - asc
          - desc
          type: string
      - in: path
        name: mealPlanID
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      items:
                        $ref: '#/components/schemas/MealPlanTask'
                      type: array
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      items:
                        $ref: '#/components/schemas/MealPlanTask'
                      type: array
                  type: object
          description: ""
      security:
      - oauth2:
        - household_member
      - cookieAuth: []
      tags:
      - meal_plans
      - meal_plan_tasks
    post:
      parameters:
      - in: path
        name: mealPlanID
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MealPlanTaskCreationRequestInput'
          application/xml:
            schema:
              $ref: '#/components/schemas/MealPlanTaskCreationRequestInput'
        required: true
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/MealPlanTask'
                      type: object
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/MealPlanTask'
                      type: object
                  type: object
          description: ""
      security:
      - oauth2:
        - service_admin
      - cookieAuth: []
      tags:
      - meal_plans
      - meal_plan_tasks
  /api/v1/meal_plans/{mealPlanID}/tasks/{mealPlanTaskID}/:
    get:
      parameters:
      - in: path
        name: mealPlanID
        required: true
        schema:
          type: string
      - in: path
        name: mealPlanTaskID
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/MealPlanTask'
                      type: object
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/MealPlanTask'
                      type: object
                  type: object
          description: ""
      security:
      - oauth2:
        - household_member
      - cookieAuth: []
      tags:
      - meal_plans
      - meal_plan_tasks
  /api/v1/meals/:
    get:
      parameters:
      - in: query
        name: page
        required: true
        schema:
          type: integer
      - in: query
        name: createdBefore
        required: true
        schema:
          type: string
      - in: query
        name: createdAfter
        required: true
        schema:
          type: string
      - in: query
        name: updatedBefore
        required: true
        schema:
          type: string
      - in: query
        name: updatedAfter
        required: true
        schema:
          type: string
      - in: query
        name: includeArchived
        required: true
        schema:
          enum:
          - "true"
          - "false"
          type: string
      - in: query
        name: sortBy
        required: true
        schema:
          enum:
          - asc
          - desc
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      items:
                        $ref: '#/components/schemas/Meal'
                      type: array
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      items:
                        $ref: '#/components/schemas/Meal'
                      type: array
                  type: object
          description: ""
      security:
      - oauth2:
        - household_member
      - cookieAuth: []
      tags:
      - meals
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MealCreationRequestInput'
          application/xml:
            schema:
              $ref: '#/components/schemas/MealCreationRequestInput'
        required: true
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/Meal'
                      type: object
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/Meal'
                      type: object
                  type: object
          description: ""
      security:
      - oauth2:
        - household_member
      - cookieAuth: []
      tags:
      - meals
  /api/v1/meals/{mealID}/:
    delete:
      parameters:
      - in: path
        name: mealID
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/Meal'
                      type: object
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/Meal'
                      type: object
                  type: object
          description: ""
      security:
      - oauth2:
        - household_member
      - cookieAuth: []
      tags:
      - meals
    get:
      parameters:
      - in: path
        name: mealID
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/Meal'
                      type: object
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/Meal'
                      type: object
                  type: object
          description: ""
      security:
      - oauth2:
        - household_member
      - cookieAuth: []
      tags:
      - meals
  /api/v1/meals/search:
    get:
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/Meal'
                      type: object
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/Meal'
                      type: object
                  type: object
          description: ""
      security:
      - oauth2:
        - household_member
      - cookieAuth: []
      tags:
      - meals
  /api/v1/oauth2_clients/:
    get:
      parameters:
      - in: query
        name: page
        required: true
        schema:
          type: integer
      - in: query
        name: createdBefore
        required: true
        schema:
          type: string
      - in: query
        name: createdAfter
        required: true
        schema:
          type: string
      - in: query
        name: updatedBefore
        required: true
        schema:
          type: string
      - in: query
        name: updatedAfter
        required: true
        schema:
          type: string
      - in: query
        name: includeArchived
        required: true
        schema:
          enum:
          - "true"
          - "false"
          type: string
      - in: query
        name: sortBy
        required: true
        schema:
          enum:
          - asc
          - desc
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      items:
                        $ref: '#/components/schemas/OAuth2Client'
                      type: array
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      items:
                        $ref: '#/components/schemas/OAuth2Client'
                      type: array
                  type: object
          description: ""
      security:
      - oauth2:
        - household_member
      - cookieAuth: []
      tags:
      - oauth2
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OAuth2ClientCreationRequestInput'
          application/xml:
            schema:
              $ref: '#/components/schemas/OAuth2ClientCreationRequestInput'
        required: true
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/OAuth2Client'
                      type: object
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/OAuth2Client'
                      type: object
                  type: object
          description: ""
      security:
      - oauth2:
        - service_admin
      - cookieAuth: []
      tags:
      - oauth2
  /api/v1/oauth2_clients/{oauth2ClientID}/:
    delete:
      parameters:
      - in: path
        name: oauth2ClientID
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/OAuth2Client'
                      type: object
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/OAuth2Client'
                      type: object
                  type: object
          description: ""
      security:
      - oauth2:
        - service_admin
      - cookieAuth: []
      tags:
      - oauth2
    get:
      parameters:
      - in: path
        name: oauth2ClientID
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/OAuth2Client'
                      type: object
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/OAuth2Client'
                      type: object
                  type: object
          description: ""
      security:
      - oauth2:
        - household_member
      - cookieAuth: []
      tags:
      - oauth2
  /api/v1/recipes/:
    get:
      parameters:
      - in: query
        name: page
        required: true
        schema:
          type: integer
      - in: query
        name: createdBefore
        required: true
        schema:
          type: string
      - in: query
        name: createdAfter
        required: true
        schema:
          type: string
      - in: query
        name: updatedBefore
        required: true
        schema:
          type: string
      - in: query
        name: updatedAfter
        required: true
        schema:
          type: string
      - in: query
        name: includeArchived
        required: true
        schema:
          enum:
          - "true"
          - "false"
          type: string
      - in: query
        name: sortBy
        required: true
        schema:
          enum:
          - asc
          - desc
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      items:
                        $ref: '#/components/schemas/Recipe'
                      type: array
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      items:
                        $ref: '#/components/schemas/Recipe'
                      type: array
                  type: object
          description: ""
      security:
      - oauth2:
        - household_member
      - cookieAuth: []
      tags:
      - recipes
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RecipeCreationRequestInput'
          application/xml:
            schema:
              $ref: '#/components/schemas/RecipeCreationRequestInput'
        required: true
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/Recipe'
                      type: object
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/Recipe'
                      type: object
                  type: object
          description: ""
      security:
      - oauth2:
        - household_member
      - cookieAuth: []
      tags:
      - recipes
  /api/v1/recipes/{recipeID}/:
    delete:
      parameters:
      - in: path
        name: recipeID
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/Recipe'
                      type: object
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/Recipe'
                      type: object
                  type: object
          description: ""
      security:
      - oauth2:
        - household_member
      - cookieAuth: []
      tags:
      - recipes
    get:
      parameters:
      - in: path
        name: recipeID
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/Recipe'
                      type: object
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/Recipe'
                      type: object
                  type: object
          description: ""
      security:
      - oauth2:
        - household_member
      - cookieAuth: []
      tags:
      - recipes
    put:
      parameters:
      - in: path
        name: recipeID
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RecipeUpdateRequestInput'
          application/xml:
            schema:
              $ref: '#/components/schemas/RecipeUpdateRequestInput'
        required: true
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/Recipe'
                      type: object
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/Recipe'
                      type: object
                  type: object
          description: ""
      security:
      - oauth2:
        - household_member
      - cookieAuth: []
      tags:
      - recipes
  /api/v1/recipes/{recipeID}/clone:
    post:
      parameters:
      - in: path
        name: recipeID
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/Recipe'
                      type: object
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/Recipe'
                      type: object
                  type: object
          description: ""
      security:
      - oauth2:
        - household_member
      - cookieAuth: []
      tags:
      - recipes
  /api/v1/recipes/{recipeID}/dag:
    get:
      parameters:
      - in: path
        name: recipeID
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/APIError'
                      type: object
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/APIError'
                      type: object
                  type: object
          description: ""
      security:
      - oauth2:
        - household_member
      - cookieAuth: []
      tags:
      - recipes
  /api/v1/recipes/{recipeID}/images:
    post:
      parameters:
      - in: path
        name: recipeID
        required: true
        schema:
          type: string
      security:
      - oauth2: null
      - cookieAuth: []
      tags:
      - recipes
  /api/v1/recipes/{recipeID}/mermaid:
    get:
      parameters:
      - in: path
        name: recipeID
        required: true
        schema:
          type: string
      security:
      - oauth2: null
      - cookieAuth: []
      tags:
      - recipes
  /api/v1/recipes/{recipeID}/prep_steps:
    get:
      parameters:
      - in: path
        name: recipeID
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/RecipePrepTaskStep'
                      type: object
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/RecipePrepTaskStep'
                      type: object
                  type: object
          description: ""
      security:
      - oauth2:
        - household_member
      - cookieAuth: []
      tags:
      - recipes
  /api/v1/recipes/{recipeID}/prep_tasks/:
    get:
      parameters:
      - in: query
        name: page
        required: true
        schema:
          type: integer
      - in: query
        name: createdBefore
        required: true
        schema:
          type: string
      - in: query
        name: createdAfter
        required: true
        schema:
          type: string
      - in: query
        name: updatedBefore
        required: true
        schema:
          type: string
      - in: query
        name: updatedAfter
        required: true
        schema:
          type: string
      - in: query
        name: includeArchived
        required: true
        schema:
          enum:
          - "true"
          - "false"
          type: string
      - in: query
        name: sortBy
        required: true
        schema:
          enum:
          - asc
          - desc
          type: string
      - in: path
        name: recipeID
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      items:
                        $ref: '#/components/schemas/RecipePrepTask'
                      type: array
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      items:
                        $ref: '#/components/schemas/RecipePrepTask'
                      type: array
                  type: object
          description: ""
      security:
      - oauth2:
        - household_member
      - cookieAuth: []
      tags:
      - recipes
      - recipe_prep_tasks
    post:
      parameters:
      - in: path
        name: recipeID
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RecipePrepTaskCreationRequestInput'
          application/xml:
            schema:
              $ref: '#/components/schemas/RecipePrepTaskCreationRequestInput'
        required: true
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/RecipePrepTask'
                      type: object
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/RecipePrepTask'
                      type: object
                  type: object
          description: ""
      security:
      - oauth2:
        - household_member
      - cookieAuth: []
      tags:
      - recipes
      - recipe_prep_tasks
  /api/v1/recipes/{recipeID}/prep_tasks/{recipePrepTaskID}/:
    delete:
      parameters:
      - in: path
        name: recipeID
        required: true
        schema:
          type: string
      - in: path
        name: recipePrepTaskID
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/RecipePrepTask'
                      type: object
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/RecipePrepTask'
                      type: object
                  type: object
          description: ""
      security:
      - oauth2:
        - household_member
      - cookieAuth: []
      tags:
      - recipes
      - recipe_prep_tasks
    get:
      parameters:
      - in: path
        name: recipeID
        required: true
        schema:
          type: string
      - in: path
        name: recipePrepTaskID
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/RecipePrepTask'
                      type: object
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/RecipePrepTask'
                      type: object
                  type: object
          description: ""
      security:
      - oauth2:
        - household_member
      - cookieAuth: []
      tags:
      - recipes
      - recipe_prep_tasks
    put:
      parameters:
      - in: path
        name: recipeID
        required: true
        schema:
          type: string
      - in: path
        name: recipePrepTaskID
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RecipePrepTaskUpdateRequestInput'
          application/xml:
            schema:
              $ref: '#/components/schemas/RecipePrepTaskUpdateRequestInput'
        required: true
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/RecipePrepTask'
                      type: object
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/RecipePrepTask'
                      type: object
                  type: object
          description: ""
      security:
      - oauth2:
        - household_member
      - cookieAuth: []
      tags:
      - recipes
      - recipe_prep_tasks
  /api/v1/recipes/{recipeID}/ratings/:
    get:
      parameters:
      - in: query
        name: page
        required: true
        schema:
          type: integer
      - in: query
        name: createdBefore
        required: true
        schema:
          type: string
      - in: query
        name: createdAfter
        required: true
        schema:
          type: string
      - in: query
        name: updatedBefore
        required: true
        schema:
          type: string
      - in: query
        name: updatedAfter
        required: true
        schema:
          type: string
      - in: query
        name: includeArchived
        required: true
        schema:
          enum:
          - "true"
          - "false"
          type: string
      - in: query
        name: sortBy
        required: true
        schema:
          enum:
          - asc
          - desc
          type: string
      - in: path
        name: recipeID
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      items:
                        $ref: '#/components/schemas/RecipeRating'
                      type: array
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      items:
                        $ref: '#/components/schemas/RecipeRating'
                      type: array
                  type: object
          description: ""
      security:
      - oauth2:
        - household_member
      - cookieAuth: []
      tags:
      - recipes
      - recipe_ratings
    post:
      parameters:
      - in: path
        name: recipeID
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RecipeRatingCreationRequestInput'
          application/xml:
            schema:
              $ref: '#/components/schemas/RecipeRatingCreationRequestInput'
        required: true
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/RecipeRating'
                      type: object
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/RecipeRating'
                      type: object
                  type: object
          description: ""
      security:
      - oauth2:
        - household_member
      - cookieAuth: []
      tags:
      - recipes
      - recipe_ratings
  /api/v1/recipes/{recipeID}/ratings/{recipeRatingID}/:
    delete:
      parameters:
      - in: path
        name: recipeID
        required: true
        schema:
          type: string
      - in: path
        name: recipeRatingID
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/RecipeRating'
                      type: object
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/RecipeRating'
                      type: object
                  type: object
          description: ""
      security:
      - oauth2:
        - household_member
      - cookieAuth: []
      tags:
      - recipes
      - recipe_ratings
    get:
      parameters:
      - in: path
        name: recipeID
        required: true
        schema:
          type: string
      - in: path
        name: recipeRatingID
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/RecipeRating'
                      type: object
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/RecipeRating'
                      type: object
                  type: object
          description: ""
      security:
      - oauth2:
        - household_member
      - cookieAuth: []
      tags:
      - recipes
      - recipe_ratings
    put:
      parameters:
      - in: path
        name: recipeID
        required: true
        schema:
          type: string
      - in: path
        name: recipeRatingID
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RecipeRatingUpdateRequestInput'
          application/xml:
            schema:
              $ref: '#/components/schemas/RecipeRatingUpdateRequestInput'
        required: true
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/RecipeRating'
                      type: object
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/RecipeRating'
                      type: object
                  type: object
          description: ""
      security:
      - oauth2:
        - household_member
      - cookieAuth: []
      tags:
      - recipes
      - recipe_ratings
  /api/v1/recipes/{recipeID}/steps/:
    get:
      parameters:
      - in: query
        name: page
        required: true
        schema:
          type: integer
      - in: query
        name: createdBefore
        required: true
        schema:
          type: string
      - in: query
        name: createdAfter
        required: true
        schema:
          type: string
      - in: query
        name: updatedBefore
        required: true
        schema:
          type: string
      - in: query
        name: updatedAfter
        required: true
        schema:
          type: string
      - in: query
        name: includeArchived
        required: true
        schema:
          enum:
          - "true"
          - "false"
          type: string
      - in: query
        name: sortBy
        required: true
        schema:
          enum:
          - asc
          - desc
          type: string
      - in: path
        name: recipeID
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      items:
                        $ref: '#/components/schemas/RecipeStep'
                      type: array
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      items:
                        $ref: '#/components/schemas/RecipeStep'
                      type: array
                  type: object
          description: ""
      security:
      - oauth2:
        - household_member
      - cookieAuth: []
      tags:
      - recipes
      - recipe_steps
    post:
      parameters:
      - in: path
        name: recipeID
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RecipeStepCreationRequestInput'
          application/xml:
            schema:
              $ref: '#/components/schemas/RecipeStepCreationRequestInput'
        required: true
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/RecipeStep'
                      type: object
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/RecipeStep'
                      type: object
                  type: object
          description: ""
      security:
      - oauth2:
        - household_member
      - cookieAuth: []
      tags:
      - recipes
      - recipe_steps
  /api/v1/recipes/{recipeID}/steps/{recipeStepID}/:
    delete:
      parameters:
      - in: path
        name: recipeID
        required: true
        schema:
          type: string
      - in: path
        name: recipeStepID
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/RecipeStep'
                      type: object
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/RecipeStep'
                      type: object
                  type: object
          description: ""
      security:
      - oauth2:
        - household_member
      - cookieAuth: []
      tags:
      - recipes
      - recipe_steps
    get:
      parameters:
      - in: path
        name: recipeID
        required: true
        schema:
          type: string
      - in: path
        name: recipeStepID
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/RecipeStep'
                      type: object
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/RecipeStep'
                      type: object
                  type: object
          description: ""
      security:
      - oauth2:
        - household_member
      - cookieAuth: []
      tags:
      - recipes
      - recipe_steps
    put:
      parameters:
      - in: path
        name: recipeID
        required: true
        schema:
          type: string
      - in: path
        name: recipeStepID
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RecipeStepUpdateRequestInput'
          application/xml:
            schema:
              $ref: '#/components/schemas/RecipeStepUpdateRequestInput'
        required: true
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/RecipeStep'
                      type: object
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/RecipeStep'
                      type: object
                  type: object
          description: ""
      security:
      - oauth2:
        - household_member
      - cookieAuth: []
      tags:
      - recipes
      - recipe_steps
  /api/v1/recipes/{recipeID}/steps/{recipeStepID}/completion_conditions/:
    get:
      parameters:
      - in: query
        name: page
        required: true
        schema:
          type: integer
      - in: query
        name: createdBefore
        required: true
        schema:
          type: string
      - in: query
        name: createdAfter
        required: true
        schema:
          type: string
      - in: query
        name: updatedBefore
        required: true
        schema:
          type: string
      - in: query
        name: updatedAfter
        required: true
        schema:
          type: string
      - in: query
        name: includeArchived
        required: true
        schema:
          enum:
          - "true"
          - "false"
          type: string
      - in: query
        name: sortBy
        required: true
        schema:
          enum:
          - asc
          - desc
          type: string
      - in: path
        name: recipeID
        required: true
        schema:
          type: string
      - in: path
        name: recipeStepID
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      items:
                        $ref: '#/components/schemas/RecipeStepCompletionCondition'
                      type: array
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      items:
                        $ref: '#/components/schemas/RecipeStepCompletionCondition'
                      type: array
                  type: object
          description: ""
      security:
      - oauth2:
        - household_member
      - cookieAuth: []
      tags:
      - recipes
      - recipe_steps
      - recipe_step_completion_conditions
    post:
      parameters:
      - in: path
        name: recipeID
        required: true
        schema:
          type: string
      - in: path
        name: recipeStepID
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RecipeStepCompletionConditionCreationRequestInput'
          application/xml:
            schema:
              $ref: '#/components/schemas/RecipeStepCompletionConditionCreationRequestInput'
        required: true
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/RecipeStepCompletionCondition'
                      type: object
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/RecipeStepCompletionCondition'
                      type: object
                  type: object
          description: ""
      security:
      - oauth2:
        - household_member
      - cookieAuth: []
      tags:
      - recipes
      - recipe_steps
      - recipe_step_completion_conditions
  /api/v1/recipes/{recipeID}/steps/{recipeStepID}/completion_conditions/{recipeStepCompletionConditionID}/:
    delete:
      parameters:
      - in: path
        name: recipeID
        required: true
        schema:
          type: string
      - in: path
        name: recipeStepID
        required: true
        schema:
          type: string
      - in: path
        name: recipeStepCompletionConditionID
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/RecipeStepCompletionCondition'
                      type: object
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/RecipeStepCompletionCondition'
                      type: object
                  type: object
          description: ""
      security:
      - oauth2:
        - household_member
      - cookieAuth: []
      tags:
      - recipes
      - recipe_steps
      - recipe_step_completion_conditions
    get:
      parameters:
      - in: path
        name: recipeID
        required: true
        schema:
          type: string
      - in: path
        name: recipeStepID
        required: true
        schema:
          type: string
      - in: path
        name: recipeStepCompletionConditionID
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/RecipeStepCompletionCondition'
                      type: object
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/RecipeStepCompletionCondition'
                      type: object
                  type: object
          description: ""
      security:
      - oauth2:
        - household_member
      - cookieAuth: []
      tags:
      - recipes
      - recipe_steps
      - recipe_step_completion_conditions
    put:
      parameters:
      - in: path
        name: recipeID
        required: true
        schema:
          type: string
      - in: path
        name: recipeStepID
        required: true
        schema:
          type: string
      - in: path
        name: recipeStepCompletionConditionID
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RecipeStepCompletionConditionUpdateRequestInput'
          application/xml:
            schema:
              $ref: '#/components/schemas/RecipeStepCompletionConditionUpdateRequestInput'
        required: true
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/RecipeStepCompletionCondition'
                      type: object
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/RecipeStepCompletionCondition'
                      type: object
                  type: object
          description: ""
      security:
      - oauth2:
        - household_member
      - cookieAuth: []
      tags:
      - recipes
      - recipe_steps
      - recipe_step_completion_conditions
  /api/v1/recipes/{recipeID}/steps/{recipeStepID}/images:
    post:
      parameters:
      - in: path
        name: recipeID
        required: true
        schema:
          type: string
      - in: path
        name: recipeStepID
        required: true
        schema:
          type: string
      security:
      - oauth2: null
      - cookieAuth: []
      tags:
      - recipes
      - recipe_steps
  /api/v1/recipes/{recipeID}/steps/{recipeStepID}/ingredients/:
    get:
      parameters:
      - in: query
        name: page
        required: true
        schema:
          type: integer
      - in: query
        name: createdBefore
        required: true
        schema:
          type: string
      - in: query
        name: createdAfter
        required: true
        schema:
          type: string
      - in: query
        name: updatedBefore
        required: true
        schema:
          type: string
      - in: query
        name: updatedAfter
        required: true
        schema:
          type: string
      - in: query
        name: includeArchived
        required: true
        schema:
          enum:
          - "true"
          - "false"
          type: string
      - in: query
        name: sortBy
        required: true
        schema:
          enum:
          - asc
          - desc
          type: string
      - in: path
        name: recipeID
        required: true
        schema:
          type: string
      - in: path
        name: recipeStepID
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      items:
                        $ref: '#/components/schemas/RecipeStepIngredient'
                      type: array
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      items:
                        $ref: '#/components/schemas/RecipeStepIngredient'
                      type: array
                  type: object
          description: ""
      security:
      - oauth2:
        - household_member
      - cookieAuth: []
      tags:
      - recipes
      - recipe_steps
      - recipe_step_ingredients
    post:
      parameters:
      - in: path
        name: recipeID
        required: true
        schema:
          type: string
      - in: path
        name: recipeStepID
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RecipeStepIngredientCreationRequestInput'
          application/xml:
            schema:
              $ref: '#/components/schemas/RecipeStepIngredientCreationRequestInput'
        required: true
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/RecipeStepIngredient'
                      type: object
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/RecipeStepIngredient'
                      type: object
                  type: object
          description: ""
      security:
      - oauth2:
        - household_member
      - cookieAuth: []
      tags:
      - recipes
      - recipe_steps
      - recipe_step_ingredients
  /api/v1/recipes/{recipeID}/steps/{recipeStepID}/ingredients/{recipeStepIngredientID}/:
    delete:
      parameters:
      - in: path
        name: recipeID
        required: true
        schema:
          type: string
      - in: path
        name: recipeStepID
        required: true
        schema:
          type: string
      - in: path
        name: recipeStepIngredientID
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/RecipeStepIngredient'
                      type: object
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/RecipeStepIngredient'
                      type: object
                  type: object
          description: ""
      security:
      - oauth2:
        - household_member
      - cookieAuth: []
      tags:
      - recipes
      - recipe_steps
      - recipe_step_ingredients
    get:
      parameters:
      - in: path
        name: recipeID
        required: true
        schema:
          type: string
      - in: path
        name: recipeStepID
        required: true
        schema:
          type: string
      - in: path
        name: recipeStepIngredientID
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/RecipeStepIngredient'
                      type: object
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/RecipeStepIngredient'
                      type: object
                  type: object
          description: ""
      security:
      - oauth2:
        - household_member
      - cookieAuth: []
      tags:
      - recipes
      - recipe_steps
      - recipe_step_ingredients
    put:
      parameters:
      - in: path
        name: recipeID
        required: true
        schema:
          type: string
      - in: path
        name: recipeStepID
        required: true
        schema:
          type: string
      - in: path
        name: recipeStepIngredientID
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RecipeStepIngredientUpdateRequestInput'
          application/xml:
            schema:
              $ref: '#/components/schemas/RecipeStepIngredientUpdateRequestInput'
        required: true
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/RecipeStepIngredient'
                      type: object
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/RecipeStepIngredient'
                      type: object
                  type: object
          description: ""
      security:
      - oauth2:
        - household_member
      - cookieAuth: []
      tags:
      - recipes
      - recipe_steps
      - recipe_step_ingredients
  /api/v1/recipes/{recipeID}/steps/{recipeStepID}/instruments/:
    get:
      parameters:
      - in: query
        name: page
        required: true
        schema:
          type: integer
      - in: query
        name: createdBefore
        required: true
        schema:
          type: string
      - in: query
        name: createdAfter
        required: true
        schema:
          type: string
      - in: query
        name: updatedBefore
        required: true
        schema:
          type: string
      - in: query
        name: updatedAfter
        required: true
        schema:
          type: string
      - in: query
        name: includeArchived
        required: true
        schema:
          enum:
          - "true"
          - "false"
          type: string
      - in: query
        name: sortBy
        required: true
        schema:
          enum:
          - asc
          - desc
          type: string
      - in: path
        name: recipeID
        required: true
        schema:
          type: string
      - in: path
        name: recipeStepID
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      items:
                        $ref: '#/components/schemas/RecipeStepInstrument'
                      type: array
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      items:
                        $ref: '#/components/schemas/RecipeStepInstrument'
                      type: array
                  type: object
          description: ""
      security:
      - oauth2:
        - household_member
      - cookieAuth: []
      tags:
      - recipes
      - recipe_steps
      - household_instrument_ownerships
    post:
      parameters:
      - in: path
        name: recipeID
        required: true
        schema:
          type: string
      - in: path
        name: recipeStepID
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RecipeStepInstrumentCreationRequestInput'
          application/xml:
            schema:
              $ref: '#/components/schemas/RecipeStepInstrumentCreationRequestInput'
        required: true
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/RecipeStepInstrument'
                      type: object
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/RecipeStepInstrument'
                      type: object
                  type: object
          description: ""
      security:
      - oauth2:
        - household_member
      - cookieAuth: []
      tags:
      - recipes
      - recipe_steps
      - household_instrument_ownerships
  /api/v1/recipes/{recipeID}/steps/{recipeStepID}/instruments/{recipeStepInstrumentID}/:
    delete:
      parameters:
      - in: path
        name: recipeID
        required: true
        schema:
          type: string
      - in: path
        name: recipeStepID
        required: true
        schema:
          type: string
      - in: path
        name: recipeStepInstrumentID
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/RecipeStepInstrument'
                      type: object
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/RecipeStepInstrument'
                      type: object
                  type: object
          description: ""
      security:
      - oauth2:
        - household_member
      - cookieAuth: []
      tags:
      - recipes
      - recipe_steps
      - household_instrument_ownerships
    get:
      parameters:
      - in: path
        name: recipeID
        required: true
        schema:
          type: string
      - in: path
        name: recipeStepID
        required: true
        schema:
          type: string
      - in: path
        name: recipeStepInstrumentID
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/RecipeStepInstrument'
                      type: object
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/RecipeStepInstrument'
                      type: object
                  type: object
          description: ""
      security:
      - oauth2:
        - household_member
      - cookieAuth: []
      tags:
      - recipes
      - recipe_steps
      - household_instrument_ownerships
    put:
      parameters:
      - in: path
        name: recipeID
        required: true
        schema:
          type: string
      - in: path
        name: recipeStepID
        required: true
        schema:
          type: string
      - in: path
        name: recipeStepInstrumentID
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RecipeStepInstrumentUpdateRequestInput'
          application/xml:
            schema:
              $ref: '#/components/schemas/RecipeStepInstrumentUpdateRequestInput'
        required: true
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/RecipeStepInstrument'
                      type: object
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/RecipeStepInstrument'
                      type: object
                  type: object
          description: ""
      security:
      - oauth2:
        - household_member
      - cookieAuth: []
      tags:
      - recipes
      - recipe_steps
      - household_instrument_ownerships
  /api/v1/recipes/{recipeID}/steps/{recipeStepID}/products/:
    get:
      parameters:
      - in: query
        name: page
        required: true
        schema:
          type: integer
      - in: query
        name: createdBefore
        required: true
        schema:
          type: string
      - in: query
        name: createdAfter
        required: true
        schema:
          type: string
      - in: query
        name: updatedBefore
        required: true
        schema:
          type: string
      - in: query
        name: updatedAfter
        required: true
        schema:
          type: string
      - in: query
        name: includeArchived
        required: true
        schema:
          enum:
          - "true"
          - "false"
          type: string
      - in: query
        name: sortBy
        required: true
        schema:
          enum:
          - asc
          - desc
          type: string
      - in: path
        name: recipeID
        required: true
        schema:
          type: string
      - in: path
        name: recipeStepID
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      items:
                        $ref: '#/components/schemas/RecipeStepProduct'
                      type: array
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      items:
                        $ref: '#/components/schemas/RecipeStepProduct'
                      type: array
                  type: object
          description: ""
      security:
      - oauth2:
        - household_member
      - cookieAuth: []
      tags:
      - recipes
      - recipe_steps
      - recipe_step_products
    post:
      parameters:
      - in: path
        name: recipeID
        required: true
        schema:
          type: string
      - in: path
        name: recipeStepID
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RecipeStepProductCreationRequestInput'
          application/xml:
            schema:
              $ref: '#/components/schemas/RecipeStepProductCreationRequestInput'
        required: true
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/RecipeStepProduct'
                      type: object
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/RecipeStepProduct'
                      type: object
                  type: object
          description: ""
      security:
      - oauth2:
        - household_member
      - cookieAuth: []
      tags:
      - recipes
      - recipe_steps
      - recipe_step_products
  /api/v1/recipes/{recipeID}/steps/{recipeStepID}/products/{recipeStepProductID}/:
    delete:
      parameters:
      - in: path
        name: recipeID
        required: true
        schema:
          type: string
      - in: path
        name: recipeStepID
        required: true
        schema:
          type: string
      - in: path
        name: recipeStepProductID
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/RecipeStepProduct'
                      type: object
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/RecipeStepProduct'
                      type: object
                  type: object
          description: ""
      security:
      - oauth2:
        - household_member
      - cookieAuth: []
      tags:
      - recipes
      - recipe_steps
      - recipe_step_products
    get:
      parameters:
      - in: path
        name: recipeID
        required: true
        schema:
          type: string
      - in: path
        name: recipeStepID
        required: true
        schema:
          type: string
      - in: path
        name: recipeStepProductID
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/RecipeStepProduct'
                      type: object
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/RecipeStepProduct'
                      type: object
                  type: object
          description: ""
      security:
      - oauth2:
        - household_member
      - cookieAuth: []
      tags:
      - recipes
      - recipe_steps
      - recipe_step_products
    put:
      parameters:
      - in: path
        name: recipeID
        required: true
        schema:
          type: string
      - in: path
        name: recipeStepID
        required: true
        schema:
          type: string
      - in: path
        name: recipeStepProductID
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RecipeStepProductUpdateRequestInput'
          application/xml:
            schema:
              $ref: '#/components/schemas/RecipeStepProductUpdateRequestInput'
        required: true
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/RecipeStepProduct'
                      type: object
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/RecipeStepProduct'
                      type: object
                  type: object
          description: ""
      security:
      - oauth2:
        - household_member
      - cookieAuth: []
      tags:
      - recipes
      - recipe_steps
      - recipe_step_products
  /api/v1/recipes/{recipeID}/steps/{recipeStepID}/vessels/:
    get:
      parameters:
      - in: query
        name: page
        required: true
        schema:
          type: integer
      - in: query
        name: createdBefore
        required: true
        schema:
          type: string
      - in: query
        name: createdAfter
        required: true
        schema:
          type: string
      - in: query
        name: updatedBefore
        required: true
        schema:
          type: string
      - in: query
        name: updatedAfter
        required: true
        schema:
          type: string
      - in: query
        name: includeArchived
        required: true
        schema:
          enum:
          - "true"
          - "false"
          type: string
      - in: query
        name: sortBy
        required: true
        schema:
          enum:
          - asc
          - desc
          type: string
      - in: path
        name: recipeID
        required: true
        schema:
          type: string
      - in: path
        name: recipeStepID
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      items:
                        $ref: '#/components/schemas/RecipeStepVessel'
                      type: array
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      items:
                        $ref: '#/components/schemas/RecipeStepVessel'
                      type: array
                  type: object
          description: ""
      security:
      - oauth2:
        - household_member
      - cookieAuth: []
      tags:
      - recipes
      - recipe_steps
      - recipe_step_vessels
    post:
      parameters:
      - in: path
        name: recipeID
        required: true
        schema:
          type: string
      - in: path
        name: recipeStepID
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RecipeStepVesselCreationRequestInput'
          application/xml:
            schema:
              $ref: '#/components/schemas/RecipeStepVesselCreationRequestInput'
        required: true
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/RecipeStepVessel'
                      type: object
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/RecipeStepVessel'
                      type: object
                  type: object
          description: ""
      security:
      - oauth2:
        - household_member
      - cookieAuth: []
      tags:
      - recipes
      - recipe_steps
      - recipe_step_vessels
  /api/v1/recipes/{recipeID}/steps/{recipeStepID}/vessels/{recipeStepVesselID}/:
    delete:
      parameters:
      - in: path
        name: recipeID
        required: true
        schema:
          type: string
      - in: path
        name: recipeStepID
        required: true
        schema:
          type: string
      - in: path
        name: recipeStepVesselID
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/RecipeStepVessel'
                      type: object
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/RecipeStepVessel'
                      type: object
                  type: object
          description: ""
      security:
      - oauth2:
        - household_member
      - cookieAuth: []
      tags:
      - recipes
      - recipe_steps
      - recipe_step_vessels
    get:
      parameters:
      - in: path
        name: recipeID
        required: true
        schema:
          type: string
      - in: path
        name: recipeStepID
        required: true
        schema:
          type: string
      - in: path
        name: recipeStepVesselID
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/RecipeStepVessel'
                      type: object
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/RecipeStepVessel'
                      type: object
                  type: object
          description: ""
      security:
      - oauth2:
        - household_member
      - cookieAuth: []
      tags:
      - recipes
      - recipe_steps
      - recipe_step_vessels
    put:
      parameters:
      - in: path
        name: recipeID
        required: true
        schema:
          type: string
      - in: path
        name: recipeStepID
        required: true
        schema:
          type: string
      - in: path
        name: recipeStepVesselID
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RecipeStepVesselUpdateRequestInput'
          application/xml:
            schema:
              $ref: '#/components/schemas/RecipeStepVesselUpdateRequestInput'
        required: true
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/RecipeStepVessel'
                      type: object
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/RecipeStepVessel'
                      type: object
                  type: object
          description: ""
      security:
      - oauth2:
        - household_member
      - cookieAuth: []
      tags:
      - recipes
      - recipe_steps
      - recipe_step_vessels
  /api/v1/recipes/search:
    get:
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/Recipe'
                      type: object
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/Recipe'
                      type: object
                  type: object
          description: ""
      security:
      - oauth2:
        - household_member
      - cookieAuth: []
      tags:
      - recipes
  /api/v1/settings/:
    get:
      parameters:
      - in: query
        name: page
        required: true
        schema:
          type: integer
      - in: query
        name: createdBefore
        required: true
        schema:
          type: string
      - in: query
        name: createdAfter
        required: true
        schema:
          type: string
      - in: query
        name: updatedBefore
        required: true
        schema:
          type: string
      - in: query
        name: updatedAfter
        required: true
        schema:
          type: string
      - in: query
        name: includeArchived
        required: true
        schema:
          enum:
          - "true"
          - "false"
          type: string
      - in: query
        name: sortBy
        required: true
        schema:
          enum:
          - asc
          - desc
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      items:
                        $ref: '#/components/schemas/ServiceSetting'
                      type: array
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      items:
                        $ref: '#/components/schemas/ServiceSetting'
                      type: array
                  type: object
          description: ""
      security:
      - oauth2:
        - household_member
      - cookieAuth: []
      tags:
      - service_settings
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceSettingCreationRequestInput'
          application/xml:
            schema:
              $ref: '#/components/schemas/ServiceSettingCreationRequestInput'
        required: true
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/ServiceSetting'
                      type: object
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/ServiceSetting'
                      type: object
                  type: object
          description: ""
      security:
      - oauth2:
        - service_admin
      - cookieAuth: []
      tags:
      - service_settings
  /api/v1/settings/{serviceSettingID}/:
    delete:
      parameters:
      - in: path
        name: serviceSettingID
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/ServiceSetting'
                      type: object
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/ServiceSetting'
                      type: object
                  type: object
          description: ""
      security:
      - oauth2:
        - service_admin
      - cookieAuth: []
      tags:
      - service_settings
    get:
      parameters:
      - in: path
        name: serviceSettingID
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/ServiceSetting'
                      type: object
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/ServiceSetting'
                      type: object
                  type: object
          description: ""
      security:
      - oauth2:
        - household_member
      - cookieAuth: []
      tags:
      - service_settings
  /api/v1/settings/configurations/:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceSettingConfigurationCreationRequestInput'
          application/xml:
            schema:
              $ref: '#/components/schemas/ServiceSettingConfigurationCreationRequestInput'
        required: true
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/ServiceSettingConfiguration'
                      type: object
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/ServiceSettingConfiguration'
                      type: object
                  type: object
          description: ""
      security:
      - oauth2:
        - household_member
      - cookieAuth: []
      tags:
      - service_settings
      - service_setting_configurations
  /api/v1/settings/configurations/{serviceSettingConfigurationID}:
    delete:
      parameters:
      - in: path
        name: serviceSettingConfigurationID
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/ServiceSettingConfiguration'
                      type: object
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/ServiceSettingConfiguration'
                      type: object
                  type: object
          description: ""
      security:
      - oauth2:
        - household_member
      - cookieAuth: []
      tags:
      - service_settings
      - service_setting_configurations
    put:
      parameters:
      - in: path
        name: serviceSettingConfigurationID
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceSettingConfigurationUpdateRequestInput'
          application/xml:
            schema:
              $ref: '#/components/schemas/ServiceSettingConfigurationUpdateRequestInput'
        required: true
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/ServiceSettingConfiguration'
                      type: object
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/ServiceSettingConfiguration'
                      type: object
                  type: object
          description: ""
      security:
      - oauth2:
        - household_member
      - cookieAuth: []
      tags:
      - service_settings
      - service_setting_configurations
  /api/v1/settings/configurations/household:
    get:
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/ServiceSettingConfiguration'
                      type: object
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/ServiceSettingConfiguration'
                      type: object
                  type: object
          description: ""
      security:
      - oauth2:
        - household_member
      - cookieAuth: []
      tags:
      - service_settings
      - service_setting_configurations
  /api/v1/settings/configurations/user:
    get:
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/ServiceSettingConfiguration'
                      type: object
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/ServiceSettingConfiguration'
                      type: object
                  type: object
          description: ""
      security:
      - oauth2:
        - household_member
      - cookieAuth: []
      tags:
      - service_settings
      - service_setting_configurations
  /api/v1/settings/configurations/user/{serviceSettingConfigurationName}:
    get:
      parameters:
      - in: path
        name: serviceSettingConfigurationName
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/ServiceSettingConfiguration'
                      type: object
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/ServiceSettingConfiguration'
                      type: object
                  type: object
          description: ""
      security:
      - oauth2:
        - household_member
      - cookieAuth: []
      tags:
      - service_settings
      - service_setting_configurations
      - user
  /api/v1/settings/search:
    get:
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/ServiceSetting'
                      type: object
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/ServiceSetting'
                      type: object
                  type: object
          description: ""
      security:
      - oauth2:
        - household_member
      - cookieAuth: []
      tags:
      - service_settings
  /api/v1/user_ingredient_preferences/:
    get:
      parameters:
      - in: query
        name: page
        required: true
        schema:
          type: integer
      - in: query
        name: createdBefore
        required: true
        schema:
          type: string
      - in: query
        name: createdAfter
        required: true
        schema:
          type: string
      - in: query
        name: updatedBefore
        required: true
        schema:
          type: string
      - in: query
        name: updatedAfter
        required: true
        schema:
          type: string
      - in: query
        name: includeArchived
        required: true
        schema:
          enum:
          - "true"
          - "false"
          type: string
      - in: query
        name: sortBy
        required: true
        schema:
          enum:
          - asc
          - desc
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      items:
                        $ref: '#/components/schemas/UserIngredientPreference'
                      type: array
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      items:
                        $ref: '#/components/schemas/UserIngredientPreference'
                      type: array
                  type: object
          description: ""
      security:
      - oauth2:
        - household_member
      - cookieAuth: []
      tags:
      - user_ingredient_preferences
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserIngredientPreferenceCreationRequestInput'
          application/xml:
            schema:
              $ref: '#/components/schemas/UserIngredientPreferenceCreationRequestInput'
        required: true
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/UserIngredientPreference'
                      type: object
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/UserIngredientPreference'
                      type: object
                  type: object
          description: ""
      security:
      - oauth2:
        - household_member
      - cookieAuth: []
      tags:
      - user_ingredient_preferences
  /api/v1/user_ingredient_preferences/{userIngredientPreferenceID}/:
    delete:
      parameters:
      - in: path
        name: userIngredientPreferenceID
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/UserIngredientPreference'
                      type: object
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/UserIngredientPreference'
                      type: object
                  type: object
          description: ""
      security:
      - oauth2:
        - household_member
      - cookieAuth: []
      tags:
      - user_ingredient_preferences
    put:
      parameters:
      - in: path
        name: userIngredientPreferenceID
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserIngredientPreferenceUpdateRequestInput'
          application/xml:
            schema:
              $ref: '#/components/schemas/UserIngredientPreferenceUpdateRequestInput'
        required: true
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/UserIngredientPreference'
                      type: object
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/UserIngredientPreference'
                      type: object
                  type: object
          description: ""
      security:
      - oauth2:
        - household_member
      - cookieAuth: []
      tags:
      - user_ingredient_preferences
  /api/v1/user_notifications/:
    get:
      parameters:
      - in: query
        name: page
        required: true
        schema:
          type: integer
      - in: query
        name: createdBefore
        required: true
        schema:
          type: string
      - in: query
        name: createdAfter
        required: true
        schema:
          type: string
      - in: query
        name: updatedBefore
        required: true
        schema:
          type: string
      - in: query
        name: updatedAfter
        required: true
        schema:
          type: string
      - in: query
        name: includeArchived
        required: true
        schema:
          enum:
          - "true"
          - "false"
          type: string
      - in: query
        name: sortBy
        required: true
        schema:
          enum:
          - asc
          - desc
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      items:
                        $ref: '#/components/schemas/UserNotification'
                      type: array
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      items:
                        $ref: '#/components/schemas/UserNotification'
                      type: array
                  type: object
          description: ""
      security:
      - oauth2:
        - household_member
      - cookieAuth: []
      tags:
      - user_notifications
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserNotificationCreationRequestInput'
          application/xml:
            schema:
              $ref: '#/components/schemas/UserNotificationCreationRequestInput'
        required: true
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/UserNotification'
                      type: object
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/UserNotification'
                      type: object
                  type: object
          description: ""
      security:
      - oauth2:
        - service_admin
      - cookieAuth: []
      tags:
      - user_notifications
  /api/v1/user_notifications/{userNotificationID}/:
    get:
      parameters:
      - in: path
        name: userNotificationID
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/UserNotification'
                      type: object
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/UserNotification'
                      type: object
                  type: object
          description: ""
      security:
      - oauth2:
        - household_member
      - cookieAuth: []
      tags:
      - user_notifications
  /api/v1/users/:
    get:
      parameters:
      - in: query
        name: page
        required: true
        schema:
          type: integer
      - in: query
        name: createdBefore
        required: true
        schema:
          type: string
      - in: query
        name: createdAfter
        required: true
        schema:
          type: string
      - in: query
        name: updatedBefore
        required: true
        schema:
          type: string
      - in: query
        name: updatedAfter
        required: true
        schema:
          type: string
      - in: query
        name: includeArchived
        required: true
        schema:
          enum:
          - "true"
          - "false"
          type: string
      - in: query
        name: sortBy
        required: true
        schema:
          enum:
          - asc
          - desc
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      items:
                        $ref: '#/components/schemas/User'
                      type: array
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      items:
                        $ref: '#/components/schemas/User'
                      type: array
                  type: object
          description: ""
      security:
      - oauth2:
        - household_member
      - cookieAuth: []
      tags:
      - users
  /api/v1/users/{userID}/:
    delete:
      parameters:
      - in: path
        name: userID
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/User'
                      type: object
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/User'
                      type: object
                  type: object
          description: ""
      security:
      - oauth2:
        - household_member
      - cookieAuth: []
      tags:
      - users
    get:
      parameters:
      - in: path
        name: userID
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/User'
                      type: object
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/User'
                      type: object
                  type: object
          description: ""
      security:
      - oauth2:
        - household_member
      - cookieAuth: []
      tags:
      - users
  /api/v1/users/avatar/upload:
    post:
      security:
      - oauth2:
        - household_member
      - cookieAuth: []
      tags:
      - users
  /api/v1/users/details:
    put:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserDetailsUpdateRequestInput'
          application/xml:
            schema:
              $ref: '#/components/schemas/UserDetailsUpdateRequestInput'
        required: true
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/User'
                      type: object
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/User'
                      type: object
                  type: object
          description: ""
      security:
      - oauth2:
        - household_member
      - cookieAuth: []
      tags:
      - users
  /api/v1/users/email_address:
    put:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserEmailAddressUpdateInput'
          application/xml:
            schema:
              $ref: '#/components/schemas/UserEmailAddressUpdateInput'
        required: true
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/User'
                      type: object
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/User'
                      type: object
                  type: object
          description: ""
      security:
      - oauth2:
        - household_member
      - cookieAuth: []
      tags:
      - users
  /api/v1/users/email_address_verification:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmailAddressVerificationRequestInput'
          application/xml:
            schema:
              $ref: '#/components/schemas/EmailAddressVerificationRequestInput'
        required: true
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/User'
                      type: object
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/User'
                      type: object
                  type: object
          description: ""
      security:
      - oauth2:
        - household_member
      - cookieAuth: []
      tags:
      - users
  /api/v1/users/household/select:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangeActiveHouseholdInput'
          application/xml:
            schema:
              $ref: '#/components/schemas/ChangeActiveHouseholdInput'
        required: true
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/Household'
                      type: object
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/Household'
                      type: object
                  type: object
          description: ""
      security:
      - oauth2:
        - household_member
      - cookieAuth: []
      tags:
      - users
      - household
  /api/v1/users/password/new:
    put:
      security:
      - oauth2:
        - household_member
      - cookieAuth: []
      tags:
      - users
      - password
  /api/v1/users/permissions/check:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserPermissionsRequestInput'
          application/xml:
            schema:
              $ref: '#/components/schemas/UserPermissionsRequestInput'
        required: true
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/UserPermissionsResponse'
                      type: object
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/UserPermissionsResponse'
                      type: object
                  type: object
          description: ""
      security:
      - oauth2:
        - household_member
      - cookieAuth: []
      tags:
      - users
      - permissions
  /api/v1/users/search:
    get:
      parameters:
      - in: query
        name: page
        required: true
        schema:
          type: integer
      - in: query
        name: createdBefore
        required: true
        schema:
          type: string
      - in: query
        name: createdAfter
        required: true
        schema:
          type: string
      - in: query
        name: updatedBefore
        required: true
        schema:
          type: string
      - in: query
        name: updatedAfter
        required: true
        schema:
          type: string
      - in: query
        name: includeArchived
        required: true
        schema:
          enum:
          - "true"
          - "false"
          type: string
      - in: query
        name: sortBy
        required: true
        schema:
          enum:
          - asc
          - desc
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      items:
                        $ref: '#/components/schemas/User'
                      type: array
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      items:
                        $ref: '#/components/schemas/User'
                      type: array
                  type: object
          description: ""
      security:
      - oauth2:
        - household_member
      - cookieAuth: []
      tags:
      - users
  /api/v1/users/self:
    get:
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/User'
                      type: object
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/User'
                      type: object
                  type: object
          description: ""
      security:
      - oauth2:
        - household_member
      - cookieAuth: []
      tags:
      - users
  /api/v1/users/totp_secret/new:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TOTPSecretRefreshInput'
          application/xml:
            schema:
              $ref: '#/components/schemas/TOTPSecretRefreshInput'
        required: true
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/APIError'
                      type: object
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/APIError'
                      type: object
                  type: object
          description: ""
      security:
      - oauth2:
        - household_member
      - cookieAuth: []
      tags:
      - users
      - totp_secret
  /api/v1/users/username:
    put:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UsernameUpdateInput'
          application/xml:
            schema:
              $ref: '#/components/schemas/UsernameUpdateInput'
        required: true
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/User'
                      type: object
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/User'
                      type: object
                  type: object
          description: ""
      security:
      - oauth2:
        - household_member
      - cookieAuth: []
      tags:
      - users
  /api/v1/valid_ingredient_groups/:
    get:
      parameters:
      - in: query
        name: page
        required: true
        schema:
          type: integer
      - in: query
        name: createdBefore
        required: true
        schema:
          type: string
      - in: query
        name: createdAfter
        required: true
        schema:
          type: string
      - in: query
        name: updatedBefore
        required: true
        schema:
          type: string
      - in: query
        name: updatedAfter
        required: true
        schema:
          type: string
      - in: query
        name: includeArchived
        required: true
        schema:
          enum:
          - "true"
          - "false"
          type: string
      - in: query
        name: sortBy
        required: true
        schema:
          enum:
          - asc
          - desc
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      items:
                        $ref: '#/components/schemas/ValidIngredientGroup'
                      type: array
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      items:
                        $ref: '#/components/schemas/ValidIngredientGroup'
                      type: array
                  type: object
          description: ""
      security:
      - oauth2:
        - household_member
      - cookieAuth: []
      tags:
      - valid_ingredient_groups
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ValidIngredientGroupCreationRequestInput'
          application/xml:
            schema:
              $ref: '#/components/schemas/ValidIngredientGroupCreationRequestInput'
        required: true
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/ValidIngredientGroup'
                      type: object
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/ValidIngredientGroup'
                      type: object
                  type: object
          description: ""
      security:
      - oauth2:
        - service_admin
      - cookieAuth: []
      tags:
      - valid_ingredient_groups
  /api/v1/valid_ingredient_groups/{validIngredientGroupID}/:
    delete:
      parameters:
      - in: path
        name: validIngredientGroupID
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/ValidIngredientGroup'
                      type: object
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/ValidIngredientGroup'
                      type: object
                  type: object
          description: ""
      security:
      - oauth2:
        - service_admin
      - cookieAuth: []
      tags:
      - valid_ingredient_groups
    get:
      parameters:
      - in: path
        name: validIngredientGroupID
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/ValidIngredientGroup'
                      type: object
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/ValidIngredientGroup'
                      type: object
                  type: object
          description: ""
      security:
      - oauth2:
        - household_member
      - cookieAuth: []
      tags:
      - valid_ingredient_groups
    put:
      parameters:
      - in: path
        name: validIngredientGroupID
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ValidIngredientGroupUpdateRequestInput'
          application/xml:
            schema:
              $ref: '#/components/schemas/ValidIngredientGroupUpdateRequestInput'
        required: true
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/ValidIngredientGroup'
                      type: object
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/ValidIngredientGroup'
                      type: object
                  type: object
          description: ""
      security:
      - oauth2:
        - service_admin
      - cookieAuth: []
      tags:
      - valid_ingredient_groups
  /api/v1/valid_ingredient_groups/search:
    get:
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/ValidIngredientGroup'
                      type: object
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/ValidIngredientGroup'
                      type: object
                  type: object
          description: ""
      security:
      - oauth2:
        - household_member
      - cookieAuth: []
      tags:
      - valid_ingredient_groups
  /api/v1/valid_ingredient_measurement_units/:
    get:
      parameters:
      - in: query
        name: page
        required: true
        schema:
          type: integer
      - in: query
        name: createdBefore
        required: true
        schema:
          type: string
      - in: query
        name: createdAfter
        required: true
        schema:
          type: string
      - in: query
        name: updatedBefore
        required: true
        schema:
          type: string
      - in: query
        name: updatedAfter
        required: true
        schema:
          type: string
      - in: query
        name: includeArchived
        required: true
        schema:
          enum:
          - "true"
          - "false"
          type: string
      - in: query
        name: sortBy
        required: true
        schema:
          enum:
          - asc
          - desc
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      items:
                        $ref: '#/components/schemas/ValidIngredientMeasurementUnit'
                      type: array
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      items:
                        $ref: '#/components/schemas/ValidIngredientMeasurementUnit'
                      type: array
                  type: object
          description: ""
      security:
      - oauth2:
        - household_member
      - cookieAuth: []
      tags:
      - valid_ingredient_measurement_units
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ValidIngredientMeasurementUnitCreationRequestInput'
          application/xml:
            schema:
              $ref: '#/components/schemas/ValidIngredientMeasurementUnitCreationRequestInput'
        required: true
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/ValidIngredientMeasurementUnit'
                      type: object
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/ValidIngredientMeasurementUnit'
                      type: object
                  type: object
          description: ""
      security:
      - oauth2:
        - service_admin
      - cookieAuth: []
      tags:
      - valid_ingredient_measurement_units
  /api/v1/valid_ingredient_measurement_units/{validIngredientMeasurementUnitID}/:
    delete:
      parameters:
      - in: path
        name: validIngredientMeasurementUnitID
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/ValidIngredientMeasurementUnit'
                      type: object
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/ValidIngredientMeasurementUnit'
                      type: object
                  type: object
          description: ""
      security:
      - oauth2:
        - service_admin
      - cookieAuth: []
      tags:
      - valid_ingredient_measurement_units
    get:
      parameters:
      - in: path
        name: validIngredientMeasurementUnitID
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/ValidIngredientMeasurementUnit'
                      type: object
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/ValidIngredientMeasurementUnit'
                      type: object
                  type: object
          description: ""
      security:
      - oauth2:
        - household_member
      - cookieAuth: []
      tags:
      - valid_ingredient_measurement_units
    put:
      parameters:
      - in: path
        name: validIngredientMeasurementUnitID
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ValidIngredientMeasurementUnitUpdateRequestInput'
          application/xml:
            schema:
              $ref: '#/components/schemas/ValidIngredientMeasurementUnitUpdateRequestInput'
        required: true
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/ValidIngredientMeasurementUnit'
                      type: object
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/ValidIngredientMeasurementUnit'
                      type: object
                  type: object
          description: ""
      security:
      - oauth2:
        - service_admin
      - cookieAuth: []
      tags:
      - valid_ingredient_measurement_units
  /api/v1/valid_ingredient_measurement_units/by_ingredient/{validIngredientID}/:
    get:
      parameters:
      - in: path
        name: validIngredientID
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/ValidIngredientMeasurementUnit'
                      type: object
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/ValidIngredientMeasurementUnit'
                      type: object
                  type: object
          description: ""
      security:
      - oauth2:
        - household_member
      - cookieAuth: []
      tags:
      - valid_ingredient_measurement_units
  /api/v1/valid_ingredient_measurement_units/by_measurement_unit/{validMeasurementUnitID}/:
    get:
      parameters:
      - in: path
        name: validMeasurementUnitID
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/ValidIngredientMeasurementUnit'
                      type: object
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/ValidIngredientMeasurementUnit'
                      type: object
                  type: object
          description: ""
      security:
      - oauth2:
        - household_member
      - cookieAuth: []
      tags:
      - valid_ingredient_measurement_units
  /api/v1/valid_ingredient_preparations/:
    get:
      parameters:
      - in: query
        name: page
        required: true
        schema:
          type: integer
      - in: query
        name: createdBefore
        required: true
        schema:
          type: string
      - in: query
        name: createdAfter
        required: true
        schema:
          type: string
      - in: query
        name: updatedBefore
        required: true
        schema:
          type: string
      - in: query
        name: updatedAfter
        required: true
        schema:
          type: string
      - in: query
        name: includeArchived
        required: true
        schema:
          enum:
          - "true"
          - "false"
          type: string
      - in: query
        name: sortBy
        required: true
        schema:
          enum:
          - asc
          - desc
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      items:
                        $ref: '#/components/schemas/ValidIngredientPreparation'
                      type: array
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      items:
                        $ref: '#/components/schemas/ValidIngredientPreparation'
                      type: array
                  type: object
          description: ""
      security:
      - oauth2:
        - household_member
      - cookieAuth: []
      tags:
      - valid_ingredient_preparations
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ValidIngredientPreparationCreationRequestInput'
          application/xml:
            schema:
              $ref: '#/components/schemas/ValidIngredientPreparationCreationRequestInput'
        required: true
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/ValidIngredientPreparation'
                      type: object
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/ValidIngredientPreparation'
                      type: object
                  type: object
          description: ""
      security:
      - oauth2:
        - service_admin
      - cookieAuth: []
      tags:
      - valid_ingredient_preparations
  /api/v1/valid_ingredient_preparations/{validIngredientPreparationID}/:
    delete:
      parameters:
      - in: path
        name: validIngredientPreparationID
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/ValidIngredientPreparation'
                      type: object
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/ValidIngredientPreparation'
                      type: object
                  type: object
          description: ""
      security:
      - oauth2:
        - service_admin
      - cookieAuth: []
      tags:
      - valid_ingredient_preparations
    get:
      parameters:
      - in: path
        name: validIngredientPreparationID
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/ValidIngredientPreparation'
                      type: object
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/ValidIngredientPreparation'
                      type: object
                  type: object
          description: ""
      security:
      - oauth2:
        - household_member
      - cookieAuth: []
      tags:
      - valid_ingredient_preparations
    put:
      parameters:
      - in: path
        name: validIngredientPreparationID
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ValidIngredientPreparationUpdateRequestInput'
          application/xml:
            schema:
              $ref: '#/components/schemas/ValidIngredientPreparationUpdateRequestInput'
        required: true
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/ValidIngredientPreparation'
                      type: object
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/ValidIngredientPreparation'
                      type: object
                  type: object
          description: ""
      security:
      - oauth2:
        - service_admin
      - cookieAuth: []
      tags:
      - valid_ingredient_preparations
  /api/v1/valid_ingredient_preparations/by_ingredient/{validIngredientID}/:
    get:
      parameters:
      - in: path
        name: validIngredientID
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/ValidIngredientPreparation'
                      type: object
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/ValidIngredientPreparation'
                      type: object
                  type: object
          description: ""
      security:
      - oauth2:
        - household_member
      - cookieAuth: []
      tags:
      - valid_ingredient_preparations
  /api/v1/valid_ingredient_preparations/by_preparation/{validPreparationID}/:
    get:
      parameters:
      - in: path
        name: validPreparationID
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/ValidIngredientPreparation'
                      type: object
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/ValidIngredientPreparation'
                      type: object
                  type: object
          description: ""
      security:
      - oauth2:
        - household_member
      - cookieAuth: []
      tags:
      - valid_ingredient_preparations
  /api/v1/valid_ingredient_state_ingredients/:
    get:
      parameters:
      - in: query
        name: page
        required: true
        schema:
          type: integer
      - in: query
        name: createdBefore
        required: true
        schema:
          type: string
      - in: query
        name: createdAfter
        required: true
        schema:
          type: string
      - in: query
        name: updatedBefore
        required: true
        schema:
          type: string
      - in: query
        name: updatedAfter
        required: true
        schema:
          type: string
      - in: query
        name: includeArchived
        required: true
        schema:
          enum:
          - "true"
          - "false"
          type: string
      - in: query
        name: sortBy
        required: true
        schema:
          enum:
          - asc
          - desc
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      items:
                        $ref: '#/components/schemas/ValidIngredientStateIngredient'
                      type: array
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      items:
                        $ref: '#/components/schemas/ValidIngredientStateIngredient'
                      type: array
                  type: object
          description: ""
      security:
      - oauth2:
        - household_member
      - cookieAuth: []
      tags:
      - valid_ingredient_state_ingredients
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ValidIngredientStateIngredientCreationRequestInput'
          application/xml:
            schema:
              $ref: '#/components/schemas/ValidIngredientStateIngredientCreationRequestInput'
        required: true
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/ValidIngredientStateIngredient'
                      type: object
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/ValidIngredientStateIngredient'
                      type: object
                  type: object
          description: ""
      security:
      - oauth2:
        - service_admin
      - cookieAuth: []
      tags:
      - valid_ingredient_state_ingredients
  /api/v1/valid_ingredient_state_ingredients/{validIngredientStateIngredientID}/:
    delete:
      parameters:
      - in: path
        name: validIngredientStateIngredientID
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/ValidIngredientStateIngredient'
                      type: object
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/ValidIngredientStateIngredient'
                      type: object
                  type: object
          description: ""
      security:
      - oauth2:
        - service_admin
      - cookieAuth: []
      tags:
      - valid_ingredient_state_ingredients
    get:
      parameters:
      - in: path
        name: validIngredientStateIngredientID
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/ValidIngredientStateIngredient'
                      type: object
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/ValidIngredientStateIngredient'
                      type: object
                  type: object
          description: ""
      security:
      - oauth2:
        - household_member
      - cookieAuth: []
      tags:
      - valid_ingredient_state_ingredients
    put:
      parameters:
      - in: path
        name: validIngredientStateIngredientID
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ValidIngredientStateIngredientUpdateRequestInput'
          application/xml:
            schema:
              $ref: '#/components/schemas/ValidIngredientStateIngredientUpdateRequestInput'
        required: true
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/ValidIngredientStateIngredient'
                      type: object
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/ValidIngredientStateIngredient'
                      type: object
                  type: object
          description: ""
      security:
      - oauth2:
        - service_admin
      - cookieAuth: []
      tags:
      - valid_ingredient_state_ingredients
  /api/v1/valid_ingredient_state_ingredients/by_ingredient/{validIngredientID}/:
    get:
      parameters:
      - in: path
        name: validIngredientID
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/ValidIngredientStateIngredient'
                      type: object
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/ValidIngredientStateIngredient'
                      type: object
                  type: object
          description: ""
      security:
      - oauth2:
        - household_member
      - cookieAuth: []
      tags:
      - valid_ingredient_state_ingredients
  /api/v1/valid_ingredient_state_ingredients/by_ingredient_state/{validIngredientStateID}/:
    get:
      parameters:
      - in: path
        name: validIngredientStateID
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/ValidIngredientStateIngredient'
                      type: object
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/ValidIngredientStateIngredient'
                      type: object
                  type: object
          description: ""
      security:
      - oauth2:
        - household_member
      - cookieAuth: []
      tags:
      - valid_ingredient_state_ingredients
  /api/v1/valid_ingredient_states/:
    get:
      parameters:
      - in: query
        name: page
        required: true
        schema:
          type: integer
      - in: query
        name: createdBefore
        required: true
        schema:
          type: string
      - in: query
        name: createdAfter
        required: true
        schema:
          type: string
      - in: query
        name: updatedBefore
        required: true
        schema:
          type: string
      - in: query
        name: updatedAfter
        required: true
        schema:
          type: string
      - in: query
        name: includeArchived
        required: true
        schema:
          enum:
          - "true"
          - "false"
          type: string
      - in: query
        name: sortBy
        required: true
        schema:
          enum:
          - asc
          - desc
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      items:
                        $ref: '#/components/schemas/ValidIngredientState'
                      type: array
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      items:
                        $ref: '#/components/schemas/ValidIngredientState'
                      type: array
                  type: object
          description: ""
      security:
      - oauth2:
        - household_member
      - cookieAuth: []
      tags:
      - valid_ingredient_states
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ValidIngredientStateCreationRequestInput'
          application/xml:
            schema:
              $ref: '#/components/schemas/ValidIngredientStateCreationRequestInput'
        required: true
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/ValidIngredientState'
                      type: object
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/ValidIngredientState'
                      type: object
                  type: object
          description: ""
      security:
      - oauth2:
        - service_admin
      - cookieAuth: []
      tags:
      - valid_ingredient_states
  /api/v1/valid_ingredient_states/{validIngredientStateID}/:
    delete:
      parameters:
      - in: path
        name: validIngredientStateID
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/ValidIngredientState'
                      type: object
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/ValidIngredientState'
                      type: object
                  type: object
          description: ""
      security:
      - oauth2:
        - service_admin
      - cookieAuth: []
      tags:
      - valid_ingredient_states
    get:
      parameters:
      - in: path
        name: validIngredientStateID
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/ValidIngredientState'
                      type: object
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/ValidIngredientState'
                      type: object
                  type: object
          description: ""
      security:
      - oauth2:
        - household_member
      - cookieAuth: []
      tags:
      - valid_ingredient_states
    put:
      parameters:
      - in: path
        name: validIngredientStateID
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ValidIngredientStateUpdateRequestInput'
          application/xml:
            schema:
              $ref: '#/components/schemas/ValidIngredientStateUpdateRequestInput'
        required: true
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/ValidIngredientState'
                      type: object
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/ValidIngredientState'
                      type: object
                  type: object
          description: ""
      security:
      - oauth2:
        - service_admin
      - cookieAuth: []
      tags:
      - valid_ingredient_states
  /api/v1/valid_ingredient_states/search:
    get:
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/ValidIngredientState'
                      type: object
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/ValidIngredientState'
                      type: object
                  type: object
          description: ""
      security:
      - oauth2:
        - household_member
      - cookieAuth: []
      tags:
      - valid_ingredient_states
  /api/v1/valid_ingredients/:
    get:
      parameters:
      - in: query
        name: page
        required: true
        schema:
          type: integer
      - in: query
        name: createdBefore
        required: true
        schema:
          type: string
      - in: query
        name: createdAfter
        required: true
        schema:
          type: string
      - in: query
        name: updatedBefore
        required: true
        schema:
          type: string
      - in: query
        name: updatedAfter
        required: true
        schema:
          type: string
      - in: query
        name: includeArchived
        required: true
        schema:
          enum:
          - "true"
          - "false"
          type: string
      - in: query
        name: sortBy
        required: true
        schema:
          enum:
          - asc
          - desc
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      items:
                        $ref: '#/components/schemas/ValidIngredient'
                      type: array
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      items:
                        $ref: '#/components/schemas/ValidIngredient'
                      type: array
                  type: object
          description: ""
      security:
      - oauth2:
        - household_member
      - cookieAuth: []
      tags:
      - valid_ingredients
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ValidIngredientCreationRequestInput'
          application/xml:
            schema:
              $ref: '#/components/schemas/ValidIngredientCreationRequestInput'
        required: true
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/ValidIngredient'
                      type: object
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/ValidIngredient'
                      type: object
                  type: object
          description: ""
      security:
      - oauth2:
        - service_admin
      - cookieAuth: []
      tags:
      - valid_ingredients
  /api/v1/valid_ingredients/{validIngredientID}/:
    delete:
      parameters:
      - in: path
        name: validIngredientID
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/ValidIngredient'
                      type: object
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/ValidIngredient'
                      type: object
                  type: object
          description: ""
      security:
      - oauth2:
        - service_admin
      - cookieAuth: []
      tags:
      - valid_ingredients
    get:
      parameters:
      - in: path
        name: validIngredientID
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/ValidIngredient'
                      type: object
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/ValidIngredient'
                      type: object
                  type: object
          description: ""
      security:
      - oauth2:
        - household_member
      - cookieAuth: []
      tags:
      - valid_ingredients
    put:
      parameters:
      - in: path
        name: validIngredientID
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ValidIngredientUpdateRequestInput'
          application/xml:
            schema:
              $ref: '#/components/schemas/ValidIngredientUpdateRequestInput'
        required: true
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/ValidIngredient'
                      type: object
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/ValidIngredient'
                      type: object
                  type: object
          description: ""
      security:
      - oauth2:
        - service_admin
      - cookieAuth: []
      tags:
      - valid_ingredients
  /api/v1/valid_ingredients/by_preparation/{validPreparationID}/:
    get:
      parameters:
      - in: path
        name: validPreparationID
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/ValidIngredient'
                      type: object
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/ValidIngredient'
                      type: object
                  type: object
          description: ""
      security:
      - oauth2:
        - household_member
      - cookieAuth: []
      tags:
      - valid_ingredients
  /api/v1/valid_ingredients/random:
    get:
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/ValidIngredient'
                      type: object
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/ValidIngredient'
                      type: object
                  type: object
          description: ""
      security:
      - oauth2:
        - household_member
      - cookieAuth: []
      tags:
      - valid_ingredients
  /api/v1/valid_ingredients/search:
    get:
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/ValidIngredient'
                      type: object
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/ValidIngredient'
                      type: object
                  type: object
          description: ""
      security:
      - oauth2:
        - household_member
      - cookieAuth: []
      tags:
      - valid_ingredients
  /api/v1/valid_instruments/:
    get:
      parameters:
      - in: query
        name: page
        required: true
        schema:
          type: integer
      - in: query
        name: createdBefore
        required: true
        schema:
          type: string
      - in: query
        name: createdAfter
        required: true
        schema:
          type: string
      - in: query
        name: updatedBefore
        required: true
        schema:
          type: string
      - in: query
        name: updatedAfter
        required: true
        schema:
          type: string
      - in: query
        name: includeArchived
        required: true
        schema:
          enum:
          - "true"
          - "false"
          type: string
      - in: query
        name: sortBy
        required: true
        schema:
          enum:
          - asc
          - desc
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      items:
                        $ref: '#/components/schemas/ValidInstrument'
                      type: array
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      items:
                        $ref: '#/components/schemas/ValidInstrument'
                      type: array
                  type: object
          description: ""
      security:
      - oauth2:
        - household_member
      - cookieAuth: []
      tags:
      - valid_instruments
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ValidInstrumentCreationRequestInput'
          application/xml:
            schema:
              $ref: '#/components/schemas/ValidInstrumentCreationRequestInput'
        required: true
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/ValidInstrument'
                      type: object
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/ValidInstrument'
                      type: object
                  type: object
          description: ""
      security:
      - oauth2:
        - service_admin
      - cookieAuth: []
      tags:
      - valid_instruments
  /api/v1/valid_instruments/{validInstrumentID}/:
    delete:
      parameters:
      - in: path
        name: validInstrumentID
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/ValidInstrument'
                      type: object
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/ValidInstrument'
                      type: object
                  type: object
          description: ""
      security:
      - oauth2:
        - service_admin
      - cookieAuth: []
      tags:
      - valid_instruments
    get:
      parameters:
      - in: path
        name: validInstrumentID
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/ValidInstrument'
                      type: object
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/ValidInstrument'
                      type: object
                  type: object
          description: ""
      security:
      - oauth2:
        - household_member
      - cookieAuth: []
      tags:
      - valid_instruments
    put:
      parameters:
      - in: path
        name: validInstrumentID
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ValidInstrumentUpdateRequestInput'
          application/xml:
            schema:
              $ref: '#/components/schemas/ValidInstrumentUpdateRequestInput'
        required: true
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/ValidInstrument'
                      type: object
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/ValidInstrument'
                      type: object
                  type: object
          description: ""
      security:
      - oauth2:
        - service_admin
      - cookieAuth: []
      tags:
      - valid_instruments
  /api/v1/valid_instruments/random:
    get:
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/ValidInstrument'
                      type: object
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/ValidInstrument'
                      type: object
                  type: object
          description: ""
      security:
      - oauth2:
        - household_member
      - cookieAuth: []
      tags:
      - valid_instruments
  /api/v1/valid_instruments/search:
    get:
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/ValidInstrument'
                      type: object
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/ValidInstrument'
                      type: object
                  type: object
          description: ""
      security:
      - oauth2:
        - household_member
      - cookieAuth: []
      tags:
      - valid_instruments
  /api/v1/valid_measurement_conversions/:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ValidMeasurementUnitConversionCreationRequestInput'
          application/xml:
            schema:
              $ref: '#/components/schemas/ValidMeasurementUnitConversionCreationRequestInput'
        required: true
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/ValidMeasurementUnitConversion'
                      type: object
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/ValidMeasurementUnitConversion'
                      type: object
                  type: object
          description: ""
      security:
      - oauth2:
        - service_admin
      - cookieAuth: []
      tags:
      - valid_measurement_conversions
  /api/v1/valid_measurement_conversions/{validMeasurementUnitConversionID}/:
    delete:
      parameters:
      - in: path
        name: validMeasurementUnitConversionID
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/ValidMeasurementUnitConversion'
                      type: object
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/ValidMeasurementUnitConversion'
                      type: object
                  type: object
          description: ""
      security:
      - oauth2:
        - service_admin
      - cookieAuth: []
      tags:
      - valid_measurement_conversions
    get:
      parameters:
      - in: path
        name: validMeasurementUnitConversionID
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/ValidMeasurementUnitConversion'
                      type: object
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/ValidMeasurementUnitConversion'
                      type: object
                  type: object
          description: ""
      security:
      - oauth2:
        - household_member
      - cookieAuth: []
      tags:
      - valid_measurement_conversions
    put:
      parameters:
      - in: path
        name: validMeasurementUnitConversionID
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ValidMeasurementUnitConversionUpdateRequestInput'
          application/xml:
            schema:
              $ref: '#/components/schemas/ValidMeasurementUnitConversionUpdateRequestInput'
        required: true
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/ValidMeasurementUnitConversion'
                      type: object
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/ValidMeasurementUnitConversion'
                      type: object
                  type: object
          description: ""
      security:
      - oauth2:
        - service_admin
      - cookieAuth: []
      tags:
      - valid_measurement_conversions
  /api/v1/valid_measurement_conversions/from_unit/{validMeasurementUnitID}:
    get:
      parameters:
      - in: path
        name: validMeasurementUnitID
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/ValidMeasurementUnitConversion'
                      type: object
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/ValidMeasurementUnitConversion'
                      type: object
                  type: object
          description: ""
      security:
      - oauth2:
        - household_member
      - cookieAuth: []
      tags:
      - valid_measurement_conversions
  /api/v1/valid_measurement_conversions/to_unit/{validMeasurementUnitID}:
    get:
      parameters:
      - in: path
        name: validMeasurementUnitID
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/ValidMeasurementUnitConversion'
                      type: object
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/ValidMeasurementUnitConversion'
                      type: object
                  type: object
          description: ""
      security:
      - oauth2:
        - household_member
      - cookieAuth: []
      tags:
      - valid_measurement_conversions
  /api/v1/valid_measurement_units/:
    get:
      parameters:
      - in: query
        name: page
        required: true
        schema:
          type: integer
      - in: query
        name: createdBefore
        required: true
        schema:
          type: string
      - in: query
        name: createdAfter
        required: true
        schema:
          type: string
      - in: query
        name: updatedBefore
        required: true
        schema:
          type: string
      - in: query
        name: updatedAfter
        required: true
        schema:
          type: string
      - in: query
        name: includeArchived
        required: true
        schema:
          enum:
          - "true"
          - "false"
          type: string
      - in: query
        name: sortBy
        required: true
        schema:
          enum:
          - asc
          - desc
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      items:
                        $ref: '#/components/schemas/ValidMeasurementUnit'
                      type: array
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      items:
                        $ref: '#/components/schemas/ValidMeasurementUnit'
                      type: array
                  type: object
          description: ""
      security:
      - oauth2:
        - household_member
      - cookieAuth: []
      tags:
      - valid_measurement_units
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ValidMeasurementUnitCreationRequestInput'
          application/xml:
            schema:
              $ref: '#/components/schemas/ValidMeasurementUnitCreationRequestInput'
        required: true
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/ValidMeasurementUnit'
                      type: object
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/ValidMeasurementUnit'
                      type: object
                  type: object
          description: ""
      security:
      - oauth2:
        - service_admin
      - cookieAuth: []
      tags:
      - valid_measurement_units
  /api/v1/valid_measurement_units/{validMeasurementUnitID}/:
    delete:
      parameters:
      - in: path
        name: validMeasurementUnitID
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/ValidMeasurementUnit'
                      type: object
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/ValidMeasurementUnit'
                      type: object
                  type: object
          description: ""
      security:
      - oauth2:
        - service_admin
      - cookieAuth: []
      tags:
      - valid_measurement_units
    get:
      parameters:
      - in: path
        name: validMeasurementUnitID
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/ValidMeasurementUnit'
                      type: object
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/ValidMeasurementUnit'
                      type: object
                  type: object
          description: ""
      security:
      - oauth2:
        - household_member
      - cookieAuth: []
      tags:
      - valid_measurement_units
    put:
      parameters:
      - in: path
        name: validMeasurementUnitID
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ValidMeasurementUnitUpdateRequestInput'
          application/xml:
            schema:
              $ref: '#/components/schemas/ValidMeasurementUnitUpdateRequestInput'
        required: true
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/ValidMeasurementUnit'
                      type: object
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/ValidMeasurementUnit'
                      type: object
                  type: object
          description: ""
      security:
      - oauth2:
        - service_admin
      - cookieAuth: []
      tags:
      - valid_measurement_units
  /api/v1/valid_measurement_units/by_ingredient/{validIngredientID}:
    get:
      parameters:
      - in: path
        name: validIngredientID
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/ValidMeasurementUnit'
                      type: object
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/ValidMeasurementUnit'
                      type: object
                  type: object
          description: ""
      security:
      - oauth2:
        - household_member
      - cookieAuth: []
      tags:
      - valid_measurement_units
  /api/v1/valid_measurement_units/search:
    get:
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/ValidMeasurementUnit'
                      type: object
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/ValidMeasurementUnit'
                      type: object
                  type: object
          description: ""
      security:
      - oauth2:
        - household_member
      - cookieAuth: []
      tags:
      - valid_measurement_units
  /api/v1/valid_preparation_instruments/:
    get:
      parameters:
      - in: query
        name: page
        required: true
        schema:
          type: integer
      - in: query
        name: createdBefore
        required: true
        schema:
          type: string
      - in: query
        name: createdAfter
        required: true
        schema:
          type: string
      - in: query
        name: updatedBefore
        required: true
        schema:
          type: string
      - in: query
        name: updatedAfter
        required: true
        schema:
          type: string
      - in: query
        name: includeArchived
        required: true
        schema:
          enum:
          - "true"
          - "false"
          type: string
      - in: query
        name: sortBy
        required: true
        schema:
          enum:
          - asc
          - desc
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      items:
                        $ref: '#/components/schemas/ValidPreparationInstrument'
                      type: array
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      items:
                        $ref: '#/components/schemas/ValidPreparationInstrument'
                      type: array
                  type: object
          description: ""
      security:
      - oauth2:
        - household_member
      - cookieAuth: []
      tags:
      - valid_preparation_instruments
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ValidPreparationInstrumentCreationRequestInput'
          application/xml:
            schema:
              $ref: '#/components/schemas/ValidPreparationInstrumentCreationRequestInput'
        required: true
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/ValidPreparationInstrument'
                      type: object
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/ValidPreparationInstrument'
                      type: object
                  type: object
          description: ""
      security:
      - oauth2:
        - service_admin
      - cookieAuth: []
      tags:
      - valid_preparation_instruments
  /api/v1/valid_preparation_instruments/{validPreparationVesselID}/:
    delete:
      parameters:
      - in: path
        name: validPreparationVesselID
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/ValidPreparationInstrument'
                      type: object
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/ValidPreparationInstrument'
                      type: object
                  type: object
          description: ""
      security:
      - oauth2:
        - service_admin
      - cookieAuth: []
      tags:
      - valid_preparation_instruments
    get:
      parameters:
      - in: path
        name: validPreparationVesselID
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/ValidPreparationInstrument'
                      type: object
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/ValidPreparationInstrument'
                      type: object
                  type: object
          description: ""
      security:
      - oauth2:
        - household_member
      - cookieAuth: []
      tags:
      - valid_preparation_instruments
    put:
      parameters:
      - in: path
        name: validPreparationVesselID
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ValidPreparationInstrumentUpdateRequestInput'
          application/xml:
            schema:
              $ref: '#/components/schemas/ValidPreparationInstrumentUpdateRequestInput'
        required: true
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/ValidPreparationInstrument'
                      type: object
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/ValidPreparationInstrument'
                      type: object
                  type: object
          description: ""
      security:
      - oauth2:
        - service_admin
      - cookieAuth: []
      tags:
      - valid_preparation_instruments
  /api/v1/valid_preparation_instruments/by_instrument/{validInstrumentID}/:
    get:
      parameters:
      - in: path
        name: validInstrumentID
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/ValidPreparationInstrument'
                      type: object
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/ValidPreparationInstrument'
                      type: object
                  type: object
          description: ""
      security:
      - oauth2:
        - household_member
      - cookieAuth: []
      tags:
      - valid_preparation_instruments
  /api/v1/valid_preparation_instruments/by_preparation/{validPreparationID}/:
    get:
      parameters:
      - in: path
        name: validPreparationID
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/ValidPreparationInstrument'
                      type: object
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/ValidPreparationInstrument'
                      type: object
                  type: object
          description: ""
      security:
      - oauth2:
        - household_member
      - cookieAuth: []
      tags:
      - valid_preparation_instruments
  /api/v1/valid_preparation_vessels/:
    get:
      parameters:
      - in: query
        name: page
        required: true
        schema:
          type: integer
      - in: query
        name: createdBefore
        required: true
        schema:
          type: string
      - in: query
        name: createdAfter
        required: true
        schema:
          type: string
      - in: query
        name: updatedBefore
        required: true
        schema:
          type: string
      - in: query
        name: updatedAfter
        required: true
        schema:
          type: string
      - in: query
        name: includeArchived
        required: true
        schema:
          enum:
          - "true"
          - "false"
          type: string
      - in: query
        name: sortBy
        required: true
        schema:
          enum:
          - asc
          - desc
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      items:
                        $ref: '#/components/schemas/ValidPreparationVessel'
                      type: array
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      items:
                        $ref: '#/components/schemas/ValidPreparationVessel'
                      type: array
                  type: object
          description: ""
      security:
      - oauth2:
        - household_member
      - cookieAuth: []
      tags:
      - valid_preparation_vessels
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ValidPreparationVesselCreationRequestInput'
          application/xml:
            schema:
              $ref: '#/components/schemas/ValidPreparationVesselCreationRequestInput'
        required: true
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/ValidPreparationVessel'
                      type: object
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/ValidPreparationVessel'
                      type: object
                  type: object
          description: ""
      security:
      - oauth2:
        - service_admin
      - cookieAuth: []
      tags:
      - valid_preparation_vessels
  /api/v1/valid_preparation_vessels/{validPreparationVesselID}/:
    delete:
      parameters:
      - in: path
        name: validPreparationVesselID
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/ValidPreparationVessel'
                      type: object
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/ValidPreparationVessel'
                      type: object
                  type: object
          description: ""
      security:
      - oauth2:
        - service_admin
      - cookieAuth: []
      tags:
      - valid_preparation_vessels
    get:
      parameters:
      - in: path
        name: validPreparationVesselID
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/ValidPreparationVessel'
                      type: object
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/ValidPreparationVessel'
                      type: object
                  type: object
          description: ""
      security:
      - oauth2:
        - household_member
      - cookieAuth: []
      tags:
      - valid_preparation_vessels
    put:
      parameters:
      - in: path
        name: validPreparationVesselID
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ValidPreparationVesselUpdateRequestInput'
          application/xml:
            schema:
              $ref: '#/components/schemas/ValidPreparationVesselUpdateRequestInput'
        required: true
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/ValidPreparationVessel'
                      type: object
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/ValidPreparationVessel'
                      type: object
                  type: object
          description: ""
      security:
      - oauth2:
        - service_admin
      - cookieAuth: []
      tags:
      - valid_preparation_vessels
  /api/v1/valid_preparation_vessels/by_preparation/{validPreparationID}/:
    get:
      parameters:
      - in: path
        name: validPreparationID
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/ValidPreparationVessel'
                      type: object
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/ValidPreparationVessel'
                      type: object
                  type: object
          description: ""
      security:
      - oauth2:
        - household_member
      - cookieAuth: []
      tags:
      - valid_preparation_vessels
  /api/v1/valid_preparation_vessels/by_vessel/{ValidVesselID}/:
    get:
      parameters:
      - in: path
        name: ValidVesselID
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/ValidPreparationVessel'
                      type: object
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/ValidPreparationVessel'
                      type: object
                  type: object
          description: ""
      security:
      - oauth2:
        - household_member
      - cookieAuth: []
      tags:
      - valid_preparation_vessels
  /api/v1/valid_preparations/:
    get:
      parameters:
      - in: query
        name: page
        required: true
        schema:
          type: integer
      - in: query
        name: createdBefore
        required: true
        schema:
          type: string
      - in: query
        name: createdAfter
        required: true
        schema:
          type: string
      - in: query
        name: updatedBefore
        required: true
        schema:
          type: string
      - in: query
        name: updatedAfter
        required: true
        schema:
          type: string
      - in: query
        name: includeArchived
        required: true
        schema:
          enum:
          - "true"
          - "false"
          type: string
      - in: query
        name: sortBy
        required: true
        schema:
          enum:
          - asc
          - desc
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      items:
                        $ref: '#/components/schemas/ValidPreparation'
                      type: array
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      items:
                        $ref: '#/components/schemas/ValidPreparation'
                      type: array
                  type: object
          description: ""
      security:
      - oauth2:
        - household_member
      - cookieAuth: []
      tags:
      - valid_preparations
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ValidPreparationCreationRequestInput'
          application/xml:
            schema:
              $ref: '#/components/schemas/ValidPreparationCreationRequestInput'
        required: true
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/ValidPreparation'
                      type: object
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/ValidPreparation'
                      type: object
                  type: object
          description: ""
      security:
      - oauth2:
        - service_admin
      - cookieAuth: []
      tags:
      - valid_preparations
  /api/v1/valid_preparations/{validPreparationID}/:
    delete:
      parameters:
      - in: path
        name: validPreparationID
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/ValidPreparation'
                      type: object
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/ValidPreparation'
                      type: object
                  type: object
          description: ""
      security:
      - oauth2:
        - service_admin
      - cookieAuth: []
      tags:
      - valid_preparations
    get:
      parameters:
      - in: path
        name: validPreparationID
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/ValidPreparation'
                      type: object
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/ValidPreparation'
                      type: object
                  type: object
          description: ""
      security:
      - oauth2:
        - household_member
      - cookieAuth: []
      tags:
      - valid_preparations
    put:
      parameters:
      - in: path
        name: validPreparationID
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ValidPreparationUpdateRequestInput'
          application/xml:
            schema:
              $ref: '#/components/schemas/ValidPreparationUpdateRequestInput'
        required: true
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/ValidPreparation'
                      type: object
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/ValidPreparation'
                      type: object
                  type: object
          description: ""
      security:
      - oauth2:
        - service_admin
      - cookieAuth: []
      tags:
      - valid_preparations
  /api/v1/valid_preparations/random:
    get:
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/ValidPreparation'
                      type: object
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/ValidPreparation'
                      type: object
                  type: object
          description: ""
      security:
      - oauth2:
        - household_member
      - cookieAuth: []
      tags:
      - valid_preparations
  /api/v1/valid_preparations/search:
    get:
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/ValidPreparation'
                      type: object
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/ValidPreparation'
                      type: object
                  type: object
          description: ""
      security:
      - oauth2:
        - household_member
      - cookieAuth: []
      tags:
      - valid_preparations
  /api/v1/valid_vessels/:
    get:
      parameters:
      - in: query
        name: page
        required: true
        schema:
          type: integer
      - in: query
        name: createdBefore
        required: true
        schema:
          type: string
      - in: query
        name: createdAfter
        required: true
        schema:
          type: string
      - in: query
        name: updatedBefore
        required: true
        schema:
          type: string
      - in: query
        name: updatedAfter
        required: true
        schema:
          type: string
      - in: query
        name: includeArchived
        required: true
        schema:
          enum:
          - "true"
          - "false"
          type: string
      - in: query
        name: sortBy
        required: true
        schema:
          enum:
          - asc
          - desc
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      items:
                        $ref: '#/components/schemas/ValidVessel'
                      type: array
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      items:
                        $ref: '#/components/schemas/ValidVessel'
                      type: array
                  type: object
          description: ""
      security:
      - oauth2:
        - household_member
      - cookieAuth: []
      tags:
      - valid_vessels
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ValidVesselCreationRequestInput'
          application/xml:
            schema:
              $ref: '#/components/schemas/ValidVesselCreationRequestInput'
        required: true
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/ValidVessel'
                      type: object
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/ValidVessel'
                      type: object
                  type: object
          description: ""
      security:
      - oauth2:
        - service_admin
      - cookieAuth: []
      tags:
      - valid_vessels
  /api/v1/valid_vessels/{validVesselID}/:
    delete:
      parameters:
      - in: path
        name: validVesselID
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/ValidVessel'
                      type: object
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/ValidVessel'
                      type: object
                  type: object
          description: ""
      security:
      - oauth2:
        - service_admin
      - cookieAuth: []
      tags:
      - valid_vessels
    get:
      parameters:
      - in: path
        name: validVesselID
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/ValidVessel'
                      type: object
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/ValidVessel'
                      type: object
                  type: object
          description: ""
      security:
      - oauth2:
        - household_member
      - cookieAuth: []
      tags:
      - valid_vessels
    put:
      parameters:
      - in: path
        name: validVesselID
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ValidVesselUpdateRequestInput'
          application/xml:
            schema:
              $ref: '#/components/schemas/ValidVesselUpdateRequestInput'
        required: true
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/ValidVessel'
                      type: object
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/ValidVessel'
                      type: object
                  type: object
          description: ""
      security:
      - oauth2:
        - service_admin
      - cookieAuth: []
      tags:
      - valid_vessels
  /api/v1/valid_vessels/random:
    get:
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/ValidVessel'
                      type: object
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/ValidVessel'
                      type: object
                  type: object
          description: ""
      security:
      - oauth2:
        - household_member
      - cookieAuth: []
      tags:
      - valid_vessels
  /api/v1/valid_vessels/search:
    get:
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/ValidVessel'
                      type: object
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/ValidVessel'
                      type: object
                  type: object
          description: ""
      security:
      - oauth2:
        - household_member
      - cookieAuth: []
      tags:
      - valid_vessels
  /api/v1/webhooks/:
    get:
      parameters:
      - in: query
        name: page
        required: true
        schema:
          type: integer
      - in: query
        name: createdBefore
        required: true
        schema:
          type: string
      - in: query
        name: createdAfter
        required: true
        schema:
          type: string
      - in: query
        name: updatedBefore
        required: true
        schema:
          type: string
      - in: query
        name: updatedAfter
        required: true
        schema:
          type: string
      - in: query
        name: includeArchived
        required: true
        schema:
          enum:
          - "true"
          - "false"
          type: string
      - in: query
        name: sortBy
        required: true
        schema:
          enum:
          - asc
          - desc
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      items:
                        $ref: '#/components/schemas/Webhook'
                      type: array
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      items:
                        $ref: '#/components/schemas/Webhook'
                      type: array
                  type: object
          description: ""
      security:
      - oauth2:
        - household_member
      - cookieAuth: []
      tags:
      - webhooks
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebhookCreationRequestInput'
          application/xml:
            schema:
              $ref: '#/components/schemas/WebhookCreationRequestInput'
        required: true
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/Webhook'
                      type: object
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/Webhook'
                      type: object
                  type: object
          description: ""
      security:
      - oauth2:
        - household_admin
      - cookieAuth: []
      tags:
      - webhooks
  /api/v1/webhooks/{webhookID}/:
    delete:
      parameters:
      - in: path
        name: webhookID
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/Webhook'
                      type: object
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/Webhook'
                      type: object
                  type: object
          description: ""
      security:
      - oauth2:
        - household_admin
      - cookieAuth: []
      tags:
      - webhooks
    get:
      parameters:
      - in: path
        name: webhookID
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/Webhook'
                      type: object
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/Webhook'
                      type: object
                  type: object
          description: ""
      security:
      - oauth2:
        - household_member
      - cookieAuth: []
      tags:
      - webhooks
  /api/v1/webhooks/{webhookID}/trigger_events:
    post:
      parameters:
      - in: path
        name: webhookID
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebhookTriggerEventCreationRequestInput'
          application/xml:
            schema:
              $ref: '#/components/schemas/WebhookTriggerEventCreationRequestInput'
        required: true
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/WebhookTriggerEvent'
                      type: object
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/WebhookTriggerEvent'
                      type: object
                  type: object
          description: ""
      security:
      - oauth2:
        - household_admin
      - cookieAuth: []
      tags:
      - webhooks
  /api/v1/webhooks/{webhookID}/trigger_events/{webhookTriggerEventID}/:
    delete:
      parameters:
      - in: path
        name: webhookID
        required: true
        schema:
          type: string
      - in: path
        name: webhookTriggerEventID
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/WebhookTriggerEvent'
                      type: object
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/WebhookTriggerEvent'
                      type: object
                  type: object
          description: ""
      security:
      - oauth2:
        - household_admin
      - cookieAuth: []
      tags:
      - webhooks
      - webhook_trigger_events
  /api/v1/workers/finalize_meal_plans:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FinalizeMealPlansRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/FinalizeMealPlansRequest'
        required: true
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/FinalizeMealPlansRequest'
                      type: object
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/FinalizeMealPlansRequest'
                      type: object
                  type: object
          description: ""
      security:
      - oauth2: null
      - cookieAuth: []
      tags:
      - workers
  /api/v1/workers/meal_plan_grocery_list_init:
    post:
      security:
      - oauth2: null
      - cookieAuth: []
      tags:
      - workers
  /api/v1/workers/meal_plan_tasks:
    post:
      security:
      - oauth2: null
      - cookieAuth: []
      tags:
      - workers
  /auth/{auth_provider}:
    get:
      security:
      - oauth2: null
      - cookieAuth: []
      tags:
      - auth
  /auth/{auth_provider}/callback:
    get:
      security:
      - oauth2: null
      - cookieAuth: []
      tags:
      - auth
  /auth/status:
    get:
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/UserStatusResponse'
                      type: object
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/UserStatusResponse'
                      type: object
                  type: object
          description: ""
      security:
      - oauth2: null
      - cookieAuth: []
      tags:
      - auth
  /oauth2/authorize:
    get:
      security:
      - oauth2: null
      - cookieAuth: []
      tags:
      - oauth2
  /oauth2/token:
    post:
      security:
      - oauth2: null
      - cookieAuth: []
      tags:
      - oauth2
  /users/:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRegistrationInput'
          application/xml:
            schema:
              $ref: '#/components/schemas/UserRegistrationInput'
        required: true
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/User'
                      type: object
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/User'
                      type: object
                  type: object
          description: ""
      security:
      - oauth2: null
      - cookieAuth: []
      tags:
      - users
  /users/email_address/verify:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmailAddressVerificationRequestInput'
          application/xml:
            schema:
              $ref: '#/components/schemas/EmailAddressVerificationRequestInput'
        required: true
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/User'
                      type: object
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/User'
                      type: object
                  type: object
          description: ""
      tags:
      - users
      - email_address
  /users/login:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserLoginInput'
          application/xml:
            schema:
              $ref: '#/components/schemas/UserLoginInput'
        required: true
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/UserStatusResponse'
                      type: object
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/UserStatusResponse'
                      type: object
                  type: object
          description: ""
      tags:
      - users
  /users/login/admin:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserLoginInput'
          application/xml:
            schema:
              $ref: '#/components/schemas/UserLoginInput'
        required: true
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/UserStatusResponse'
                      type: object
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/UserStatusResponse'
                      type: object
                  type: object
          description: ""
      tags:
      - users
  /users/logout:
    post:
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/UserStatusResponse'
                      type: object
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/UserStatusResponse'
                      type: object
                  type: object
          description: ""
      security:
      - oauth2: null
      - cookieAuth: []
      tags:
      - users
  /users/password/reset:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordResetTokenCreationRequestInput'
          application/xml:
            schema:
              $ref: '#/components/schemas/PasswordResetTokenCreationRequestInput'
        required: true
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/PasswordResetToken'
                      type: object
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/PasswordResetToken'
                      type: object
                  type: object
          description: ""
      tags:
      - users
      - password
  /users/password/reset/redeem:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordResetTokenRedemptionRequestInput'
          application/xml:
            schema:
              $ref: '#/components/schemas/PasswordResetTokenRedemptionRequestInput'
        required: true
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/User'
                      type: object
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/User'
                      type: object
                  type: object
          description: ""
      tags:
      - users
      - password
  /users/totp_secret/verify:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmailAddressVerificationRequestInput'
          application/xml:
            schema:
              $ref: '#/components/schemas/EmailAddressVerificationRequestInput'
        required: true
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/User'
                      type: object
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/User'
                      type: object
                  type: object
          description: ""
      tags:
      - users
      - totp_secret
  /users/username/reminder:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UsernameReminderRequestInput'
          application/xml:
            schema:
              $ref: '#/components/schemas/UsernameReminderRequestInput'
        required: true
      responses:
        default:
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/User'
                      type: object
                  type: object
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/APIResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/User'
                      type: object
                  type: object
          description: ""
      tags:
      - users
components:
  schemas:
    "":
      properties: {}
      type: ""
    APIError:
      properties:
        code:
          type: string
        message:
          type: string
      type: object
    APIResponse:
      properties:
        details:
          $ref: '#/components/schemas/ResponseDetails'
        error:
          $ref: '#/components/schemas/APIError'
        pagination:
          $ref: '#/components/schemas/Pagination'
      type: object
    AuditLogEntry:
      properties:
        belongsToHousehold:
          type: string
        belongsToUser:
          type: string
        changes:
          type: object
        createdAt:
          type: string
        eventType:
          type: string
        id:
          type: string
        relevantID:
          type: string
        resourceType:
          type: string
      type: object
    AvatarUpdateInput:
      properties:
        base64EncodedData:
          type: string
      type: object
    ChangeActiveHouseholdInput:
      properties:
        householdID:
          type: string
      type: object
    ChangeLog:
      properties:
        newValue:
          type: string
        oldValue:
          type: string
      type: object
    EmailAddressVerificationRequestInput:
      properties:
        emailVerificationToken:
          type: string
      type: object
    FinalizeMealPlansRequest:
      properties:
        returnCount:
          type: boolean
      type: object
    FinalizeMealPlansResponse:
      properties:
        count:
          type: integer
      type: object
    FinalizedMealPlanDatabaseResult:
      properties:
        MealID:
          type: string
        MealPlanEventID:
          type: string
        MealPlanID:
          type: string
        MealPlanOptionID:
          type: string
        RecipeIDs:
          type: string
      type: object
    Household:
      properties:
        addressLine1:
          type: string
        addressLine2:
          type: string
        archivedAt:
          type: string
        belongsToUser:
          type: string
        billingStatus:
          type: string
        city:
          type: string
        contactPhone:
          type: string
        country:
          type: string
        createdAt:
          type: string
        id:
          type: string
        lastUpdatedAt:
          type: string
        latitude:
          type: number
        longitude:
          type: number
        members:
          $ref: '#/components/schemas/HouseholdUserMembershipWithUser'
        name:
          type: string
        paymentProcessorCustomer:
          type: string
        state:
          type: string
        subscriptionPlanID:
          type: string
        zipCode:
          type: string
      type: object
    HouseholdCreationRequestInput:
      properties:
        addressLine1:
          type: string
        addressLine2:
          type: string
        city:
          type: string
        contactPhone:
          type: string
        country:
          type: string
        latitude:
          type: number
        longitude:
          type: number
        name:
          type: string
        state:
          type: string
        zipCode:
          type: string
      type: object
    HouseholdInstrumentOwnership:
      properties:
        archivedAt:
          type: string
        belongsToHousehold:
          type: string
        createdAt:
          type: string
        id:
          type: string
        instrument:
          $ref: '#/components/schemas/ValidInstrument'
        lastUpdatedAt:
          type: string
        notes:
          type: string
        quantity:
          type: integer
      type: object
    HouseholdInstrumentOwnershipCreationRequestInput:
      properties:
        belongsToHousehold:
          type: string
        notes:
          type: string
        quantity:
          type: integer
        validInstrumentID:
          type: string
      type: object
    HouseholdInstrumentOwnershipUpdateRequestInput:
      properties:
        notes:
          type: string
        quantity:
          type: integer
        validInstrumentID:
          type: string
      type: object
    HouseholdInvitation:
      properties:
        archivedAt:
          type: string
        createdAt:
          type: string
        destinationHousehold:
          $ref: '#/components/schemas/Household'
        expiresAt:
          type: string
        fromUser:
          $ref: '#/components/schemas/User'
        id:
          type: string
        lastUpdatedAt:
          type: string
        note:
          type: string
        status:
          type: string
        statusNote:
          type: string
        toEmail:
          type: string
        toName:
          type: string
        toUser:
          type: string
        token:
          type: string
      type: object
    HouseholdInvitationCreationRequestInput:
      properties:
        expiresAt:
          type: string
        note:
          type: string
        toEmail:
          type: string
        toName:
          type: string
      type: object
    HouseholdInvitationUpdateRequestInput:
      properties:
        note:
          type: string
        token:
          type: string
      type: object
    HouseholdOwnershipTransferInput:
      properties:
        currentOwner:
          type: string
        newOwner:
          type: string
        reason:
          type: string
      type: object
    HouseholdUpdateRequestInput:
      properties:
        addressLine1:
          type: string
        addressLine2:
          type: string
        city:
          type: string
        contactPhone:
          type: string
        country:
          type: string
        latitude:
          type: number
        longitude:
          type: number
        name:
          type: string
        state:
          type: string
        zipCode:
          type: string
      type: object
    HouseholdUserMembership:
      properties:
        archivedAt:
          type: string
        belongsToHousehold:
          type: string
        belongsToUser:
          type: string
        createdAt:
          type: string
        defaultHousehold:
          type: boolean
        householdRole:
          type: string
        id:
          type: string
        lastUpdatedAt:
          type: string
      type: object
    HouseholdUserMembershipCreationRequestInput:
      properties:
        reason:
          type: string
        userID:
          type: string
      type: object
    HouseholdUserMembershipWithUser:
      properties:
        archivedAt:
          type: string
        belongsToHousehold:
          type: string
        belongsToUser:
          $ref: '#/components/schemas/User'
        createdAt:
          type: string
        defaultHousehold:
          type: boolean
        householdRole:
          type: string
        id:
          type: string
        lastUpdatedAt:
          type: string
      type: object
    Meal:
      properties:
        archivedAt:
          type: string
        components:
          $ref: '#/components/schemas/MealComponent'
        createdAt:
          type: string
        createdByUser:
          type: string
        description:
          type: string
        eligibleForMealPlans:
          type: boolean
        id:
          type: string
        lastUpdatedAt:
          type: string
        maximumEstimatedPortions:
          type: number
        minimumEstimatedPortions:
          type: number
        name:
          type: string
      type: object
    MealComponent:
      properties:
        componentType:
          type: string
        recipe:
          $ref: '#/components/schemas/Recipe'
        recipeScale:
          type: number
      type: object
    MealComponentCreationRequestInput:
      properties:
        componentType:
          type: string
        recipeID:
          type: string
        recipeScale:
          type: number
      type: object
    MealComponentUpdateRequestInput:
      properties:
        componentType:
          type: string
        recipeID:
          type: string
        recipeScale:
          type: number
      type: object
    MealCreationRequestInput:
      properties:
        description:
          type: string
        eligibleForMealPlans:
          type: boolean
        maximumEstimatedPortions:
          type: number
        minimumEstimatedPortions:
          type: number
        name:
          type: string
        recipes:
          $ref: '#/components/schemas/MealComponentCreationRequestInput'
      type: object
    MealPlan:
      properties:
        archivedAt:
          type: string
        belongsToHousehold:
          type: string
        createdAt:
          type: string
        createdBy:
          type: string
        electionMethod:
          type: string
        events:
          $ref: '#/components/schemas/MealPlanEvent'
        groceryListInitialized:
          type: boolean
        id:
          type: string
        lastUpdatedAt:
          type: string
        notes:
          type: string
        status:
          type: string
        tasksCreated:
          type: boolean
        votingDeadline:
          type: string
      type: object
    MealPlanCreationRequestInput:
      properties:
        electionMethod:
          type: string
        events:
          $ref: '#/components/schemas/MealPlanEventCreationRequestInput'
        notes:
          type: string
        votingDeadline:
          type: string
      type: object
    MealPlanEvent:
      properties:
        archivedAt:
          type: string
        belongsToMealPlan:
          type: string
        createdAt:
          type: string
        endsAt:
          type: string
        id:
          type: string
        lastUpdatedAt:
          type: string
        mealName:
          type: string
        notes:
          type: string
        options:
          $ref: '#/components/schemas/MealPlanOption'
        startsAt:
          type: string
      type: object
    MealPlanEventCreationRequestInput:
      properties:
        endsAt:
          type: string
        mealName:
          type: string
        notes:
          type: string
        options:
          $ref: '#/components/schemas/MealPlanOptionCreationRequestInput'
        startsAt:
          type: string
      type: object
    MealPlanEventUpdateRequestInput:
      properties:
        endsAt:
          type: string
        mealName:
          type: string
        notes:
          type: string
        startsAt:
          type: string
      type: object
    MealPlanGroceryListItem:
      properties:
        archivedAt:
          type: string
        belongsToMealPlan:
          type: string
        createdAt:
          type: string
        id:
          type: string
        ingredient:
          $ref: '#/components/schemas/ValidIngredient'
        lastUpdatedAt:
          type: string
        maximumQuantityNeeded:
          type: number
        measurementUnit:
          $ref: '#/components/schemas/ValidMeasurementUnit'
        minimumQuantityNeeded:
          type: number
        purchasePrice:
          type: number
        purchasedMeasurementUnit:
          $ref: '#/components/schemas/ValidMeasurementUnit'
        purchasedUPC:
          type: string
        quantityPurchased:
          type: number
        status:
          type: string
        statusExplanation:
          type: string
      type: object
    MealPlanGroceryListItemCreationRequestInput:
      properties:
        belongsToMealPlan:
          type: string
        maximumQuantityNeeded:
          type: number
        minimumQuantityNeeded:
          type: number
        purchasePrice:
          type: number
        purchasedMeasurementUnitID:
          type: string
        purchasedUPC:
          type: string
        quantityPurchased:
          type: number
        status:
          type: string
        statusExplanation:
          type: string
        validIngredientID:
          type: string
        validMeasurementUnitID:
          type: string
      type: object
    MealPlanGroceryListItemUpdateRequestInput:
      properties:
        belongsToMealPlan:
          type: string
        maximumQuantityNeeded:
          type: number
        minimumQuantityNeeded:
          type: number
        purchasePrice:
          type: number
        purchasedMeasurementUnitID:
          type: string
        purchasedUPC:
          type: string
        quantityPurchased:
          type: number
        status:
          type: string
        statusExplanation:
          type: string
        validIngredientID:
          type: string
        validMeasurementUnitID:
          type: string
      type: object
    MealPlanOption:
      properties:
        archivedAt:
          type: string
        assignedCook:
          type: string
        assignedDishwasher:
          type: string
        belongsToMealPlanEvent:
          type: string
        chosen:
          type: boolean
        createdAt:
          type: string
        id:
          type: string
        lastUpdatedAt:
          type: string
        meal:
          $ref: '#/components/schemas/Meal'
        mealScale:
          type: number
        notes:
          type: string
        tieBroken:
          type: boolean
        votes:
          $ref: '#/components/schemas/MealPlanOptionVote'
      type: object
    MealPlanOptionCreationRequestInput:
      properties:
        assignedCook:
          type: string
        assignedDishwasher:
          type: string
        mealID:
          type: string
        mealScale:
          type: number
        notes:
          type: string
      type: object
    MealPlanOptionUpdateRequestInput:
      properties:
        assignedCook:
          type: string
        assignedDishwasher:
          type: string
        mealID:
          type: string
        mealScale:
          type: number
        notes:
          type: string
      type: object
    MealPlanOptionVote:
      properties:
        abstain:
          type: boolean
        archivedAt:
          type: string
        belongsToMealPlanOption:
          type: string
        byUser:
          type: string
        createdAt:
          type: string
        id:
          type: string
        lastUpdatedAt:
          type: string
        notes:
          type: string
        rank:
          type: integer
      type: object
    MealPlanOptionVoteCreationInput:
      properties:
        abstain:
          type: boolean
        belongsToMealPlanOption:
          type: string
        notes:
          type: string
        rank:
          type: integer
      type: object
    MealPlanOptionVoteCreationRequestInput:
      properties:
        votes:
          $ref: '#/components/schemas/MealPlanOptionVoteCreationInput'
      type: object
    MealPlanOptionVoteUpdateRequestInput:
      properties:
        abstain:
          type: boolean
        belongsToMealPlanOption:
          type: string
        notes:
          type: string
        rank:
          type: integer
      type: object
    MealPlanTask:
      properties:
        assignedToUser:
          type: string
        completedAt:
          type: string
        createdAt:
          type: string
        creationExplanation:
          type: string
        id:
          type: string
        lastUpdatedAt:
          type: string
        mealPlanOption:
          $ref: '#/components/schemas/MealPlanOption'
        recipePrepTask:
          $ref: '#/components/schemas/RecipePrepTask'
        status:
          type: string
        statusExplanation:
          type: string
      type: object
    MealPlanTaskCreationRequestInput:
      properties:
        assignedToUser:
          type: string
        creationExplanation:
          type: string
        mealPlanOptionID:
          type: string
        recipePrepTaskID:
          type: string
        status:
          type: string
        statusExplanation:
          type: string
      type: object
    MealPlanTaskDatabaseCreationEstimate:
      properties:
        creationExplanation:
          type: string
      type: object
    MealPlanTaskStatusChangeRequestInput:
      properties:
        assignedToUser:
          type: string
        status:
          type: string
        statusExplanation:
          type: string
      type: object
    MealPlanUpdateRequestInput:
      properties:
        notes:
          type: string
        votingDeadline:
          type: string
      type: object
    MealSearchSubset:
      properties:
        description:
          type: string
        id:
          type: string
        name:
          type: string
        recipes:
          $ref: '#/components/schemas/NamedID'
      type: object
    MealUpdateRequestInput:
      properties:
        description:
          type: string
        eligibleForMealPlans:
          type: boolean
        maximumEstimatedPortions:
          type: number
        minimumEstimatedPortions:
          type: number
        name:
          type: string
        recipes:
          $ref: '#/components/schemas/MealComponentUpdateRequestInput'
      type: object
    MissingVote:
      properties:
        eventID:
          type: string
        optionID:
          type: string
        userID:
          type: string
      type: object
    ModifyUserPermissionsInput:
      properties:
        newRoles:
          type: string
        reason:
          type: string
      type: object
    NamedID:
      properties:
        id:
          type: string
        name:
          type: string
      type: object
    OAuth2Client:
      properties:
        archivedAt:
          type: string
        clientID:
          type: string
        clientSecret:
          type: string
        createdAt:
          type: string
        description:
          type: string
        id:
          type: string
        name:
          type: string
      type: object
    OAuth2ClientCreationRequestInput:
      properties:
        description:
          type: string
        name:
          type: string
      type: object
    OAuth2ClientCreationResponse:
      properties:
        clientID:
          type: string
        clientSecret:
          type: string
        description:
          type: string
        id:
          type: string
        name:
          type: string
      type: object
    OAuth2ClientToken:
      properties:
        access:
          type: string
        accessCreatedAt:
          type: string
        accessExpiresIn:
          type: string
        belongsToUser:
          type: string
        clientID:
          type: string
        code:
          type: string
        codeChallenge:
          type: string
        codeChallengeMethod:
          type: string
        codeCreatedAt:
          type: string
        codeExpiresIn:
          type: string
        id:
          type: string
        redirectURI:
          type: string
        refresh:
          type: string
        refreshCreatedAt:
          type: string
        refreshExpiresIn:
          type: string
        scope:
          type: string
      type: object
    Pagination:
      properties:
        filteredCount:
          type: integer
        limit:
          type: integer
        page:
          type: integer
        totalCount:
          type: integer
      type: object
    PasswordResetToken:
      properties:
        archivedAt:
          type: string
        belongsToUser:
          type: string
        createdAt:
          type: string
        expiresAt:
          type: string
        id:
          type: string
        lastUpdatedAt:
          type: string
        token:
          type: string
      type: object
    PasswordResetTokenCreationRequestInput:
      properties:
        emailAddress:
          type: string
      type: object
    PasswordResetTokenRedemptionRequestInput:
      properties:
        newPassword:
          type: string
        token:
          type: string
      type: object
    PasswordUpdateInput:
      properties:
        currentPassword:
          type: string
        newPassword:
          type: string
        totpToken:
          type: string
      type: object
    QueryFilter:
      properties:
        createdAfter:
          type: string
        createdBefore:
          type: string
        includeArchived:
          type: boolean
        limit:
          type: integer
        page:
          type: integer
        sortBy:
          type: string
        updatedAfter:
          type: string
        updatedBefore:
          type: string
      type: object
    Recipe:
      properties:
        archivedAt:
          type: string
        createdAt:
          type: string
        createdByUser:
          type: string
        description:
          type: string
        eligibleForMeals:
          type: boolean
        id:
          type: string
        inspiredByRecipeID:
          type: string
        lastUpdatedAt:
          type: string
        maximumEstimatedPortions:
          type: number
        media:
          $ref: '#/components/schemas/RecipeMedia'
        minimumEstimatedPortions:
          type: number
        name:
          type: string
        pluralPortionName:
          type: string
        portionName:
          type: string
        prepTasks:
          $ref: '#/components/schemas/RecipePrepTask'
        sealOfApproval:
          type: boolean
        slug:
          type: string
        source:
          type: string
        steps:
          $ref: '#/components/schemas/RecipeStep'
        supportingRecipes:
          $ref: '#/components/schemas/Recipe'
        yieldsComponentType:
          type: string
      type: object
    RecipeCreationRequestInput:
      properties:
        alsoCreateMeal:
          type: boolean
        description:
          type: string
        eligibleForMeals:
          type: boolean
        inspiredByRecipeID:
          type: string
        maximumEstimatedPortions:
          type: number
        minimumEstimatedPortions:
          type: number
        name:
          type: string
        pluralPortionName:
          type: string
        portionName:
          type: string
        prepTasks:
          $ref: '#/components/schemas/RecipePrepTaskWithinRecipeCreationRequestInput'
        sealOfApproval:
          type: boolean
        slug:
          type: string
        source:
          type: string
        steps:
          $ref: '#/components/schemas/RecipeStepCreationRequestInput'
        yieldsComponentType:
          type: string
      type: object
    RecipeMedia:
      properties:
        archivedAt:
          type: string
        belongsToRecipe:
          type: string
        belongsToRecipeStep:
          type: string
        createdAt:
          type: string
        externalPath:
          type: string
        id:
          type: string
        index:
          type: integer
        internalPath:
          type: string
        lastUpdatedAt:
          type: string
        mimeType:
          type: string
      type: object
    RecipeMediaCreationRequestInput:
      properties:
        belongsToRecipe:
          type: string
        belongsToRecipeStep:
          type: string
        externalPath:
          type: string
        index:
          type: integer
        internalPath:
          type: string
        mimeType:
          type: string
      type: object
    RecipeMediaUpdateRequestInput:
      properties:
        belongsToRecipe:
          type: string
        belongsToRecipeStep:
          type: string
        externalPath:
          type: string
        index:
          type: integer
        internalPath:
          type: string
        mimeType:
          type: string
      type: object
    RecipePrepTask:
      properties:
        archivedAt:
          type: string
        belongsToRecipe:
          type: string
        createdAt:
          type: string
        description:
          type: string
        explicitStorageInstructions:
          type: string
        id:
          type: string
        lastUpdatedAt:
          type: string
        maximumStorageTemperatureInCelsius:
          type: number
        maximumTimeBufferBeforeRecipeInSeconds:
          type: integer
        minimumStorageTemperatureInCelsius:
          type: number
        minimumTimeBufferBeforeRecipeInSeconds:
          type: integer
        name:
          type: string
        notes:
          type: string
        optional:
          type: boolean
        recipeSteps:
          $ref: '#/components/schemas/RecipePrepTaskStep'
        storageType:
          type: string
      type: object
    RecipePrepTaskCreationRequestInput:
      properties:
        belongsToRecipe:
          type: string
        description:
          type: string
        explicitStorageInstructions:
          type: string
        maximumStorageTemperatureInCelsius:
          type: number
        maximumTimeBufferBeforeRecipeInSeconds:
          type: integer
        minimumStorageTemperatureInCelsius:
          type: number
        minimumTimeBufferBeforeRecipeInSeconds:
          type: integer
        name:
          type: string
        notes:
          type: string
        optional:
          type: boolean
        recipeSteps:
          $ref: '#/components/schemas/RecipePrepTaskStepCreationRequestInput'
        storageType:
          type: string
      type: object
    RecipePrepTaskStep:
      properties:
        belongsToRecipeStep:
          type: string
        belongsToRecipeStepTask:
          type: string
        id:
          type: string
        satisfiesRecipeStep:
          type: boolean
      type: object
    RecipePrepTaskStepCreationRequestInput:
      properties:
        belongsToRecipeStep:
          type: string
        satisfiesRecipeStep:
          type: boolean
      type: object
    RecipePrepTaskStepUpdateRequestInput:
      properties:
        belongsToRecipeStep:
          type: string
        belongsToRecipeStepTask:
          type: string
        satisfiesRecipeStep:
          type: boolean
      type: object
    RecipePrepTaskStepWithinRecipeCreationRequestInput:
      properties:
        belongsToRecipeStepIndex:
          type: integer
        satisfiesRecipeStep:
          type: boolean
      type: object
    RecipePrepTaskUpdateRequestInput:
      properties:
        belongsToRecipe:
          type: string
        description:
          type: string
        explicitStorageInstructions:
          type: string
        maximumStorageTemperatureInCelsius:
          type: number
        maximumTimeBufferBeforeRecipeInSeconds:
          type: integer
        minimumStorageTemperatureInCelsius:
          type: number
        minimumTimeBufferBeforeRecipeInSeconds:
          type: integer
        name:
          type: string
        notes:
          type: string
        optional:
          type: boolean
        recipeSteps:
          $ref: '#/components/schemas/RecipePrepTaskStepUpdateRequestInput'
        storageType:
          type: string
      type: object
    RecipePrepTaskWithinRecipeCreationRequestInput:
      properties:
        belongsToRecipe:
          type: string
        description:
          type: string
        explicitStorageInstructions:
          type: string
        maximumStorageTemperatureInCelsius:
          type: number
        maximumTimeBufferBeforeRecipeInSeconds:
          type: integer
        minimumStorageTemperatureInCelsius:
          type: number
        minimumTimeBufferBeforeRecipeInSeconds:
          type: integer
        name:
          type: string
        notes:
          type: string
        optional:
          type: boolean
        recipeSteps:
          $ref: '#/components/schemas/RecipePrepTaskStepWithinRecipeCreationRequestInput'
        storageType:
          type: string
      type: object
    RecipeRating:
      properties:
        archivedAt:
          type: string
        byUser:
          type: string
        cleanup:
          type: number
        createdAt:
          type: string
        difficulty:
          type: number
        id:
          type: string
        instructions:
          type: number
        lastUpdatedAt:
          type: string
        notes:
          type: string
        overall:
          type: number
        recipeID:
          type: string
        taste:
          type: number
      type: object
    RecipeRatingCreationRequestInput:
      properties:
        byUser:
          type: string
        cleanup:
          type: number
        difficulty:
          type: number
        instructions:
          type: number
        notes:
          type: string
        overall:
          type: number
        recipeID:
          type: string
        taste:
          type: number
      type: object
    RecipeRatingUpdateRequestInput:
      properties:
        byUser:
          type: string
        cleanup:
          type: number
        difficulty:
          type: number
        instructions:
          type: number
        notes:
          type: string
        overall:
          type: number
        recipeID:
          type: string
        taste:
          type: number
      type: object
    RecipeSearchSubset:
      properties:
        description:
          type: string
        id:
          type: string
        name:
          type: string
        steps:
          $ref: '#/components/schemas/RecipeStepSearchSubset'
      type: object
    RecipeStep:
      properties:
        archivedAt:
          type: string
        belongsToRecipe:
          type: string
        completionConditions:
          $ref: '#/components/schemas/RecipeStepCompletionCondition'
        conditionExpression:
          type: string
        createdAt:
          type: string
        explicitInstructions:
          type: string
        id:
          type: string
        index:
          type: integer
        ingredients:
          $ref: '#/components/schemas/RecipeStepIngredient'
        instruments:
          $ref: '#/components/schemas/RecipeStepInstrument'
        lastUpdatedAt:
          type: string
        maximumEstimatedTimeInSeconds:
          type: integer
        maximumTemperatureInCelsius:
          type: number
        media:
          $ref: '#/components/schemas/RecipeMedia'
        minimumEstimatedTimeInSeconds:
          type: integer
        minimumTemperatureInCelsius:
          type: number
        notes:
          type: string
        optional:
          type: boolean
        preparation:
          $ref: '#/components/schemas/ValidPreparation'
        products:
          $ref: '#/components/schemas/RecipeStepProduct'
        startTimerAutomatically:
          type: boolean
        vessels:
          $ref: '#/components/schemas/RecipeStepVessel'
      type: object
    RecipeStepCompletionCondition:
      properties:
        archivedAt:
          type: string
        belongsToRecipeStep:
          type: string
        createdAt:
          type: string
        id:
          type: string
        ingredientState:
          $ref: '#/components/schemas/ValidIngredientState'
        ingredients:
          $ref: '#/components/schemas/RecipeStepCompletionConditionIngredient'
        lastUpdatedAt:
          type: string
        notes:
          type: string
        optional:
          type: boolean
      type: object
    RecipeStepCompletionConditionCreationRequestInput:
      properties:
        belongsToRecipeStep:
          type: string
        ingredientState:
          type: string
        ingredients:
          type: integer
        notes:
          type: string
        optional:
          type: boolean
      type: object
    RecipeStepCompletionConditionForExistingRecipeCreationRequestInput:
      properties:
        belongsToRecipeStep:
          type: string
        ingredientState:
          type: string
        ingredients:
          $ref: '#/components/schemas/RecipeStepCompletionConditionIngredientForExistingRecipeCreationRequestInput'
        notes:
          type: string
        optional:
          type: boolean
      type: object
    RecipeStepCompletionConditionIngredient:
      properties:
        archivedAt:
          type: string
        belongsToRecipeStepCompletionCondition:
          type: string
        createdAt:
          type: string
        id:
          type: string
        lastUpdatedAt:
          type: string
        recipeStepIngredient:
          type: string
      type: object
    RecipeStepCompletionConditionIngredientCreationRequestInput:
      properties:
        recipeStepIngredient:
          type: string
      type: object
    RecipeStepCompletionConditionIngredientForExistingRecipeCreationRequestInput:
      properties:
        recipeStepIngredient:
          type: string
      type: object
    RecipeStepCompletionConditionUpdateRequestInput:
      properties:
        belongsToRecipeStep:
          type: string
        ingredientState:
          type: string
        notes:
          type: string
        optional:
          type: boolean
      type: object
    RecipeStepCreationRequestInput:
      properties:
        completionConditions:
          $ref: '#/components/schemas/RecipeStepCompletionConditionCreationRequestInput'
        conditionExpression:
          type: string
        explicitInstructions:
          type: string
        index:
          type: integer
        ingredients:
          $ref: '#/components/schemas/RecipeStepIngredientCreationRequestInput'
        instruments:
          $ref: '#/components/schemas/RecipeStepInstrumentCreationRequestInput'
        maximumEstimatedTimeInSeconds:
          type: integer
        maximumTemperatureInCelsius:
          type: number
        minimumEstimatedTimeInSeconds:
          type: integer
        minimumTemperatureInCelsius:
          type: number
        notes:
          type: string
        optional:
          type: boolean
        preparationID:
          type: string
        products:
          $ref: '#/components/schemas/RecipeStepProductCreationRequestInput'
        startTimerAutomatically:
          type: boolean
        vessels:
          $ref: '#/components/schemas/RecipeStepVesselCreationRequestInput'
      type: object
    RecipeStepIngredient:
      properties:
        archivedAt:
          type: string
        belongsToRecipeStep:
          type: string
        createdAt:
          type: string
        id:
          type: string
        ingredient:
          $ref: '#/components/schemas/ValidIngredient'
        ingredientNotes:
          type: string
        lastUpdatedAt:
          type: string
        maximumQuantity:
          type: number
        measurementUnit:
          $ref: '#/components/schemas/ValidMeasurementUnit'
        minimumQuantity:
          type: number
        name:
          type: string
        optionIndex:
          type: integer
        optional:
          type: boolean
        productOfRecipeID:
          type: string
        productPercentageToUse:
          type: number
        quantityNotes:
          type: string
        recipeStepProductID:
          type: string
        toTaste:
          type: boolean
        vesselIndex:
          type: integer
      type: object
    RecipeStepIngredientCreationRequestInput:
      properties:
        ingredientID:
          type: string
        ingredientNotes:
          type: string
        maximumQuantity:
          type: number
        measurementUnitID:
          type: string
        minimumQuantity:
          type: number
        name:
          type: string
        optionIndex:
          type: integer
        optional:
          type: boolean
        productOfRecipeID:
          type: string
        productOfRecipeStepIndex:
          type: integer
        productOfRecipeStepProductIndex:
          type: integer
        productPercentageToUse:
          type: number
        quantityNotes:
          type: string
        toTaste:
          type: boolean
        vesselIndex:
          type: integer
      type: object
    RecipeStepIngredientUpdateRequestInput:
      properties:
        belongsToRecipeStep:
          type: string
        ingredientID:
          type: string
        ingredientNotes:
          type: string
        maximumQuantity:
          type: number
        measurementUnitID:
          type: string
        minimumQuantity:
          type: number
        name:
          type: string
        optionIndex:
          type: integer
        optional:
          type: boolean
        productOfRecipeID:
          type: string
        productPercentageToUse:
          type: number
        quantityNotes:
          type: string
        recipeStepProductID:
          type: string
        toTaste:
          type: boolean
        vesselIndex:
          type: integer
      type: object
    RecipeStepInstrument:
      properties:
        archivedAt:
          type: string
        belongsToRecipeStep:
          type: string
        createdAt:
          type: string
        id:
          type: string
        instrument:
          $ref: '#/components/schemas/ValidInstrument'
        lastUpdatedAt:
          type: string
        maximumQuantity:
          type: integer
        minimumQuantity:
          type: integer
        name:
          type: string
        notes:
          type: string
        optionIndex:
          type: integer
        optional:
          type: boolean
        preferenceRank:
          type: integer
        recipeStepProductID:
          type: string
      type: object
    RecipeStepInstrumentCreationRequestInput:
      properties:
        instrumentID:
          type: string
        maximumQuantity:
          type: integer
        minimumQuantity:
          type: integer
        name:
          type: string
        notes:
          type: string
        optionIndex:
          type: integer
        optional:
          type: boolean
        preferenceRank:
          type: integer
        productOfRecipeStepIndex:
          type: integer
        productOfRecipeStepProductIndex:
          type: integer
        recipeStepProductID:
          type: string
      type: object
    RecipeStepInstrumentUpdateRequestInput:
      properties:
        belongsToRecipeStep:
          type: string
        instrumentID:
          type: string
        maximumQuantity:
          type: integer
        minimumQuantity:
          type: integer
        name:
          type: string
        notes:
          type: string
        optionIndex:
          type: integer
        optional:
          type: boolean
        preferenceRank:
          type: integer
        recipeStepProductID:
          type: string
      type: object
    RecipeStepProduct:
      properties:
        archivedAt:
          type: string
        belongsToRecipeStep:
          type: string
        compostable:
          type: boolean
        containedInVesselIndex:
          type: integer
        createdAt:
          type: string
        id:
          type: string
        index:
          type: integer
        isLiquid:
          type: boolean
        isWaste:
          type: boolean
        lastUpdatedAt:
          type: string
        maximumQuantity:
          type: number
        maximumStorageDurationInSeconds:
          type: integer
        maximumStorageTemperatureInCelsius:
          type: number
        measurementUnit:
          $ref: '#/components/schemas/ValidMeasurementUnit'
        minimumQuantity:
          type: number
        minimumStorageTemperatureInCelsius:
          type: number
        name:
          type: string
        quantityNotes:
          type: string
        storageInstructions:
          type: string
        type:
          type: string
      type: object
    RecipeStepProductCreationRequestInput:
      properties:
        compostable:
          type: boolean
        containedInVesselIndex:
          type: integer
        index:
          type: integer
        isLiquid:
          type: boolean
        isWaste:
          type: boolean
        maximumQuantity:
          type: number
        maximumStorageDurationInSeconds:
          type: integer
        maximumStorageTemperatureInCelsius:
          type: number
        measurementUnitID:
          type: string
        minimumQuantity:
          type: number
        minimumStorageTemperatureInCelsius:
          type: number
        name:
          type: string
        quantityNotes:
          type: string
        storageInstructions:
          type: string
        type:
          type: string
      type: object
    RecipeStepProductUpdateRequestInput:
      properties:
        belongsToRecipeStep:
          type: string
        compostable:
          type: boolean
        containedInVesselIndex:
          type: integer
        index:
          type: integer
        isLiquid:
          type: boolean
        isWaste:
          type: boolean
        maximumQuantity:
          type: number
        maximumStorageDurationInSeconds:
          type: integer
        maximumStorageTemperatureInCelsius:
          type: number
        measurementUnitID:
          type: string
        minimumQuantity:
          type: number
        minimumStorageTemperatureInCelsius:
          type: number
        name:
          type: string
        quantityNotes:
          type: string
        storageInstructions:
          type: string
        type:
          type: string
      type: object
    RecipeStepSearchSubset:
      properties:
        ingredients:
          $ref: '#/components/schemas/NamedID'
        instruments:
          $ref: '#/components/schemas/NamedID'
        preparation:
          type: string
        vessels:
          $ref: '#/components/schemas/NamedID'
      type: object
    RecipeStepUpdateRequestInput:
      properties:
        belongsToRecipe:
          type: string
        conditionExpression:
          type: string
        explicitInstructions:
          type: string
        index:
          type: integer
        maximumEstimatedTimeInSeconds:
          type: integer
        maximumTemperatureInCelsius:
          type: number
        minimumEstimatedTimeInSeconds:
          type: integer
        minimumTemperatureInCelsius:
          type: number
        notes:
          type: string
        optional:
          type: boolean
        preparation:
          $ref: '#/components/schemas/ValidPreparation'
        startTimerAutomatically:
          type: boolean
      type: object
    RecipeStepVessel:
      properties:
        archivedAt:
          type: string
        belongsToRecipeStep:
          type: string
        createdAt:
          type: string
        id:
          type: string
        lastUpdatedAt:
          type: string
        maximumQuantity:
          type: integer
        minimumQuantity:
          type: integer
        name:
          type: string
        notes:
          type: string
        recipeStepProductID:
          type: string
        unavailableAfterStep:
          type: boolean
        vessel:
          $ref: '#/components/schemas/ValidVessel'
        vesselPreposition:
          type: string
      type: object
    RecipeStepVesselCreationRequestInput:
      properties:
        maximumQuantity:
          type: integer
        minimumQuantity:
          type: integer
        name:
          type: string
        notes:
          type: string
        productOfRecipeStepIndex:
          type: integer
        productOfRecipeStepProductIndex:
          type: integer
        recipeStepProductID:
          type: string
        unavailableAfterStep:
          type: boolean
        vesselID:
          type: string
        vesselPreposition:
          type: string
      type: object
    RecipeStepVesselUpdateRequestInput:
      properties:
        belongsToRecipeStep:
          type: string
        maximumQuantity:
          type: integer
        minimumQuantity:
          type: integer
        name:
          type: string
        notes:
          type: string
        recipeStepProductID:
          type: string
        unavailableAfterStep:
          type: boolean
        vesselID:
          type: string
        vesselPreposition:
          type: string
      type: object
    RecipeUpdateRequestInput:
      properties:
        description:
          type: string
        eligibleForMeals:
          type: boolean
        inspiredByRecipeID:
          type: string
        maximumEstimatedPortions:
          type: number
        minimumEstimatedPortions:
          type: number
        name:
          type: string
        pluralPortionName:
          type: string
        portionName:
          type: string
        sealOfApproval:
          type: boolean
        slug:
          type: string
        source:
          type: string
        yieldsComponentType:
          type: string
      type: object
    ResponseDetails:
      properties:
        currentHouseholdID:
          type: string
        traceID:
          type: string
      type: object
    ServiceSetting:
      properties:
        adminsOnly:
          type: boolean
        archivedAt:
          type: string
        createdAt:
          type: string
        defaultValue:
          type: string
        description:
          type: string
        enumeration:
          type: string
        id:
          type: string
        lastUpdatedAt:
          type: string
        name:
          type: string
        type:
          type: string
      type: object
    ServiceSettingConfiguration:
      properties:
        archivedAt:
          type: string
        belongsToHousehold:
          type: string
        belongsToUser:
          type: string
        createdAt:
          type: string
        id:
          type: string
        lastUpdatedAt:
          type: string
        notes:
          type: string
        serviceSetting:
          $ref: '#/components/schemas/ServiceSetting'
        value:
          type: string
      type: object
    ServiceSettingConfigurationCreationRequestInput:
      properties:
        belongsToHousehold:
          type: string
        belongsToUser:
          type: string
        notes:
          type: string
        serviceSettingID:
          type: string
        value:
          type: string
      type: object
    ServiceSettingConfigurationUpdateRequestInput:
      properties:
        belongsToHousehold:
          type: string
        belongsToUser:
          type: string
        notes:
          type: string
        serviceSettingID:
          type: string
        value:
          type: string
      type: object
    ServiceSettingCreationRequestInput:
      properties:
        adminsOnly:
          type: boolean
        defaultValue:
          type: string
        description:
          type: string
        enumeration:
          type: string
        name:
          type: string
        type:
          type: string
      type: object
    ServiceSettingUpdateRequestInput:
      properties:
        adminsOnly:
          type: boolean
        defaultValue:
          type: string
        description:
          type: string
        enumeration:
          type: string
        name:
          type: string
        type:
          type: string
      type: object
    TOTPSecretRefreshInput:
      properties:
        currentPassword:
          type: string
        totpToken:
          type: string
      type: object
    TOTPSecretRefreshResponse:
      properties:
        qrCode:
          type: string
        twoFactorSecret:
          type: string
      type: object
    TOTPSecretVerificationInput:
      properties:
        totpToken:
          type: string
        userID:
          type: string
      type: object
    User:
      properties:
        accountStatus:
          type: string
        accountStatusExplanation:
          type: string
        archivedAt:
          type: string
        avatar:
          type: string
        birthday:
          type: string
        createdAt:
          type: string
        emailAddress:
          type: string
        emailAddressVerifiedAt:
          type: string
        firstName:
          type: string
        id:
          type: string
        lastAcceptedPrivacyPolicy:
          type: string
        lastAcceptedTOS:
          type: string
        lastName:
          type: string
        lastUpdatedAt:
          type: string
        passwordLastChangedAt:
          type: string
        requiresPasswordChange:
          type: boolean
        serviceRoles:
          type: string
        twoFactorSecretVerifiedAt:
          type: string
        username:
          type: string
      type: object
    UserAccountStatusUpdateInput:
      properties:
        newStatus:
          type: string
        reason:
          type: string
        targetUserID:
          type: string
      type: object
    UserCreationResponse:
      properties:
        accountStatus:
          type: string
        avatar:
          type: string
        birthday:
          type: string
        createdAt:
          type: string
        createdUserID:
          type: string
        emailAddress:
          type: string
        firstName:
          type: string
        isAdmin:
          type: boolean
        lastName:
          type: string
        qrCode:
          type: string
        twoFactorSecret:
          type: string
        username:
          type: string
      type: object
    UserDetailsDatabaseUpdateInput:
      properties: {}
      type: object
    UserDetailsUpdateRequestInput:
      properties:
        birthday:
          type: string
        currentPassword:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        totpToken:
          type: string
      type: object
    UserEmailAddressUpdateInput:
      properties:
        currentPassword:
          type: string
        newEmailAddress:
          type: string
        totpToken:
          type: string
      type: object
    UserIngredientPreference:
      properties:
        allergy:
          type: boolean
        archivedAt:
          type: string
        belongsToUser:
          type: string
        createdAt:
          type: string
        id:
          type: string
        ingredient:
          $ref: '#/components/schemas/ValidIngredient'
        lastUpdatedAt:
          type: string
        notes:
          type: string
        rating:
          type: integer
      type: object
    UserIngredientPreferenceCreationRequestInput:
      properties:
        allergy:
          type: boolean
        notes:
          type: string
        rating:
          type: integer
        validIngredientGroupID:
          type: string
        validIngredientID:
          type: string
      type: object
    UserIngredientPreferenceUpdateRequestInput:
      properties:
        allergy:
          type: boolean
        ingredientID:
          type: string
        notes:
          type: string
        rating:
          type: integer
      type: object
    UserLoginInput:
      properties:
        password:
          type: string
        totpToken:
          type: string
        username:
          type: string
      type: object
    UserNotification:
      properties:
        belongsToUser:
          type: string
        content:
          type: string
        createdAt:
          type: string
        id:
          type: string
        lastUpdatedAt:
          type: string
        status:
          type: string
      type: object
    UserNotificationCreationRequestInput:
      properties:
        belongsToUser:
          type: string
        content:
          type: string
        status:
          type: string
      type: object
    UserNotificationUpdateRequestInput:
      properties:
        status:
          type: string
      type: object
    UserPermissionsRequestInput:
      properties:
        permissions:
          type: string
      type: object
    UserPermissionsResponse:
      properties:
        permissions:
          type: object
      type: object
    UserRegistrationInput:
      properties:
        acceptedPrivacyPolicy:
          type: boolean
        acceptedTOS:
          type: boolean
        birthday:
          type: string
        emailAddress:
          type: string
        firstName:
          type: string
        householdName:
          type: string
        invitationID:
          type: string
        invitationToken:
          type: string
        lastName:
          type: string
        password:
          type: string
        username:
          type: string
      type: object
    UserSearchSubset:
      properties:
        emailAddress:
          type: string
        firstName:
          type: string
        id:
          type: string
        lastName:
          type: string
        username:
          type: string
      type: object
    UserStatusResponse:
      properties:
        accountStatus:
          type: string
        accountStatusExplanation:
          type: string
        activeHousehold:
          type: string
        isAuthenticated:
          type: boolean
        userID:
          type: string
      type: object
    UsernameReminderRequestInput:
      properties:
        emailAddress:
          type: string
      type: object
    UsernameUpdateInput:
      properties:
        currentPassword:
          type: string
        newUsername:
          type: string
        totpToken:
          type: string
      type: object
    ValidIngredient:
      properties:
        animalDerived:
          type: boolean
        animalFlesh:
          type: boolean
        archivedAt:
          type: string
        containsAlcohol:
          type: boolean
        containsDairy:
          type: boolean
        containsEgg:
          type: boolean
        containsFish:
          type: boolean
        containsGluten:
          type: boolean
        containsPeanut:
          type: boolean
        containsSesame:
          type: boolean
        containsShellfish:
          type: boolean
        containsSoy:
          type: boolean
        containsTreeNut:
          type: boolean
        containsWheat:
          type: boolean
        createdAt:
          type: string
        description:
          type: string
        iconPath:
          type: string
        id:
          type: string
        isAcid:
          type: boolean
        isFat:
          type: boolean
        isFruit:
          type: boolean
        isGrain:
          type: boolean
        isHeat:
          type: boolean
        isLiquid:
          type: boolean
        isMeasuredVolumetrically:
          type: boolean
        isProtein:
          type: boolean
        isSalt:
          type: boolean
        isStarch:
          type: boolean
        lastUpdatedAt:
          type: string
        maximumIdealStorageTemperatureInCelsius:
          type: number
        minimumIdealStorageTemperatureInCelsius:
          type: number
        name:
          type: string
        pluralName:
          type: string
        restrictToPreparations:
          type: boolean
        shoppingSuggestions:
          type: string
        slug:
          type: string
        storageInstructions:
          type: string
        warning:
          type: string
      type: object
    ValidIngredientCreationRequestInput:
      properties:
        animalDerived:
          type: boolean
        animalFlesh:
          type: boolean
        containsAlcohol:
          type: boolean
        containsDairy:
          type: boolean
        containsEgg:
          type: boolean
        containsFish:
          type: boolean
        containsGluten:
          type: boolean
        containsPeanut:
          type: boolean
        containsSesame:
          type: boolean
        containsShellfish:
          type: boolean
        containsSoy:
          type: boolean
        containsTreeNut:
          type: boolean
        containsWheat:
          type: boolean
        description:
          type: string
        iconPath:
          type: string
        isAcid:
          type: boolean
        isFat:
          type: boolean
        isFruit:
          type: boolean
        isGrain:
          type: boolean
        isHeat:
          type: boolean
        isLiquid:
          type: boolean
        isMeasuredVolumetrically:
          type: boolean
        isProtein:
          type: boolean
        isSalt:
          type: boolean
        isStarch:
          type: boolean
        maximumIdealStorageTemperatureInCelsius:
          type: number
        minimumIdealStorageTemperatureInCelsius:
          type: number
        name:
          type: string
        pluralName:
          type: string
        restrictToPreparations:
          type: boolean
        shoppingSuggestions:
          type: string
        slug:
          type: string
        storageInstructions:
          type: string
        warning:
          type: string
      type: object
    ValidIngredientGroup:
      properties:
        archivedAt:
          type: string
        createdAt:
          type: string
        description:
          type: string
        id:
          type: string
        lastUpdatedAt:
          type: string
        members:
          $ref: '#/components/schemas/ValidIngredientGroupMember'
        name:
          type: string
        slug:
          type: string
      type: object
    ValidIngredientGroupCreationRequestInput:
      properties:
        description:
          type: string
        members:
          $ref: '#/components/schemas/ValidIngredientGroupMemberCreationRequestInput'
        name:
          type: string
        slug:
          type: string
      type: object
    ValidIngredientGroupMember:
      properties:
        archivedAt:
          type: string
        belongsToGroup:
          type: string
        createdAt:
          type: string
        id:
          type: string
        validIngredient:
          $ref: '#/components/schemas/ValidIngredient'
      type: object
    ValidIngredientGroupMemberCreationRequestInput:
      properties:
        validIngredientID:
          type: string
      type: object
    ValidIngredientGroupUpdateRequestInput:
      properties:
        description:
          type: string
        name:
          type: string
        slug:
          type: string
      type: object
    ValidIngredientMeasurementUnit:
      properties:
        archivedAt:
          type: string
        createdAt:
          type: string
        id:
          type: string
        ingredient:
          $ref: '#/components/schemas/ValidIngredient'
        lastUpdatedAt:
          type: string
        maximumAllowableQuantity:
          type: number
        measurementUnit:
          $ref: '#/components/schemas/ValidMeasurementUnit'
        minimumAllowableQuantity:
          type: number
        notes:
          type: string
      type: object
    ValidIngredientMeasurementUnitCreationRequestInput:
      properties:
        maximumAllowableQuantity:
          type: number
        minimumAllowableQuantity:
          type: number
        notes:
          type: string
        validIngredientID:
          type: string
        validMeasurementUnitID:
          type: string
      type: object
    ValidIngredientMeasurementUnitUpdateRequestInput:
      properties:
        maximumAllowableQuantity:
          type: number
        minimumAllowableQuantity:
          type: number
        notes:
          type: string
        validIngredientID:
          type: string
        validMeasurementUnitID:
          type: string
      type: object
    ValidIngredientPreparation:
      properties:
        archivedAt:
          type: string
        createdAt:
          type: string
        id:
          type: string
        ingredient:
          $ref: '#/components/schemas/ValidIngredient'
        lastUpdatedAt:
          type: string
        notes:
          type: string
        preparation:
          $ref: '#/components/schemas/ValidPreparation'
      type: object
    ValidIngredientPreparationCreationRequestInput:
      properties:
        notes:
          type: string
        validIngredientID:
          type: string
        validPreparationID:
          type: string
      type: object
    ValidIngredientPreparationUpdateRequestInput:
      properties:
        notes:
          type: string
        validIngredientID:
          type: string
        validPreparationID:
          type: string
      type: object
    ValidIngredientSearchSubset:
      properties:
        description:
          type: string
        id:
          type: string
        name:
          type: string
        pluralName:
          type: string
        shoppingSuggestions:
          type: string
      type: object
    ValidIngredientState:
      properties:
        archivedAt:
          type: string
        attributeType:
          type: string
        createdAt:
          type: string
        description:
          type: string
        iconPath:
          type: string
        id:
          type: string
        lastUpdatedAt:
          type: string
        name:
          type: string
        pastTense:
          type: string
        slug:
          type: string
      type: object
    ValidIngredientStateCreationRequestInput:
      properties:
        attributeType:
          type: string
        description:
          type: string
        iconPath:
          type: string
        name:
          type: string
        pastTense:
          type: string
        slug:
          type: string
      type: object
    ValidIngredientStateIngredient:
      properties:
        archivedAt:
          type: string
        createdAt:
          type: string
        id:
          type: string
        ingredient:
          $ref: '#/components/schemas/ValidIngredient'
        ingredientState:
          $ref: '#/components/schemas/ValidIngredientState'
        lastUpdatedAt:
          type: string
        notes:
          type: string
      type: object
    ValidIngredientStateIngredientCreationRequestInput:
      properties:
        notes:
          type: string
        validIngredientID:
          type: string
        validIngredientStateID:
          type: string
      type: object
    ValidIngredientStateIngredientUpdateRequestInput:
      properties:
        notes:
          type: string
        validIngredientID:
          type: string
        validIngredientStateID:
          type: string
      type: object
    ValidIngredientStateSearchSubset:
      properties:
        attributeType:
          type: string
        description:
          type: string
        id:
          type: string
        name:
          type: string
        pastTense:
          type: string
      type: object
    ValidIngredientStateUpdateRequestInput:
      properties:
        attributeType:
          type: string
        description:
          type: string
        iconPath:
          type: string
        name:
          type: string
        pastTense:
          type: string
        slug:
          type: string
      type: object
    ValidIngredientUpdateRequestInput:
      properties:
        animalDerived:
          type: boolean
        animalFlesh:
          type: boolean
        containsAlcohol:
          type: boolean
        containsDairy:
          type: boolean
        containsEgg:
          type: boolean
        containsFish:
          type: boolean
        containsGluten:
          type: boolean
        containsPeanut:
          type: boolean
        containsSesame:
          type: boolean
        containsShellfish:
          type: boolean
        containsSoy:
          type: boolean
        containsTreeNut:
          type: boolean
        containsWheat:
          type: boolean
        description:
          type: string
        iconPath:
          type: string
        isAcid:
          type: boolean
        isFat:
          type: boolean
        isFruit:
          type: boolean
        isGrain:
          type: boolean
        isHeat:
          type: boolean
        isLiquid:
          type: boolean
        isMeasuredVolumetrically:
          type: boolean
        isProtein:
          type: boolean
        isSalt:
          type: boolean
        isStarch:
          type: boolean
        maximumIdealStorageTemperatureInCelsius:
          type: number
        minimumIdealStorageTemperatureInCelsius:
          type: number
        name:
          type: string
        pluralName:
          type: string
        restrictToPreparations:
          type: boolean
        shoppingSuggestions:
          type: string
        slug:
          type: string
        storageInstructions:
          type: string
        warning:
          type: string
      type: object
    ValidInstrument:
      properties:
        archivedAt:
          type: string
        createdAt:
          type: string
        description:
          type: string
        displayInSummaryLists:
          type: boolean
        iconPath:
          type: string
        id:
          type: string
        includeInGeneratedInstructions:
          type: boolean
        lastUpdatedAt:
          type: string
        name:
          type: string
        pluralName:
          type: string
        slug:
          type: string
        usableForStorage:
          type: boolean
      type: object
    ValidInstrumentCreationRequestInput:
      properties:
        description:
          type: string
        displayInSummaryLists:
          type: boolean
        iconPath:
          type: string
        includeInGeneratedInstructions:
          type: boolean
        name:
          type: string
        pluralName:
          type: string
        slug:
          type: string
        usableForStorage:
          type: boolean
      type: object
    ValidInstrumentSearchSubset:
      properties:
        description:
          type: string
        id:
          type: string
        name:
          type: string
        pluralName:
          type: string
      type: object
    ValidInstrumentUpdateRequestInput:
      properties:
        description:
          type: string
        displayInSummaryLists:
          type: boolean
        iconPath:
          type: string
        includeInGeneratedInstructions:
          type: boolean
        name:
          type: string
        pluralName:
          type: string
        slug:
          type: string
        usableForStorage:
          type: boolean
      type: object
    ValidMeasurementUnit:
      properties:
        archivedAt:
          type: string
        createdAt:
          type: string
        description:
          type: string
        iconPath:
          type: string
        id:
          type: string
        imperial:
          type: boolean
        lastUpdatedAt:
          type: string
        metric:
          type: boolean
        name:
          type: string
        pluralName:
          type: string
        slug:
          type: string
        universal:
          type: boolean
        volumetric:
          type: boolean
      type: object
    ValidMeasurementUnitConversion:
      properties:
        archivedAt:
          type: string
        createdAt:
          type: string
        from:
          $ref: '#/components/schemas/ValidMeasurementUnit'
        id:
          type: string
        lastUpdatedAt:
          type: string
        modifier:
          type: number
        notes:
          type: string
        onlyForIngredient:
          $ref: '#/components/schemas/ValidIngredient'
        to:
          $ref: '#/components/schemas/ValidMeasurementUnit'
      type: object
    ValidMeasurementUnitConversionCreationRequestInput:
      properties:
        from:
          type: string
        modifier:
          type: number
        notes:
          type: string
        onlyForIngredient:
          type: string
        to:
          type: string
      type: object
    ValidMeasurementUnitConversionUpdateRequestInput:
      properties:
        from:
          type: string
        modifier:
          type: number
        notes:
          type: string
        onlyForIngredient:
          type: string
        to:
          type: string
      type: object
    ValidMeasurementUnitCreationRequestInput:
      properties:
        description:
          type: string
        iconPath:
          type: string
        imperial:
          type: boolean
        metric:
          type: boolean
        name:
          type: string
        pluralName:
          type: string
        slug:
          type: string
        universal:
          type: boolean
        volumetric:
          type: boolean
      type: object
    ValidMeasurementUnitSearchSubset:
      properties:
        description:
          type: string
        id:
          type: string
        name:
          type: string
        pluralName:
          type: string
      type: object
    ValidMeasurementUnitUpdateRequestInput:
      properties:
        description:
          type: string
        iconPath:
          type: string
        imperial:
          type: boolean
        metric:
          type: boolean
        name:
          type: string
        pluralName:
          type: string
        slug:
          type: string
        universal:
          type: boolean
        volumetric:
          type: boolean
      type: object
    ValidPreparation:
      properties:
        archivedAt:
          type: string
        conditionExpressionRequired:
          type: boolean
        consumesVessel:
          type: boolean
        createdAt:
          type: string
        description:
          type: string
        iconPath:
          type: string
        id:
          type: string
        lastUpdatedAt:
          type: string
        maximumIngredientCount:
          type: integer
        maximumInstrumentCount:
          type: integer
        maximumVesselCount:
          type: integer
        minimumIngredientCount:
          type: integer
        minimumInstrumentCount:
          type: integer
        minimumVesselCount:
          type: integer
        name:
          type: string
        onlyForVessels:
          type: boolean
        pastTense:
          type: string
        restrictToIngredients:
          type: boolean
        slug:
          type: string
        temperatureRequired:
          type: boolean
        timeEstimateRequired:
          type: boolean
        yieldsNothing:
          type: boolean
      type: object
    ValidPreparationCreationRequestInput:
      properties:
        conditionExpressionRequired:
          type: boolean
        consumesVessel:
          type: boolean
        description:
          type: string
        iconPath:
          type: string
        maximumIngredientCount:
          type: integer
        maximumInstrumentCount:
          type: integer
        maximumVesselCount:
          type: integer
        minimumIngredientCount:
          type: integer
        minimumInstrumentCount:
          type: integer
        minimumVesselCount:
          type: integer
        name:
          type: string
        onlyForVessels:
          type: boolean
        pastTense:
          type: string
        restrictToIngredients:
          type: boolean
        slug:
          type: string
        temperatureRequired:
          type: boolean
        timeEstimateRequired:
          type: boolean
        yieldsNothing:
          type: boolean
      type: object
    ValidPreparationInstrument:
      properties:
        archivedAt:
          type: string
        createdAt:
          type: string
        id:
          type: string
        instrument:
          $ref: '#/components/schemas/ValidInstrument'
        lastUpdatedAt:
          type: string
        notes:
          type: string
        preparation:
          $ref: '#/components/schemas/ValidPreparation'
      type: object
    ValidPreparationInstrumentCreationRequestInput:
      properties:
        notes:
          type: string
        validInstrumentID:
          type: string
        validPreparationID:
          type: string
      type: object
    ValidPreparationInstrumentUpdateRequestInput:
      properties:
        notes:
          type: string
        validInstrumentID:
          type: string
        validPreparationID:
          type: string
      type: object
    ValidPreparationSearchSubset:
      properties:
        description:
          type: string
        id:
          type: string
        name:
          type: string
        pastTense:
          type: string
      type: object
    ValidPreparationUpdateRequestInput:
      properties:
        conditionExpressionRequired:
          type: boolean
        consumesVessel:
          type: boolean
        description:
          type: string
        iconPath:
          type: string
        maximumIngredientCount:
          type: integer
        maximumInstrumentCount:
          type: integer
        maximumVesselCount:
          type: integer
        minimumIngredientCount:
          type: integer
        minimumInstrumentCount:
          type: integer
        minimumVesselCount:
          type: integer
        name:
          type: string
        onlyForVessels:
          type: boolean
        pastTense:
          type: string
        restrictToIngredients:
          type: boolean
        slug:
          type: string
        temperatureRequired:
          type: boolean
        timeEstimateRequired:
          type: boolean
        yieldsNothing:
          type: boolean
      type: object
    ValidPreparationVessel:
      properties:
        archivedAt:
          type: string
        createdAt:
          type: string
        id:
          type: string
        instrument:
          $ref: '#/components/schemas/ValidVessel'
        lastUpdatedAt:
          type: string
        notes:
          type: string
        preparation:
          $ref: '#/components/schemas/ValidPreparation'
      type: object
    ValidPreparationVesselCreationRequestInput:
      properties:
        notes:
          type: string
        validPreparationID:
          type: string
        validVesselID:
          type: string
      type: object
    ValidPreparationVesselUpdateRequestInput:
      properties:
        notes:
          type: string
        validPreparationID:
          type: string
        validVesselID:
          type: string
      type: object
    ValidVessel:
      properties:
        archivedAt:
          type: string
        capacity:
          type: number
        capacityUnit:
          $ref: '#/components/schemas/ValidMeasurementUnit'
        createdAt:
          type: string
        description:
          type: string
        displayInSummaryLists:
          type: boolean
        heightInMillimeters:
          type: number
        iconPath:
          type: string
        id:
          type: string
        includeInGeneratedInstructions:
          type: boolean
        lastUpdatedAt:
          type: string
        lengthInMillimeters:
          type: number
        name:
          type: string
        pluralName:
          type: string
        shape:
          type: string
        slug:
          type: string
        usableForStorage:
          type: boolean
        widthInMillimeters:
          type: number
      type: object
    ValidVesselCreationRequestInput:
      properties:
        capacity:
          type: number
        capacityUnitID:
          type: string
        description:
          type: string
        displayInSummaryLists:
          type: boolean
        heightInMillimeters:
          type: number
        iconPath:
          type: string
        includeInGeneratedInstructions:
          type: boolean
        lengthInMillimeters:
          type: number
        name:
          type: string
        pluralName:
          type: string
        shape:
          type: string
        slug:
          type: string
        usableForStorage:
          type: boolean
        widthInMillimeters:
          type: number
      type: object
    ValidVesselSearchSubset:
      properties:
        capacity:
          type: number
        capacityUnitName:
          type: string
        description:
          type: string
        id:
          type: string
        name:
          type: string
        pluralName:
          type: string
      type: object
    ValidVesselUpdateRequestInput:
      properties:
        capacity:
          type: number
        capacityUnitID:
          type: string
        description:
          type: string
        displayInSummaryLists:
          type: boolean
        heightInMillimeters:
          type: number
        iconPath:
          type: string
        includeInGeneratedInstructions:
          type: boolean
        lengthInMillimeters:
          type: number
        name:
          type: string
        pluralName:
          type: string
        shape:
          type: string
        slug:
          type: string
        usableForStorage:
          type: boolean
        widthInMillimeters:
          type: number
      type: object
    Webhook:
      properties:
        archivedAt:
          type: string
        belongsToHousehold:
          type: string
        contentType:
          type: string
        createdAt:
          type: string
        events:
          $ref: '#/components/schemas/WebhookTriggerEvent'
        id:
          type: string
        lastUpdatedAt:
          type: string
        method:
          type: string
        name:
          type: string
        url:
          type: string
      type: object
    WebhookCreationRequestInput:
      properties:
        contentType:
          type: string
        events:
          type: string
        method:
          type: string
        name:
          type: string
        url:
          type: string
      type: object
    WebhookTriggerEvent:
      properties:
        archivedAt:
          type: string
        belongsToWebhook:
          type: string
        createdAt:
          type: string
        id:
          type: string
        triggerEvent:
          type: string
      type: object
    WebhookTriggerEventCreationRequestInput:
      properties:
        belongsToWebhook:
          type: string
        triggerEvent:
          type: string
      type: object
  securitySchemes:
    cookieAuth:
      in: cookie
      name: ddb_api_cookie
      type: apiKey
    oauth2:
      flows:
        implicit:
          authorizationUrl: /oauth2/authorize
          scopes:
            household_admin: household-level administrator capabilities
            household_member: household-level user capabilities
            service_admin: service-level administrator capabilities
      type: oauth2
tags:
- name: admin
- name: audit_log_entries
- name: auth
- name: email_address
- name: grocery_list_items
- name: household
- name: household_instrument_ownerships
- name: household_invitations
- name: household_members
- name: households
- name: invitations
- name: meal_plan_events
- name: meal_plan_option_votes
- name: meal_plan_options
- name: meal_plan_tasks
- name: meal_plans
- name: meals
- name: oauth2
- name: password
- name: permissions
- name: recipe_prep_tasks
- name: recipe_ratings
- name: recipe_step_completion_conditions
- name: recipe_step_ingredients
- name: recipe_step_products
- name: recipe_step_vessels
- name: recipe_steps
- name: recipes
- description: Operations related to configuring service settings
  name: service_setting_configurations
- description: Operations related to service settings
  name: service_settings
- name: totp_secret
- name: user
- name: user_ingredient_preferences
- name: user_notifications
- name: users
- name: valid_ingredient_groups
- name: valid_ingredient_measurement_units
- name: valid_ingredient_preparations
- name: valid_ingredient_state_ingredients
- name: valid_ingredient_states
- name: valid_ingredients
- name: valid_instruments
- name: valid_measurement_conversions
- name: valid_measurement_units
- name: valid_preparation_instruments
- name: valid_preparation_vessels
- name: valid_preparations
- name: valid_vessels
- name: webhook_trigger_events
- name: webhooks
- name: workers
