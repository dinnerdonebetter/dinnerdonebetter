// Code generated by gen_typescript. DO NOT EDIT.

import { ValidInstrument } from './validInstruments';
import { ValidPreparation } from './validPreparations';

export interface IValidPreparationInstrument {
  createdAt: NonNullable<string>;
  lastUpdatedAt?: string;
  archivedAt?: string;
  id: NonNullable<string>;
  notes: NonNullable<string>;
  instrument: NonNullable<ValidInstrument>;
  preparation: NonNullable<ValidPreparation>;
}

export class ValidPreparationInstrument implements IValidPreparationInstrument {
  createdAt: NonNullable<string> = '1970-01-01T00:00:00Z';
  lastUpdatedAt?: string;
  archivedAt?: string;
  id: NonNullable<string> = '';
  notes: NonNullable<string> = '';
  instrument: NonNullable<ValidInstrument> = new ValidInstrument();
  preparation: NonNullable<ValidPreparation> = new ValidPreparation();

  constructor(input: Partial<ValidPreparationInstrument> = {}) {
    this.createdAt = input.createdAt ?? '1970-01-01T00:00:00Z';
    this.lastUpdatedAt = input.lastUpdatedAt;
    this.archivedAt = input.archivedAt;
    this.id = input.id ?? '';
    this.notes = input.notes ?? '';
    this.instrument = input.instrument ?? new ValidInstrument();
    this.preparation = input.preparation ?? new ValidPreparation();
  }
}

export interface IValidPreparationInstrumentCreationRequestInput {
  notes: NonNullable<string>;
  validPreparationID: NonNullable<string>;
  validInstrumentID: NonNullable<string>;
}

export class ValidPreparationInstrumentCreationRequestInput implements IValidPreparationInstrumentCreationRequestInput {
  notes: NonNullable<string> = '';
  validPreparationID: NonNullable<string> = '';
  validInstrumentID: NonNullable<string> = '';

  constructor(input: Partial<ValidPreparationInstrumentCreationRequestInput> = {}) {
    this.notes = input.notes ?? '';
    this.validPreparationID = input.validPreparationID ?? '';
    this.validInstrumentID = input.validInstrumentID ?? '';
  }
}

export interface IValidPreparationInstrumentUpdateRequestInput {
  notes?: string;
  validPreparationID?: string;
  validInstrumentID?: string;
}

export class ValidPreparationInstrumentUpdateRequestInput implements IValidPreparationInstrumentUpdateRequestInput {
  notes?: string;
  validPreparationID?: string;
  validInstrumentID?: string;

  constructor(input: Partial<ValidPreparationInstrumentUpdateRequestInput> = {}) {
    this.notes = input.notes;
    this.validPreparationID = input.validPreparationID;
    this.validInstrumentID = input.validInstrumentID;
  }
}
