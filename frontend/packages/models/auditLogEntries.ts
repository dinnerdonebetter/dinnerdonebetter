// Code generated by gen_typescript. DO NOT EDIT.

export interface IChangeLog {
  oldValue: NonNullable<string>;
  newValue: NonNullable<string>;
}

export class ChangeLog implements IChangeLog {
  oldValue: NonNullable<string> = '';
  newValue: NonNullable<string> = '';

  constructor(input: Partial<ChangeLog> = {}) {
    this.oldValue = input.oldValue ?? '';
    this.newValue = input.newValue ?? '';
  }
}

export interface IAuditLogEntry {
  createdAt: NonNullable<string>;
  changes: NonNullable<Record<string, ChangeLog>>;
  belongsToHousehold?: string;
  id: NonNullable<string>;
  resourceType: NonNullable<string>;
  relevantID: NonNullable<string>;
  eventType: NonNullable<string>;
  belongsToUser: NonNullable<string>;
}

export class AuditLogEntry implements IAuditLogEntry {
  createdAt: NonNullable<string> = '1970-01-01T00:00:00Z';
  changes: NonNullable<Record<string, ChangeLog>> = {};
  belongsToHousehold?: string;
  id: NonNullable<string> = '';
  resourceType: NonNullable<string> = '';
  relevantID: NonNullable<string> = '';
  eventType: NonNullable<string> = '';
  belongsToUser: NonNullable<string> = '';

  constructor(input: Partial<AuditLogEntry> = {}) {
    this.createdAt = input.createdAt ?? '1970-01-01T00:00:00Z';
    this.changes = input.changes ?? {};
    this.belongsToHousehold = input.belongsToHousehold;
    this.id = input.id ?? '';
    this.resourceType = input.resourceType ?? '';
    this.relevantID = input.relevantID ?? '';
    this.eventType = input.eventType ?? '';
    this.belongsToUser = input.belongsToUser ?? '';
  }
}
