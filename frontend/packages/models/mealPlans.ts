// Code generated by gen_typescript. DO NOT EDIT.

import { ValidMealPlanElectionMethod, ValidMealPlanStatus } from './_unions';
import { MealPlanEvent, MealPlanEventCreationRequestInput } from './mealPlanEvents';

export interface IMealPlan {
  createdAt: NonNullable<string>;
  votingDeadline: NonNullable<string>;
  archivedAt?: string;
  lastUpdatedAt?: string;
  id: NonNullable<string>;
  status: NonNullable<ValidMealPlanStatus>;
  notes: NonNullable<string>;
  electionMethod: NonNullable<ValidMealPlanElectionMethod>;
  belongsToHousehold: NonNullable<string>;
  createdBy: NonNullable<string>;
  events: NonNullable<Array<MealPlanEvent>>;
  groceryListInitialized: NonNullable<boolean>;
  tasksCreated: NonNullable<boolean>;
}

export class MealPlan implements IMealPlan {
  createdAt: NonNullable<string> = '1970-01-01T00:00:00Z';
  votingDeadline: NonNullable<string> = '1970-01-01T00:00:00Z';
  archivedAt?: string;
  lastUpdatedAt?: string;
  id: NonNullable<string> = '';
  status: NonNullable<ValidMealPlanStatus> = 'awaiting_votes';
  notes: NonNullable<string> = '';
  electionMethod: NonNullable<ValidMealPlanElectionMethod> = 'schulze';
  belongsToHousehold: NonNullable<string> = '';
  createdBy: NonNullable<string> = '';
  events: NonNullable<Array<MealPlanEvent>> = [];
  groceryListInitialized: NonNullable<boolean> = false;
  tasksCreated: NonNullable<boolean> = false;

  constructor(input: Partial<MealPlan> = {}) {
    this.createdAt = input.createdAt ?? '1970-01-01T00:00:00Z';
    this.votingDeadline = input.votingDeadline ?? '1970-01-01T00:00:00Z';
    this.archivedAt = input.archivedAt;
    this.lastUpdatedAt = input.lastUpdatedAt;
    this.id = input.id ?? '';
    this.status = input.status ?? 'awaiting_votes';
    this.notes = input.notes ?? '';
    this.electionMethod = input.electionMethod ?? 'schulze';
    this.belongsToHousehold = input.belongsToHousehold ?? '';
    this.createdBy = input.createdBy ?? '';
    this.events = input.events ?? [];
    this.groceryListInitialized = input.groceryListInitialized ?? false;
    this.tasksCreated = input.tasksCreated ?? false;
  }
}

export interface IMealPlanCreationRequestInput {
  votingDeadline: NonNullable<string>;
  notes: NonNullable<string>;
  electionMethod: NonNullable<ValidMealPlanElectionMethod>;
  events: NonNullable<Array<MealPlanEventCreationRequestInput>>;
}

export class MealPlanCreationRequestInput implements IMealPlanCreationRequestInput {
  votingDeadline: NonNullable<string> = '1970-01-01T00:00:00Z';
  notes: NonNullable<string> = '';
  electionMethod: NonNullable<ValidMealPlanElectionMethod> = 'schulze';
  events: NonNullable<Array<MealPlanEventCreationRequestInput>> = [];

  constructor(input: Partial<MealPlanCreationRequestInput> = {}) {
    this.votingDeadline = input.votingDeadline ?? '1970-01-01T00:00:00Z';
    this.notes = input.notes ?? '';
    this.electionMethod = input.electionMethod ?? 'schulze';
    this.events = input.events ?? [];
  }
}

export interface IMealPlanUpdateRequestInput {
  notes?: string;
  votingDeadline?: string;
}

export class MealPlanUpdateRequestInput implements IMealPlanUpdateRequestInput {
  notes?: string;
  votingDeadline?: string;

  constructor(input: Partial<MealPlanUpdateRequestInput> = {}) {
    this.notes = input.notes;
    this.votingDeadline = input.votingDeadline;
  }
}
