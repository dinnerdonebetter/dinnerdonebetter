// Code generated by gen_typescript. DO NOT EDIT.

import { ValidIngredient } from './validIngredients';
import { ValidPreparation } from './validPreparations';

export interface IValidIngredientPreparation {
  createdAt: NonNullable<string>;
  lastUpdatedAt?: string;
  archivedAt?: string;
  notes: NonNullable<string>;
  id: NonNullable<string>;
  ingredient: NonNullable<ValidIngredient>;
  preparation: NonNullable<ValidPreparation>;
}

export class ValidIngredientPreparation implements IValidIngredientPreparation {
  createdAt: NonNullable<string> = '1970-01-01T00:00:00Z';
  lastUpdatedAt?: string;
  archivedAt?: string;
  notes: NonNullable<string> = '';
  id: NonNullable<string> = '';
  ingredient: NonNullable<ValidIngredient> = new ValidIngredient();
  preparation: NonNullable<ValidPreparation> = new ValidPreparation();

  constructor(input: Partial<ValidIngredientPreparation> = {}) {
    this.createdAt = input.createdAt ?? '1970-01-01T00:00:00Z';
    this.lastUpdatedAt = input.lastUpdatedAt;
    this.archivedAt = input.archivedAt;
    this.notes = input.notes ?? '';
    this.id = input.id ?? '';
    this.ingredient = input.ingredient ?? new ValidIngredient();
    this.preparation = input.preparation ?? new ValidPreparation();
  }
}

export interface IValidIngredientPreparationCreationRequestInput {
  notes: NonNullable<string>;
  validPreparationID: NonNullable<string>;
  validIngredientID: NonNullable<string>;
}

export class ValidIngredientPreparationCreationRequestInput implements IValidIngredientPreparationCreationRequestInput {
  notes: NonNullable<string> = '';
  validPreparationID: NonNullable<string> = '';
  validIngredientID: NonNullable<string> = '';

  constructor(input: Partial<ValidIngredientPreparationCreationRequestInput> = {}) {
    this.notes = input.notes ?? '';
    this.validPreparationID = input.validPreparationID ?? '';
    this.validIngredientID = input.validIngredientID ?? '';
  }
}

export interface IValidIngredientPreparationUpdateRequestInput {
  notes?: string;
  validPreparationID?: string;
  validIngredientID?: string;
}

export class ValidIngredientPreparationUpdateRequestInput implements IValidIngredientPreparationUpdateRequestInput {
  notes?: string;
  validPreparationID?: string;
  validIngredientID?: string;

  constructor(input: Partial<ValidIngredientPreparationUpdateRequestInput> = {}) {
    this.notes = input.notes;
    this.validPreparationID = input.validPreparationID;
    this.validIngredientID = input.validIngredientID;
  }
}
