// Code generated by gen_typescript. DO NOT EDIT.

export interface IValidMeasurementUnit {
  createdAt: NonNullable<string>;
  lastUpdatedAt?: string;
  archivedAt?: string;
  name: NonNullable<string>;
  iconPath: NonNullable<string>;
  id: NonNullable<string>;
  description: NonNullable<string>;
  pluralName: NonNullable<string>;
  slug: NonNullable<string>;
  volumetric: NonNullable<boolean>;
  universal: NonNullable<boolean>;
  metric: NonNullable<boolean>;
  imperial: NonNullable<boolean>;
}

export class ValidMeasurementUnit implements IValidMeasurementUnit {
  createdAt: NonNullable<string> = '1970-01-01T00:00:00Z';
  lastUpdatedAt?: string;
  archivedAt?: string;
  name: NonNullable<string> = '';
  iconPath: NonNullable<string> = '';
  id: NonNullable<string> = '';
  description: NonNullable<string> = '';
  pluralName: NonNullable<string> = '';
  slug: NonNullable<string> = '';
  volumetric: NonNullable<boolean> = false;
  universal: NonNullable<boolean> = false;
  metric: NonNullable<boolean> = false;
  imperial: NonNullable<boolean> = false;

  constructor(input: Partial<ValidMeasurementUnit> = {}) {
    this.createdAt = input.createdAt ?? '1970-01-01T00:00:00Z';
    this.lastUpdatedAt = input.lastUpdatedAt;
    this.archivedAt = input.archivedAt;
    this.name = input.name ?? '';
    this.iconPath = input.iconPath ?? '';
    this.id = input.id ?? '';
    this.description = input.description ?? '';
    this.pluralName = input.pluralName ?? '';
    this.slug = input.slug ?? '';
    this.volumetric = input.volumetric ?? false;
    this.universal = input.universal ?? false;
    this.metric = input.metric ?? false;
    this.imperial = input.imperial ?? false;
  }
}

export interface IValidMeasurementUnitCreationRequestInput {
  name: NonNullable<string>;
  description: NonNullable<string>;
  iconPath: NonNullable<string>;
  pluralName: NonNullable<string>;
  slug: NonNullable<string>;
  volumetric: NonNullable<boolean>;
  universal: NonNullable<boolean>;
  metric: NonNullable<boolean>;
  imperial: NonNullable<boolean>;
}

export class ValidMeasurementUnitCreationRequestInput implements IValidMeasurementUnitCreationRequestInput {
  name: NonNullable<string> = '';
  description: NonNullable<string> = '';
  iconPath: NonNullable<string> = '';
  pluralName: NonNullable<string> = '';
  slug: NonNullable<string> = '';
  volumetric: NonNullable<boolean> = false;
  universal: NonNullable<boolean> = false;
  metric: NonNullable<boolean> = false;
  imperial: NonNullable<boolean> = false;

  constructor(input: Partial<ValidMeasurementUnitCreationRequestInput> = {}) {
    this.name = input.name ?? '';
    this.description = input.description ?? '';
    this.iconPath = input.iconPath ?? '';
    this.pluralName = input.pluralName ?? '';
    this.slug = input.slug ?? '';
    this.volumetric = input.volumetric ?? false;
    this.universal = input.universal ?? false;
    this.metric = input.metric ?? false;
    this.imperial = input.imperial ?? false;
  }
}

export interface IValidMeasurementUnitUpdateRequestInput {
  name?: string;
  description?: string;
  iconPath?: string;
  volumetric?: boolean;
  universal?: boolean;
  metric?: boolean;
  imperial?: boolean;
  pluralName?: string;
  slug?: string;
}

export class ValidMeasurementUnitUpdateRequestInput implements IValidMeasurementUnitUpdateRequestInput {
  name?: string;
  description?: string;
  iconPath?: string;
  volumetric?: boolean = false;
  universal?: boolean = false;
  metric?: boolean = false;
  imperial?: boolean = false;
  pluralName?: string;
  slug?: string;

  constructor(input: Partial<ValidMeasurementUnitUpdateRequestInput> = {}) {
    this.name = input.name;
    this.description = input.description;
    this.iconPath = input.iconPath;
    this.volumetric = input.volumetric ?? false;
    this.universal = input.universal ?? false;
    this.metric = input.metric ?? false;
    this.imperial = input.imperial ?? false;
    this.pluralName = input.pluralName;
    this.slug = input.slug;
  }
}
