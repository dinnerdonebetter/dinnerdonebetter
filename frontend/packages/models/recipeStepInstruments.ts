// Code generated by gen_typescript. DO NOT EDIT.

import { ValidInstrument } from './validInstruments';

export interface IRecipeStepInstrument {
  createdAt: NonNullable<string>;
  instrument?: ValidInstrument;
  lastUpdatedAt?: string;
  recipeStepProductID?: string;
  archivedAt?: string;
  maximumQuantity?: number;
  notes: NonNullable<string>;
  name: NonNullable<string>;
  belongsToRecipeStep: NonNullable<string>;
  id: NonNullable<string>;
  minimumQuantity: NonNullable<number>;
  optionIndex: NonNullable<number>;
  preferenceRank: NonNullable<number>;
  optional: NonNullable<boolean>;
}

export class RecipeStepInstrument implements IRecipeStepInstrument {
  createdAt: NonNullable<string> = '1970-01-01T00:00:00Z';
  instrument?: ValidInstrument;
  lastUpdatedAt?: string;
  recipeStepProductID?: string;
  archivedAt?: string;
  maximumQuantity?: number;
  notes: NonNullable<string> = '';
  name: NonNullable<string> = '';
  belongsToRecipeStep: NonNullable<string> = '';
  id: NonNullable<string> = '';
  minimumQuantity: NonNullable<number> = 0;
  optionIndex: NonNullable<number> = 0;
  preferenceRank: NonNullable<number> = 0;
  optional: NonNullable<boolean> = false;

  constructor(input: Partial<RecipeStepInstrument> = {}) {
    this.createdAt = input.createdAt ?? '1970-01-01T00:00:00Z';
    this.instrument = input.instrument;
    this.lastUpdatedAt = input.lastUpdatedAt;
    this.recipeStepProductID = input.recipeStepProductID;
    this.archivedAt = input.archivedAt;
    this.maximumQuantity = input.maximumQuantity;
    this.notes = input.notes ?? '';
    this.name = input.name ?? '';
    this.belongsToRecipeStep = input.belongsToRecipeStep ?? '';
    this.id = input.id ?? '';
    this.minimumQuantity = input.minimumQuantity ?? 0;
    this.optionIndex = input.optionIndex ?? 0;
    this.preferenceRank = input.preferenceRank ?? 0;
    this.optional = input.optional ?? false;
  }
}

export interface IRecipeStepInstrumentCreationRequestInput {
  instrumentID?: string;
  recipeStepProductID?: string;
  productOfRecipeStepIndex?: number;
  productOfRecipeStepProductIndex?: number;
  maximumQuantity?: number;
  notes: NonNullable<string>;
  name: NonNullable<string>;
  minimumQuantity: NonNullable<number>;
  optionIndex: NonNullable<number>;
  optional: NonNullable<boolean>;
  preferenceRank: NonNullable<number>;
}

export class RecipeStepInstrumentCreationRequestInput implements IRecipeStepInstrumentCreationRequestInput {
  instrumentID?: string;
  recipeStepProductID?: string;
  productOfRecipeStepIndex?: number;
  productOfRecipeStepProductIndex?: number;
  maximumQuantity?: number;
  notes: NonNullable<string> = '';
  name: NonNullable<string> = '';
  minimumQuantity: NonNullable<number> = 0;
  optionIndex: NonNullable<number> = 0;
  optional: NonNullable<boolean> = false;
  preferenceRank: NonNullable<number> = 0;

  constructor(input: Partial<RecipeStepInstrumentCreationRequestInput> = {}) {
    this.instrumentID = input.instrumentID;
    this.recipeStepProductID = input.recipeStepProductID;
    this.productOfRecipeStepIndex = input.productOfRecipeStepIndex;
    this.productOfRecipeStepProductIndex = input.productOfRecipeStepProductIndex;
    this.maximumQuantity = input.maximumQuantity;
    this.notes = input.notes ?? '';
    this.name = input.name ?? '';
    this.minimumQuantity = input.minimumQuantity ?? 0;
    this.optionIndex = input.optionIndex ?? 0;
    this.optional = input.optional ?? false;
    this.preferenceRank = input.preferenceRank ?? 0;
  }
}

export interface IRecipeStepInstrumentUpdateRequestInput {
  instrumentID?: string;
  recipeStepProductID?: string;
  notes?: string;
  preferenceRank?: number;
  belongsToRecipeStep?: string;
  name?: string;
  optional?: boolean;
  optionIndex?: number;
  minimumQuantity?: number;
  maximumQuantity?: number;
}

export class RecipeStepInstrumentUpdateRequestInput implements IRecipeStepInstrumentUpdateRequestInput {
  instrumentID?: string;
  recipeStepProductID?: string;
  notes?: string;
  preferenceRank?: number;
  belongsToRecipeStep?: string;
  name?: string;
  optional?: boolean = false;
  optionIndex?: number;
  minimumQuantity?: number;
  maximumQuantity?: number;

  constructor(input: Partial<RecipeStepInstrumentUpdateRequestInput> = {}) {
    this.instrumentID = input.instrumentID;
    this.recipeStepProductID = input.recipeStepProductID;
    this.notes = input.notes;
    this.preferenceRank = input.preferenceRank;
    this.belongsToRecipeStep = input.belongsToRecipeStep;
    this.name = input.name;
    this.optional = input.optional ?? false;
    this.optionIndex = input.optionIndex;
    this.minimumQuantity = input.minimumQuantity;
    this.maximumQuantity = input.maximumQuantity;
  }
}
