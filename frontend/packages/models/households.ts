// Code generated by gen_typescript. DO NOT EDIT.

import { HouseholdUserMembershipWithUser } from './householdUserMemberships';

export interface IHousehold {
  createdAt: NonNullable<string>;
  subscriptionPlanID?: string;
  lastUpdatedAt?: string;
  archivedAt?: string;
  longitude?: number;
  latitude?: number;
  state: NonNullable<string>;
  contactPhone: NonNullable<string>;
  city: NonNullable<string>;
  addressLine1: NonNullable<string>;
  zipCode: NonNullable<string>;
  country: NonNullable<string>;
  billingStatus: NonNullable<string>;
  addressLine2: NonNullable<string>;
  paymentProcessorCustomer: NonNullable<string>;
  belongsToUser: NonNullable<string>;
  id: NonNullable<string>;
  name: NonNullable<string>;
  members: NonNullable<Array<HouseholdUserMembershipWithUser>>;
}

export class Household implements IHousehold {
  createdAt: NonNullable<string> = '1970-01-01T00:00:00Z';
  subscriptionPlanID?: string;
  lastUpdatedAt?: string;
  archivedAt?: string;
  longitude?: number;
  latitude?: number;
  state: NonNullable<string> = '';
  contactPhone: NonNullable<string> = '';
  city: NonNullable<string> = '';
  addressLine1: NonNullable<string> = '';
  zipCode: NonNullable<string> = '';
  country: NonNullable<string> = '';
  billingStatus: NonNullable<string> = '';
  addressLine2: NonNullable<string> = '';
  paymentProcessorCustomer: NonNullable<string> = '';
  belongsToUser: NonNullable<string> = '';
  id: NonNullable<string> = '';
  name: NonNullable<string> = '';
  members: NonNullable<Array<HouseholdUserMembershipWithUser>> = [];

  constructor(input: Partial<Household> = {}) {
    this.createdAt = input.createdAt ?? '1970-01-01T00:00:00Z';
    this.subscriptionPlanID = input.subscriptionPlanID;
    this.lastUpdatedAt = input.lastUpdatedAt;
    this.archivedAt = input.archivedAt;
    this.longitude = input.longitude;
    this.latitude = input.latitude;
    this.state = input.state ?? '';
    this.contactPhone = input.contactPhone ?? '';
    this.city = input.city ?? '';
    this.addressLine1 = input.addressLine1 ?? '';
    this.zipCode = input.zipCode ?? '';
    this.country = input.country ?? '';
    this.billingStatus = input.billingStatus ?? '';
    this.addressLine2 = input.addressLine2 ?? '';
    this.paymentProcessorCustomer = input.paymentProcessorCustomer ?? '';
    this.belongsToUser = input.belongsToUser ?? '';
    this.id = input.id ?? '';
    this.name = input.name ?? '';
    this.members = input.members ?? [];
  }
}

export interface IHouseholdCreationRequestInput {
  latitude?: number;
  longitude?: number;
  name: NonNullable<string>;
  contactPhone: NonNullable<string>;
  addressLine1: NonNullable<string>;
  addressLine2: NonNullable<string>;
  city: NonNullable<string>;
  state: NonNullable<string>;
  zipCode: NonNullable<string>;
  country: NonNullable<string>;
}

export class HouseholdCreationRequestInput implements IHouseholdCreationRequestInput {
  latitude?: number;
  longitude?: number;
  name: NonNullable<string> = '';
  contactPhone: NonNullable<string> = '';
  addressLine1: NonNullable<string> = '';
  addressLine2: NonNullable<string> = '';
  city: NonNullable<string> = '';
  state: NonNullable<string> = '';
  zipCode: NonNullable<string> = '';
  country: NonNullable<string> = '';

  constructor(input: Partial<HouseholdCreationRequestInput> = {}) {
    this.latitude = input.latitude;
    this.longitude = input.longitude;
    this.name = input.name ?? '';
    this.contactPhone = input.contactPhone ?? '';
    this.addressLine1 = input.addressLine1 ?? '';
    this.addressLine2 = input.addressLine2 ?? '';
    this.city = input.city ?? '';
    this.state = input.state ?? '';
    this.zipCode = input.zipCode ?? '';
    this.country = input.country ?? '';
  }
}

export interface IHouseholdUpdateRequestInput {
  name?: string;
  contactPhone?: string;
  addressLine1?: string;
  addressLine2?: string;
  city?: string;
  state?: string;
  zipCode?: string;
  country?: string;
  latitude?: number;
  longitude?: number;
}

export class HouseholdUpdateRequestInput implements IHouseholdUpdateRequestInput {
  name?: string;
  contactPhone?: string;
  addressLine1?: string;
  addressLine2?: string;
  city?: string;
  state?: string;
  zipCode?: string;
  country?: string;
  latitude?: number;
  longitude?: number;

  constructor(input: Partial<HouseholdUpdateRequestInput> = {}) {
    this.name = input.name;
    this.contactPhone = input.contactPhone;
    this.addressLine1 = input.addressLine1;
    this.addressLine2 = input.addressLine2;
    this.city = input.city;
    this.state = input.state;
    this.zipCode = input.zipCode;
    this.country = input.country;
    this.latitude = input.latitude;
    this.longitude = input.longitude;
  }
}

export interface IHouseholdOwnershipTransferInput {
  reason: NonNullable<string>;
  currentOwner: NonNullable<string>;
  newOwner: NonNullable<string>;
}

export class HouseholdOwnershipTransferInput implements IHouseholdOwnershipTransferInput {
  reason: NonNullable<string> = '';
  currentOwner: NonNullable<string> = '';
  newOwner: NonNullable<string> = '';

  constructor(input: Partial<HouseholdOwnershipTransferInput> = {}) {
    this.reason = input.reason ?? '';
    this.currentOwner = input.currentOwner ?? '';
    this.newOwner = input.newOwner ?? '';
  }
}
