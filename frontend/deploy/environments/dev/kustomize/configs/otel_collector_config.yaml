receivers:
  otlp:
    protocols:
      http:
        endpoint: "0.0.0.0:4318"
      grpc:
        endpoint: "0.0.0.0:4317"

  filelog:
    include: [ /var/log/application/*.log ]
    operators:
      - type: json_parser
      - type: add
        field: resource["service.name"]
        value: ${env:SERVICE_NAME}
      - type: add
        field: resource["deployment.environment"]
        value: dev

extensions:
  health_check:
    endpoint: "0.0.0.0:13133"

  basicauth/prometheus:
    client_auth:
      username: ${env:PROMETHEUS_USERNAME}
      password: ${env:PROMETHEUS_PASSWORD}

  basicauth/loki:
    client_auth:
      username: ${env:LOKI_USERNAME}
      password: ${env:LOKI_PASSWORD}

  basicauth/tempo:
    client_auth:
      username: ${env:TEMPO_USERNAME}
      password: ${env:TEMPO_PASSWORD}

exporters:
  debug:

  prometheusremotewrite:
    endpoint: "https://prometheus-prod-13-prod-us-east-0.grafana.net/api/prom/push"
    auth:
      authenticator: basicauth/prometheus

  otlp:
    endpoint: "https://tempo-prod-04-prod-us-east-0.grafana.net:443"
    tls:
      insecure: true
    auth:
      authenticator: basicauth/tempo

  otlphttp:
    endpoint: "https://logs-prod-006.grafana.net/otlp"
    auth:
      authenticator: basicauth/loki

processors:
  batch:

  resource:
    attributes:
      - action: insert
        key: service_name
        from_attribute: service.name

service:
  extensions: [health_check, basicauth/prometheus, basicauth/loki, basicauth/tempo]
  pipelines:
    traces:
      receivers: [otlp]
      processors: [batch]
      exporters: [debug, otlp]
    metrics:
      receivers: [otlp]
      processors: [batch]
      exporters: [debug, prometheusremotewrite]
    logs:
      receivers: [filelog]
      processors: [resource, batch]
      exporters: [debug, otlphttp]
