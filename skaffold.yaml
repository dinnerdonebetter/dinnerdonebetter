apiVersion: skaffold/v4beta11
kind: Config

metadata:
  name: dinner-done-better-backend

profiles:
  - name: localdev

    build:
      tagPolicy:
        sha256: {}
      artifacts:
        # backend artifacts (ko)
        - image: dinner-done-better-service-api
          context: ./backend
          ko:
            dir: .
            flags:
              - -trimpath
            ldflags:
              - -s -w
              - -extldflags "-static"
            main: ./cmd/services/api/http
            fromImage: golang:1.23-bullseye

        - image: dinner-done-better-job-db-cleaner
          context: backend
          ko:
            dir: .
            flags:
              - -trimpath
            ldflags:
              - -s -w
              - -extldflags "-static"
            main: ./cmd/jobs/db_cleaner
            fromImage: golang:1.23-bullseye

        - image: dinner-done-better-job-email-prober
          context: backend
          ko:
            dir: .
            flags:
              - -trimpath
            ldflags:
              - -s -w
              - -extldflags "-static"
            main: ./cmd/jobs/email_prober
            fromImage: golang:1.23-bullseye

        - image: dinner-done-better-job-meal-plan-finalizer
          context: backend
          ko:
            dir: .
            flags:
              - -trimpath
            ldflags:
              - -s -w
              - -extldflags "-static"
            main: ./cmd/jobs/meal_plan_finalizer
            fromImage: golang:1.23-bullseye

        - image: dinner-done-better-job-meal-plan-grocery-list-init
          context: backend
          ko:
            dir: .
            flags:
              - -trimpath
            ldflags:
              - -s -w
              - -extldflags "-static"
            main: ./cmd/jobs/meal_plan_grocery_list_initializer
            fromImage: golang:1.23-bullseye

        - image: dinner-done-better-job-meal-plan-task-creator
          context: backend
          ko:
            dir: .
            flags:
              - -trimpath
            ldflags:
              - -s -w
              - -extldflags "-static"
            main: ./cmd/jobs/meal_plan_task_creator
            fromImage: golang:1.23-bullseye

        - image: dinner-done-better-job-search-data-index-scheduler
          context: backend
          ko:
            dir: .
            flags:
              - -trimpath
            ldflags:
              - -s -w
              - -extldflags "-static"
            main: ./cmd/jobs/search_data_index_scheduler
            fromImage: golang:1.23-bullseye

          # NOTE: no cmd/functions here

          # frontend artifacts
        - image: dinner-done-better-webapp
          context: ./frontend
          docker:
            dockerfile: ./apps/web/Dockerfile

        - image: dinner-done-better-admin-app
          context: ./frontend
          docker:
            dockerfile: ./apps/admin/Dockerfile

        - image: dinner-done-better-landing
          context: ./frontend
          docker:
            dockerfile: ./apps/landing/Dockerfile

    manifests:
      kustomize:
        paths:
          - backend/deploy/kustomize/environments/localdev
          - frontend/deploy/kustomize/environments/localdev
      output: ./deploy/environments/localdev/generated.yaml

    deploy:
      kubeContext: docker-desktop
      kubectl:
        defaultNamespace: localdev
      helm:
        releases:
          - name: postgres
            namespace: localdev
            createNamespace: true
            remoteChart: oci://registry-1.docker.io/bitnamicharts/postgresql
            version: 16.1.2
            overrides:
              global:
                postgresql:
                  auth:
                    username: dbuser
                    password: hunter2
                    database: dinner-done-better

          - name: redis
            namespace: localdev
            createNamespace: true
            remoteChart: oci://registry-1.docker.io/bitnamicharts/redis
            version: 20.2.1
            overrides:
              architecture: standalone

          # metrics storage
          - name: prometheus
            namespace: localdev
            createNamespace: true
            # repo: https://prometheus-community.github.io/helm-charts
            remoteChart: prometheus/prometheus
            version: 26.0.0
            overrides:
              alertmanager:
                enabled: false
              kube-state-metrics:
                enabled: false
              prometheus-node-exporter:
                enabled: false
              prometheus-pushgateway:
                enabled: false
              server:
                service:
                  servicePort: 3001

#          # tracing data storage
#          - name: jaeger
#            namespace: localdev
#            createNamespace: true
#            # repo: https://jaegertracing.github.io/helm-charts
#            remoteChart: jaeger/jaeger
#            version: 3.3.2
#            overrides:
#              provisionDataStore:
#                cassandra: false
#              allInOne:
#                enabled: true
#              storage:
#                type: badger

          # o11y dashboard
          - name: grafana
            namespace: localdev
            createNamespace: true
            # repo: https://grafana.github.io/helm-charts
            remoteChart: grafana/grafana
            version: 8.6.3
            overrides:
              service:
                port: 3000
                targetPort: 3000
              ingress:
                enabled: true
              adminUser: "admin"
              adminPassword: "hunter2"
              datasources:
                datasources.yaml:
                  apiVersion: 1
                  datasources:
                    - name: Postgres
                      type: postgres
                      access: proxy
                      # <int> org id. will default to orgId 1 if not specified
                      orgId: 1
                      url: postgres-postgresql.localdev.svc.cluster.local:5432
                      # db creds
                      database: dinner-done-better
                      user: dbuser
                      secureJsonData:
                        password: 'hunter2'
                      jsonData:
                        database: dinner-done-better
                        sslmode: 'disable'
                      isDefault: false
                      version: 1
                      editable: true
                    - name: Prometheus
                      type: prometheus
                      access: proxy
                      orgId: 1
                      url: http://prometheus-server.localdev.svc.cluster.local:3001
                      isDefault: false
                      version: 1
                      editable: true
                    - name: Loki
                      type: loki
                      access: proxy
                      orgId: 1
                      url: http://loki.localdev.svc.cluster.local:3100
                      isDefault: false
                      version: 1
                      editable: true
                    - name: Tempo
                      type: tempo
                      access: proxy
                      orgId: 1
                      url: http://tempo.localdev.svc.cluster.local:3100
                      isDefault: false
                      version: 1
                      editable: true
              dashboards: {}
#               default:
#                 some-dashboard:
#                   json: |
#                     $RAW_JSON
#               custom-dashboard:
#                 file: dashboards/custom-dashboard.json

          # log storage
          #  # to test: `kubectl exec --namespace=localdev -it grafana-7d6f6bff46-575gl -- curl http://loki-backend.localdev.svc.cluster.local:3200`
          - name: loki
            namespace: localdev
            createNamespace: true
            # repo: https://grafana.github.io/helm-charts
            remoteChart: grafana/loki
            version: 6.22.0
            overrides:
              loki:
                auth_enabled: false
                commonConfig:
                  replication_factor: 3
                schemaConfig:
                  configs:
                    - from: "2024-04-01"
                      store: tsdb
                      object_store: s3
                      schema: v13
                      index:
                        prefix: loki_index_
                        period: 24h
                pattern_ingester:
                  enabled: true
                limits_config:
                  allow_structured_metadata: true
                  volume_enabled: true
                  retention_period: 24h # 28 days retention
                compactor:
                  retention_enabled: true
                  delete_request_store: s3
                ruler:
                  enable_api: true
              minio:
                enabled: true
              deploymentMode: SingleBinary
              singleBinary:
                replicas: 1
              backend:
                replicas: 0
              read:
                replicas: 0
              write:
                replicas: 0
              ingester:
                replicas: 0
              querier:
                replicas: 0
              queryFrontend:
                replicas: 0
              queryScheduler:
                replicas: 0
              distributor:
                replicas: 0
              compactor:
                replicas: 0
              indexGateway:
                replicas: 0
              bloomCompactor:
                replicas: 0
              bloomGateway:
                replicas: 0

          # tracing data storage
          - name: tempo
            namespace: localdev
            createNamespace: true
            # repo: https://grafana.github.io/helm-charts
            remoteChart: grafana/tempo
            version: 1.14.0
