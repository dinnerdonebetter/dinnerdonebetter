apiVersion: skaffold/v4beta11
kind: Config

metadata:
  name: dinner-done-better-backend

profiles:
  - name: localdev

    build:
      tagPolicy:
        sha256: {}
      artifacts:
        # backend artifacts (ko)
        - image: dinner-done-better-service-api
          context: ./backend
          ko:
            dir: .
            flags:
              - -trimpath
            ldflags:
              - -s -w
              - -extldflags "-static"
            main: ./cmd/services/api/http
            fromImage: golang:1.23-bullseye

        - image: dinner-done-better-job-db-cleaner
          context: backend
          ko:
            dir: .
            flags:
              - -trimpath
            ldflags:
              - -s -w
              - -extldflags "-static"
            main: ./cmd/jobs/db_cleaner
            fromImage: golang:1.23-bullseye

        - image: dinner-done-better-job-email-prober
          context: backend
          ko:
            dir: .
            flags:
              - -trimpath
            ldflags:
              - -s -w
              - -extldflags "-static"
            main: ./cmd/jobs/email_prober
            fromImage: golang:1.23-bullseye

        - image: dinner-done-better-job-meal-plan-finalizer
          context: backend
          ko:
            dir: .
            flags:
              - -trimpath
            ldflags:
              - -s -w
              - -extldflags "-static"
            main: ./cmd/jobs/meal_plan_finalizer
            fromImage: golang:1.23-bullseye

        - image: dinner-done-better-job-meal-plan-grocery-list-init
          context: backend
          ko:
            dir: .
            flags:
              - -trimpath
            ldflags:
              - -s -w
              - -extldflags "-static"
            main: ./cmd/jobs/meal_plan_grocery_list_initializer
            fromImage: golang:1.23-bullseye

        - image: dinner-done-better-job-meal-plan-task-creator
          context: backend
          ko:
            dir: .
            flags:
              - -trimpath
            ldflags:
              - -s -w
              - -extldflags "-static"
            main: ./cmd/jobs/meal_plan_task_creator
            fromImage: golang:1.23-bullseye

        - image: dinner-done-better-job-search-data-index-scheduler
          context: backend
          ko:
            dir: .
            flags:
              - -trimpath
            ldflags:
              - -s -w
              - -extldflags "-static"
            main: ./cmd/jobs/search_data_index_scheduler
            fromImage: golang:1.23-bullseye

          # NOTE: no cmd/functions here

          # frontend artifacts
        - image: dinner-done-better-webapp
          context: ./frontend
          docker:
            dockerfile: ./apps/web/Dockerfile

        - image: dinner-done-better-admin-app
          context: ./frontend
          docker:
            dockerfile: ./apps/admin/Dockerfile

        - image: dinner-done-better-landing
          context: ./frontend
          docker:
            dockerfile: ./apps/landing/Dockerfile

    manifests:
      kustomize:
        paths:
          - backend/deploy/kustomize/environments/localdev
          - frontend/deploy/kustomize/environments/localdev
      output: ./deploy/environments/localdev/generated.yaml

    deploy:
      kubeContext: docker-desktop
      kubectl:
        defaultNamespace: localdev
      helm:
        releases:
          - name: postgres
            namespace: localdev
            createNamespace: true
            remoteChart: oci://registry-1.docker.io/bitnamicharts/postgresql
            version: 16.1.2
            overrides:
              global:
                postgresql:
                  auth:
                    username: dbuser
                    password: hunter2
                    database: dinner-done-better

          - name: redis
            namespace: localdev
            createNamespace: true
            remoteChart: oci://registry-1.docker.io/bitnamicharts/redis
            version: 20.2.1
            overrides:
              architecture: standalone

          # metrics storage
          - name: prometheus
            namespace: localdev
            createNamespace: true
            # repo: https://prometheus-community.github.io/helm-charts
            remoteChart: prometheus/prometheus
            version: 26.0.0
            overrides:
              alertmanager:
                enabled: false
              kube-state-metrics:
                enabled: false
              prometheus-node-exporter:
                enabled: false
              prometheus-pushgateway:
                enabled: false
              server:
                service:
                  servicePort: 3001
              serverFiles:
                prometheus.yml:
                  rule_files:
                    - /etc/config/recording_rules.yml
                    - /etc/config/alerting_rules.yml

                  scrape_configs:
#                    # A scrape configuration for running Prometheus on a Kubernetes cluster.
#                    # This uses separate scrape configs for cluster components (i.e. API server, node)
#                    # and services to allow each to use different authentication configs.
#                    #
#                    # Kubernetes labels will be added as Prometheus labels on metrics via the
#                    # `labelmap` relabeling action.
#
#                    # Scrape config for API servers.
#                    #
#                    # Kubernetes exposes API servers as endpoints to the default/kubernetes
#                    # service so this uses `endpoints` role and uses relabelling to only keep
#                    # the endpoints associated with the default/kubernetes service using the
#                    # default named port `https`. This works for single API server deployments as
#                    # well as HA API server deployments.
#                    - job_name: 'kubernetes-apiservers'
#
#                      kubernetes_sd_configs:
#                        - role: endpoints
#
#                      # Default to scraping over https. If required, just disable this or change to
#                      # `http`.
#                      scheme: https
#
#                      # This TLS & bearer token file config is used to connect to the actual scrape
#                      # endpoints for cluster components. This is separate to discovery auth
#                      # configuration because discovery & scraping are two separate concerns in
#                      # Prometheus. The discovery auth config is automatic if Prometheus runs inside
#                      # the cluster. Otherwise, more config options have to be provided within the
#                      # <kubernetes_sd_config>.
#                      tls_config:
#                        ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
#                        # If your node certificates are self-signed or use a different CA to the
#                        # master CA, then disable certificate verification below. Note that
#                        # certificate verification is an integral part of a secure infrastructure
#                        # so this should only be disabled in a controlled environment. You can
#                        # disable certificate verification by uncommenting the line below.
#                        #
#                        insecure_skip_verify: true
#                      bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
#
#                      # Keep only the default/kubernetes service endpoints for the https port. This
#                      # will add targets for each API server which Kubernetes adds an endpoint to
#                      # the default/kubernetes service.
#                      relabel_configs:
#                        - source_labels: [ __meta_kubernetes_namespace, __meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name ]
#                          action: keep
#                          regex: default;kubernetes;https
#
#                    - job_name: 'kubernetes-nodes'
#
#                      # Default to scraping over https. If required, just disable this or change to
#                      # `http`.
#                      scheme: https
#
#                      # This TLS & bearer token file config is used to connect to the actual scrape
#                      # endpoints for cluster components. This is separate to discovery auth
#                      # configuration because discovery & scraping are two separate concerns in
#                      # Prometheus. The discovery auth config is automatic if Prometheus runs inside
#                      # the cluster. Otherwise, more config options have to be provided within the
#                      # <kubernetes_sd_config>.
#                      tls_config:
#                        ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
#                        # If your node certificates are self-signed or use a different CA to the
#                        # master CA, then disable certificate verification below. Note that
#                        # certificate verification is an integral part of a secure infrastructure
#                        # so this should only be disabled in a controlled environment. You can
#                        # disable certificate verification by uncommenting the line below.
#                        #
#                        insecure_skip_verify: true
#                      bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
#
#                      kubernetes_sd_configs:
#                        - role: node
#
#                      relabel_configs:
#                        - action: labelmap
#                          regex: __meta_kubernetes_node_label_(.+)
#                        - target_label: __address__
#                          replacement: kubernetes.default.svc:443
#                        - source_labels: [ __meta_kubernetes_node_name ]
#                          regex: (.+)
#                          target_label: __metrics_path__
#                          replacement: /api/v1/nodes/$1/proxy/metrics
#
#                    # Scrape config for service endpoints.
#                    #
#                    # The relabeling allows the actual service scrape endpoint to be configured
#                    # via the following annotations:
#                    #
#                    # * `prometheus.io/scrape`: Only scrape services that have a value of
#                    # `true`, except if `prometheus.io/scrape-slow` is set to `true` as well.
#                    # * `prometheus.io/scheme`: If the metrics endpoint is secured then you will need
#                    # to set this to `https` & most likely set the `tls_config` of the scrape config.
#                    # * `prometheus.io/path`: If the metrics path is not `/metrics` override this.
#                    # * `prometheus.io/port`: If the metrics are exposed on a different port to the
#                    # service then set this appropriately.
#                    # * `prometheus.io/param_<parameter>`: If the metrics endpoint uses parameters
#                    # then you can set any parameter
#                    - job_name: 'kubernetes-service-endpoints'
#                      honor_labels: true
#
#                      kubernetes_sd_configs:
#                        - role: endpoints
#
#                      relabel_configs:
#                        - source_labels: [ __meta_kubernetes_service_annotation_prometheus_io_scrape ]
#                          action: keep
#                          regex: true
#                        - source_labels: [ __meta_kubernetes_service_annotation_prometheus_io_scrape_slow ]
#                          action: drop
#                          regex: true
#                        - source_labels: [ __meta_kubernetes_service_annotation_prometheus_io_scheme ]
#                          action: replace
#                          target_label: __scheme__
#                          regex: (https?)
#                        - source_labels: [ __meta_kubernetes_service_annotation_prometheus_io_path ]
#                          action: replace
#                          target_label: __metrics_path__
#                          regex: (.+)
#                        - source_labels: [ __address__, __meta_kubernetes_service_annotation_prometheus_io_port ]
#                          action: replace
#                          target_label: __address__
#                          regex: (.+?)(?::\d+)?;(\d+)
#                          replacement: $1:$2
#                        - action: labelmap
#                          regex: __meta_kubernetes_service_annotation_prometheus_io_param_(.+)
#                          replacement: __param_$1
#                        - action: labelmap
#                          regex: __meta_kubernetes_service_label_(.+)
#                        - source_labels: [ __meta_kubernetes_namespace ]
#                          action: replace
#                          target_label: namespace
#                        - source_labels: [ __meta_kubernetes_service_name ]
#                          action: replace
#                          target_label: service
#                        - source_labels: [ __meta_kubernetes_pod_node_name ]
#                          action: replace
#                          target_label: node
#
#                    # Example scrape config for pods
#                    #
#                    # The relabeling allows the actual pod scrape endpoint to be configured via the
#                    # following annotations:
#                    #
#                    # * `prometheus.io/scrape`: Only scrape pods that have a value of `true`,
#                    # except if `prometheus.io/scrape-slow` is set to `true` as well.
#                    # * `prometheus.io/scheme`: If the metrics endpoint is secured then you will need
#                    # to set this to `https` & most likely set the `tls_config` of the scrape config.
#                    # * `prometheus.io/path`: If the metrics path is not `/metrics` override this.
#                    # * `prometheus.io/port`: Scrape the pod on the indicated port instead of the default of `9102`.
#                    - job_name: 'kubernetes-pods'
#                      honor_labels: true
#
#                      kubernetes_sd_configs:
#                        - role: pod
#
#                      relabel_configs:
#                        - source_labels: [ __meta_kubernetes_pod_annotation_prometheus_io_scrape ]
#                          action: keep
#                          regex: true
#                        - source_labels: [ __meta_kubernetes_pod_annotation_prometheus_io_scrape_slow ]
#                          action: drop
#                          regex: true
#                        - source_labels: [ __meta_kubernetes_pod_annotation_prometheus_io_scheme ]
#                          action: replace
#                          regex: (https?)
#                          target_label: __scheme__
#                        - source_labels: [ __meta_kubernetes_pod_annotation_prometheus_io_path ]
#                          action: replace
#                          target_label: __metrics_path__
#                          regex: (.+)
#                        - source_labels: [ __meta_kubernetes_pod_annotation_prometheus_io_port, __meta_kubernetes_pod_ip ]
#                          action: replace
#                          regex: (\d+);(([A-Fa-f0-9]{1,4}::?){1,7}[A-Fa-f0-9]{1,4})
#                          replacement: '[$2]:$1'
#                          target_label: __address__
#                        - source_labels: [ __meta_kubernetes_pod_annotation_prometheus_io_port, __meta_kubernetes_pod_ip ]
#                          action: replace
#                          regex: (\d+);((([0-9]+?)(\.|$)){4})
#                          replacement: $2:$1
#                          target_label: __address__
#                        - action: labelmap
#                          regex: __meta_kubernetes_pod_annotation_prometheus_io_param_(.+)
#                          replacement: __param_$1
#                        - action: labelmap
#                          regex: __meta_kubernetes_pod_label_(.+)
#                        - source_labels: [ __meta_kubernetes_namespace ]
#                          action: replace
#                          target_label: namespace
#                        - source_labels: [ __meta_kubernetes_pod_name ]
#                          action: replace
#                          target_label: pod
#                        - source_labels: [ __meta_kubernetes_pod_phase ]
#                          regex: Pending|Succeeded|Failed|Completed
#                          action: drop
#                        - source_labels: [ __meta_kubernetes_pod_node_name ]
#                          action: replace
#                          target_label: node

          # o11y dashboard
          - name: grafana
            namespace: localdev
            createNamespace: true
            # repo: https://grafana.github.io/helm-charts
            remoteChart: grafana/grafana
            version: 8.6.3
            overrides:
              service:
                port: 3000
                targetPort: 3000
              ingress:
                enabled: true
              adminUser: "admin"
              adminPassword: "hunter2"
              datasources:
                datasources.yaml:
                  apiVersion: 1
                  datasources:
                    - name: Postgres
                      type: postgres
                      access: proxy
                      orgId: 1
                      isDefault: false
                      version: 1
                      editable: true
                      url: postgres-postgresql.localdev.svc.cluster.local:5432
                      # db creds
                      database: dinner-done-better
                      user: dbuser
                      secureJsonData:
                        password: 'hunter2'
                      jsonData:
                        database: dinner-done-better
                        sslmode: 'disable'
                    - name: Prometheus
                      type: prometheus
                      access: proxy
                      orgId: 1
                      url: http://prometheus-server.localdev.svc.cluster.local:3001
                      isDefault: false
                      version: 1
                      editable: true
                    - name: Loki
                      type: loki
                      access: proxy
                      orgId: 1
                      url: http://loki.localdev.svc.cluster.local:3100
                      isDefault: false
                      version: 1
                      editable: true
                    - name: Tempo
                      type: tempo
                      access: proxy
                      orgId: 1
                      url: http://tempo.localdev.svc.cluster.local:3100
                      isDefault: false
                      version: 1
                      editable: true
              dashboards: {}
#               default:
#                 some-dashboard:
#                   json: |
#                     $RAW_JSON
#               custom-dashboard:
#                 file: dashboards/custom-dashboard.json

          # log storage
          - name: loki
            namespace: localdev
            createNamespace: true
            # repo: https://grafana.github.io/helm-charts
            remoteChart: grafana/loki
            version: 6.22.0
            overrides:
              loki:
                auth_enabled: false
                commonConfig:
                  replication_factor: 1
                schemaConfig:
                  configs:
                    - from: "2024-04-01"
                      store: tsdb
                      object_store: s3
                      schema: v13
                      index:
                        prefix: loki_index_
                        period: 24h
                pattern_ingester:
                  enabled: true
                limits_config:
                  allow_structured_metadata: true
                  volume_enabled: true
                  retention_period: 24h
                compactor:
                  retention_enabled: true
                  delete_request_store: s3
                ruler:
                  enable_api: true
              minio:
                enabled: true
              lokiCanary:
                enabled: false
              gateway:
                enabled: false
              deploymentMode: SingleBinary
              singleBinary:
                replicas: 0
                autoscaling:
                  enabled: false
                  maxReplicas: 1 # just in case
              backend:
                replicas: 0
              read:
                replicas: 0
              write:
                replicas: 0
              ingester:
                replicas: 0
                zoneAwareReplication:
                  enabled: false
              ruler:
                enabled: false
              test:
                enabled: false
              querier:
                replicas: 0
              queryFrontend:
                replicas: 0
              queryScheduler:
                replicas: 0
              distributor:
                replicas: 0
              compactor:
                replicas: 0
              indexGateway:
                replicas: 0
              bloomCompactor:
                replicas: 0
              bloomGateway:
                replicas: 0
              memcachedExporter:
                enabled: false
              resultsCache:
                enabled: false
              chunksCache:
                enabled: false

          # tracing data storage
          - name: tempo
            namespace: localdev
            createNamespace: true
            # repo: https://grafana.github.io/helm-charts
            remoteChart: grafana/tempo
            version: 1.14.0

    portForward:
      - resourceType: Service
        resourceName: dinner-done-better-admin-app-svc
        namespace: localdev
        port: 7000
      - resourceType: Service
        resourceName: dinner-done-better-api-svc
        namespace: localdev
        port: 8000
      - resourceType: Service
        resourceName: dinner-done-better-webapp-svc
        namespace: localdev
        port: 9000
      - resourceType: Service
        resourceName: dinner-done-better-landing-svc
        namespace: localdev
        port: 10000
      - resourceType: Service
        resourceName: postgres-postgresql
        namespace: localdev
        port: 5432
      - resourceType: Service
        resourceName: grafana
        namespace: localdev
        port: 3000